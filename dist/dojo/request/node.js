/**
 * dojo - A version of dojo.js framework that ported to running on skylarkjs.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/dojo/
 * @license MIT
 */
define(["require","./util","./handlers","../errors/RequestTimeoutError","../node!http","../node!https","../node!url","../node!stream"],function(e,t,o,s,r,n,a,i){var p=i.Stream,c={method:"GET",query:null,data:void 0,headers:{}};function u(e,i){var u=t.parseArgs(e,t.deepCreate(c,i),i&&i.data instanceof p);e=u.url,i=u.options;var d=t.deferred(u,function(e,t){t.clientRequest.abort()});e=a.parse(e);var h=u.requestOptions={hostname:e.hostname,port:e.port,socketPath:i.socketPath,method:i.method,headers:i.headers,agent:i.agent,pfx:i.pfx,key:i.key,passphrase:i.passphrase,cert:i.cert,ca:i.ca,ciphers:i.ciphers,rejectUnauthorized:!1!==i.rejectUnauthorized};e.path&&(h.path=e.path),(i.user||i.password)&&(h.auth=(i.user||"")+":"+(i.password||""));var l=u.clientRequest=("https:"===e.protocol?n:r).request(h);if(i.socketOptions&&("timeout"in i.socketOptions&&l.setTimeout(i.socketOptions.timeout),"noDelay"in i.socketOptions&&l.setNoDelay(i.socketOptions.noDelay),"keepAlive"in i.socketOptions)){var m=i.socketOptions.keepAlive;l.setKeepAlive(m>=0,m||0)}if(l.on("socket",function(){u.hasSocket=!0,d.progress(u)}),l.on("response",function(e){u.clientResponse=e,u.status=e.statusCode,u.getHeader=function(t){return e.headers[t.toLowerCase()]||null};var t=[];e.on("data",function(e){t.push(e)}),e.on("end",function(){f&&clearTimeout(f),u.text=t.join("");try{o(u),d.resolve(u)}catch(e){d.reject(e)}})}),l.on("error",d.reject),i.data?"string"==typeof i.data?l.end(i.data):i.data.pipe(l):l.end(),i.timeout)var f=setTimeout(function(){d.cancel(new s(u))},i.timeout);return d.promise}return t.addCommonMethods(u),u});
//# sourceMappingURL=../sourcemaps/request/node.js.map
