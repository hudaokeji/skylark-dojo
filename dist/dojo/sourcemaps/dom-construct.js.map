{"version":3,"sources":["dom-construct.js"],"names":["define","exports","dojo","has","win","dom","attr","html5domfix","tagWrap","option","tbody","thead","tfoot","tr","td","th","legend","caption","colgroup","col","li","reTag","masterNode","masterNum","masterName","_scopeName","param","hasOwnProperty","tw","pre","join","post","reverse","_insertBefore","node","ref","parent","parentNode","insertBefore","doc","__dojo_html5_tested","div","create","innerHTML","style","visibility","body","childNodes","length","replace","n","createElement","destroy","toDom","frag","masterId","wrap","i","fc","df","match","tag","toLowerCase","master","firstChild","removeChild","createDocumentFragment","appendChild","place","refNode","position","byId","test","ownerDocument","cn","lastChild","nextSibling","_insertAfter","replaceChild","empty","attrs","pos","set","_empty","e","c","canHaveChildren","removeNode","_destroy"],"mappings":"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","file":"../dom-construct.js","sourcesContent":["define([\"exports\", \"./_base/kernel\", \"./sniff\", \"./_base/window\", \"./dom\", \"./dom-attr\"],\r\n\t\tfunction(exports, dojo, has, win, dom, attr){\r\n\t// module:\r\n\t//\t\tdojo/dom-construct\r\n\t// summary:\r\n\t//\t\tThis module defines the core dojo DOM construction API.\r\n\r\n\t// TODOC: summary not showing up in output, see https://github.com/csnover/js-doc-parse/issues/42\r\n\r\n\t// support stuff for toDom()\r\n\tvar tagWrap = {\r\n\t\t\toption: [\"select\"],\r\n\t\t\ttbody: [\"table\"],\r\n\t\t\tthead: [\"table\"],\r\n\t\t\ttfoot: [\"table\"],\r\n\t\t\ttr: [\"table\", \"tbody\"],\r\n\t\t\ttd: [\"table\", \"tbody\", \"tr\"],\r\n\t\t\tth: [\"table\", \"thead\", \"tr\"],\r\n\t\t\tlegend: [\"fieldset\"],\r\n\t\t\tcaption: [\"table\"],\r\n\t\t\tcolgroup: [\"table\"],\r\n\t\t\tcol: [\"table\", \"colgroup\"],\r\n\t\t\tli: [\"ul\"]\r\n\t\t},\r\n\t\treTag = /<\\s*([\\w\\:]+)/,\r\n\t\tmasterNode = {}, masterNum = 0,\r\n\t\tmasterName = \"__\" + dojo._scopeName + \"ToDomId\";\r\n\r\n\t// generate start/end tag strings to use\r\n\t// for the injection for each special tag wrap case.\r\n\tfor(var param in tagWrap){\r\n\t\tif(tagWrap.hasOwnProperty(param)){\r\n\t\t\tvar tw = tagWrap[param];\r\n\t\t\ttw.pre = param == \"option\" ? '<select multiple=\"multiple\">' : \"<\" + tw.join(\"><\") + \">\";\r\n\t\t\ttw.post = \"</\" + tw.reverse().join(\"></\") + \">\";\r\n\t\t\t// the last line is destructive: it reverses the array,\r\n\t\t\t// but we don't care at this point\r\n\t\t}\r\n\t}\r\n\r\n\tvar html5domfix;\r\n\tif(has(\"ie\") <= 8){\r\n\t\thtml5domfix = function(doc){\r\n\t\t\tdoc.__dojo_html5_tested = \"yes\";\r\n\t\t\tvar div = create('div', {innerHTML: \"<nav>a</nav>\", style: {visibility: \"hidden\"}}, doc.body);\r\n\t\t\tif(div.childNodes.length !== 1){\r\n\t\t\t\t('abbr article aside audio canvas details figcaption figure footer header ' +\r\n\t\t\t\t'hgroup mark meter nav output progress section summary time video').replace(\r\n\t\t\t\t\t/\\b\\w+\\b/g, function(n){\r\n\t\t\t\t\t\tdoc.createElement(n);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tdestroy(div);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _insertBefore(/*DomNode*/ node, /*DomNode*/ ref){\r\n\t\tvar parent = ref.parentNode;\r\n\t\tif(parent){\r\n\t\t\tparent.insertBefore(node, ref);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _insertAfter(/*DomNode*/ node, /*DomNode*/ ref){\r\n\t\t// summary:\r\n\t\t//\t\tTry to insert node after ref\r\n\t\tvar parent = ref.parentNode;\r\n\t\tif(parent){\r\n\t\t\tif(parent.lastChild == ref){\r\n\t\t\t\tparent.appendChild(node);\r\n\t\t\t}else{\r\n\t\t\t\tparent.insertBefore(node, ref.nextSibling);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texports.toDom = function toDom(frag, doc){\r\n\t\t// summary:\r\n\t\t//\t\tinstantiates an HTML fragment returning the corresponding DOM.\r\n\t\t// frag: String\r\n\t\t//\t\tthe HTML fragment\r\n\t\t// doc: DocumentNode?\r\n\t\t//\t\toptional document to use when creating DOM nodes, defaults to\r\n\t\t//\t\tdojo/_base/window.doc if not specified.\r\n\t\t// returns:\r\n\t\t//\t\tDocument fragment, unless it's a single node in which case it returns the node itself\r\n\t\t// example:\r\n\t\t//\t\tCreate a table row:\r\n\t\t//\t|\trequire([\"dojo/dom-construct\"], function(domConstruct){\r\n\t\t//\t|\t\tvar tr = domConstruct.toDom(\"<tr><td>First!</td></tr>\");\r\n\t\t//\t|\t});\r\n\r\n\t\tdoc = doc || win.doc;\r\n\t\tvar masterId = doc[masterName];\r\n\t\tif(!masterId){\r\n\t\t\tdoc[masterName] = masterId = ++masterNum + \"\";\r\n\t\t\tmasterNode[masterId] = doc.createElement(\"div\");\r\n\t\t}\r\n\r\n\t\tif(has(\"ie\") <= 8){\r\n\t\t\tif(!doc.__dojo_html5_tested && doc.body){\r\n\t\t\t\thtml5domfix(doc);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// make sure the frag is a string.\r\n\t\tfrag += \"\";\r\n\r\n\t\t// find the starting tag, and get node wrapper\r\n\t\tvar match = frag.match(reTag),\r\n\t\t\ttag = match ? match[1].toLowerCase() : \"\",\r\n\t\t\tmaster = masterNode[masterId],\r\n\t\t\twrap, i, fc, df;\r\n\t\tif(match && tagWrap[tag]){\r\n\t\t\twrap = tagWrap[tag];\r\n\t\t\tmaster.innerHTML = wrap.pre + frag + wrap.post;\r\n\t\t\tfor(i = wrap.length; i; --i){\r\n\t\t\t\tmaster = master.firstChild;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tmaster.innerHTML = frag;\r\n\t\t}\r\n\r\n\t\t// one node shortcut => return the node itself\r\n\t\tif(master.childNodes.length == 1){\r\n\t\t\treturn master.removeChild(master.firstChild); // DOMNode\r\n\t\t}\r\n\r\n\t\t// return multiple nodes as a document fragment\r\n\t\tdf = doc.createDocumentFragment();\r\n\t\twhile((fc = master.firstChild)){ // intentional assignment\r\n\t\t\tdf.appendChild(fc);\r\n\t\t}\r\n\t\treturn df; // DocumentFragment\r\n\t};\r\n\r\n\texports.place = function place(node, refNode, position){\r\n\t\t// summary:\r\n\t\t//\t\tAttempt to insert node into the DOM, choosing from various positioning options.\r\n\t\t//\t\tReturns the first argument resolved to a DOM node.\r\n\t\t// node: DOMNode|DocumentFragment|String\r\n\t\t//\t\tid or node reference, or HTML fragment starting with \"<\" to place relative to refNode\r\n\t\t// refNode: DOMNode|String\r\n\t\t//\t\tid or node reference to use as basis for placement\r\n\t\t// position: String|Number?\r\n\t\t//\t\tstring noting the position of node relative to refNode or a\r\n\t\t//\t\tnumber indicating the location in the childNodes collection of refNode.\r\n\t\t//\t\tAccepted string values are:\r\n\t\t//\r\n\t\t//\t\t- before\r\n\t\t//\t\t- after\r\n\t\t//\t\t- replace\r\n\t\t//\t\t- only\r\n\t\t//\t\t- first\r\n\t\t//\t\t- last\r\n\t\t//\r\n\t\t//\t\t\"first\" and \"last\" indicate positions as children of refNode, \"replace\" replaces refNode,\r\n\t\t//\t\t\"only\" replaces all children.  position defaults to \"last\" if not specified\r\n\t\t// returns: DOMNode\r\n\t\t//\t\tReturned values is the first argument resolved to a DOM node.\r\n\t\t//\r\n\t\t//\t\t.place() is also a method of `dojo/NodeList`, allowing `dojo/query` node lookups.\r\n\t\t// example:\r\n\t\t//\t\tPlace a node by string id as the last child of another node by string id:\r\n\t\t//\t|\trequire([\"dojo/dom-construct\"], function(domConstruct){\r\n\t\t//\t|\t\tdomConstruct.place(\"someNode\", \"anotherNode\");\r\n\t\t//\t|\t});\r\n\t\t// example:\r\n\t\t//\t\tPlace a node by string id before another node by string id\r\n\t\t//\t|\trequire([\"dojo/dom-construct\"], function(domConstruct){\r\n\t\t//\t|\t\tdomConstruct.place(\"someNode\", \"anotherNode\", \"before\");\r\n\t\t//\t|\t});\r\n\t\t// example:\r\n\t\t//\t\tCreate a Node, and place it in the body element (last child):\r\n\t\t//\t|\trequire([\"dojo/dom-construct\", \"dojo/_base/window\"\r\n\t\t//\t|\t], function(domConstruct, win){\r\n\t\t//\t|\t\tdomConstruct.place(\"<div></div>\", win.body());\r\n\t\t//\t|\t});\r\n\t\t// example:\r\n\t\t//\t\tPut a new LI as the first child of a list by id:\r\n\t\t//\t|\trequire([\"dojo/dom-construct\"], function(domConstruct){\r\n\t\t//\t|\t\tdomConstruct.place(\"<li></li>\", \"someUl\", \"first\");\r\n\t\t//\t|\t});\r\n\r\n\t\trefNode = dom.byId(refNode);\r\n\t\tif(typeof node == \"string\"){ // inline'd type check\r\n\t\t\tnode = /^\\s*</.test(node) ? exports.toDom(node, refNode.ownerDocument) : dom.byId(node);\r\n\t\t}\r\n\t\tif(typeof position == \"number\"){ // inline'd type check\r\n\t\t\tvar cn = refNode.childNodes;\r\n\t\t\tif(!cn.length || cn.length <= position){\r\n\t\t\t\trefNode.appendChild(node);\r\n\t\t\t}else{\r\n\t\t\t\t_insertBefore(node, cn[position < 0 ? 0 : position]);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tswitch(position){\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\t_insertBefore(node, refNode);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\":\r\n\t\t\t\t\t_insertAfter(node, refNode);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"replace\":\r\n\t\t\t\t\trefNode.parentNode.replaceChild(node, refNode);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"only\":\r\n\t\t\t\t\texports.empty(refNode);\r\n\t\t\t\t\trefNode.appendChild(node);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tif(refNode.firstChild){\r\n\t\t\t\t\t\t_insertBefore(node, refNode.firstChild);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// else fallthrough...\r\n\t\t\t\tdefault: // aka: last\r\n\t\t\t\t\trefNode.appendChild(node);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node; // DomNode\r\n\t};\r\n\r\n\tvar create = exports.create = function create(/*DOMNode|String*/ tag, /*Object*/ attrs, /*DOMNode|String?*/ refNode, /*String?*/ pos){\r\n\t\t// summary:\r\n\t\t//\t\tCreate an element, allowing for optional attribute decoration\r\n\t\t//\t\tand placement.\r\n\t\t// description:\r\n\t\t//\t\tA DOM Element creation function. A shorthand method for creating a node or\r\n\t\t//\t\ta fragment, and allowing for a convenient optional attribute setting step,\r\n\t\t//\t\tas well as an optional DOM placement reference.\r\n\t\t//\r\n\t\t//\t\tAttributes are set by passing the optional object through `dojo/dom-attr.set`.\r\n\t\t//\t\tSee `dojo/dom-attr.set` for noted caveats and nuances, and API if applicable.\r\n\t\t//\r\n\t\t//\t\tPlacement is done via `dojo/dom-construct.place`, assuming the new node to be\r\n\t\t//\t\tthe action node, passing along the optional reference node and position.\r\n\t\t// tag: DOMNode|String\r\n\t\t//\t\tA string of the element to create (eg: \"div\", \"a\", \"p\", \"li\", \"script\", \"br\"),\r\n\t\t//\t\tor an existing DOM node to process.\r\n\t\t// attrs: Object\r\n\t\t//\t\tAn object-hash of attributes to set on the newly created node.\r\n\t\t//\t\tCan be null, if you don't want to set any attributes/styles.\r\n\t\t//\t\tSee: `dojo/dom-attr.set` for a description of available attributes.\r\n\t\t// refNode: DOMNode|String?\r\n\t\t//\t\tOptional reference node. Used by `dojo/dom-construct.place` to place the newly created\r\n\t\t//\t\tnode somewhere in the dom relative to refNode. Can be a DomNode reference\r\n\t\t//\t\tor String ID of a node.\r\n\t\t// pos: String?\r\n\t\t//\t\tOptional positional reference. Defaults to \"last\" by way of `dojo/domConstruct.place`,\r\n\t\t//\t\tthough can be set to \"first\",\"after\",\"before\",\"last\", \"replace\" or \"only\"\r\n\t\t//\t\tto further control the placement of the new node relative to the refNode.\r\n\t\t//\t\t'refNode' is required if a 'pos' is specified.\r\n\t\t// example:\r\n\t\t//\t\tCreate a DIV:\r\n\t\t//\t|\trequire([\"dojo/dom-construct\"], function(domConstruct){\r\n\t\t//\t|\t\tvar n = domConstruct.create(\"div\");\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tCreate a DIV with content:\r\n\t\t//\t|\trequire([\"dojo/dom-construct\"], function(domConstruct){\r\n\t\t//\t|\t\tvar n = domConstruct.create(\"div\", { innerHTML:\"<p>hi</p>\" });\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tPlace a new DIV in the BODY, with no attributes set\r\n\t\t//\t|\trequire([\"dojo/dom-construct\", \"dojo/_base/window\"], function(domConstruct, win){\r\n\t\t//\t|\t\tvar n = domConstruct.create(\"div\", null, win.body());\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tCreate an UL, and populate it with LI's. Place the list as the first-child of a\r\n\t\t//\t\tnode with id=\"someId\":\r\n\t\t//\t|\trequire([\"dojo/dom-construct\", \"dojo/_base/array\"],\r\n\t\t//\t|\tfunction(domConstruct, arrayUtil){\r\n\t\t//\t|\t\tvar ul = domConstruct.create(\"ul\", null, \"someId\", \"first\");\r\n\t\t//\t|\t\tvar items = [\"one\", \"two\", \"three\", \"four\"];\r\n\t\t//\t|\t\tarrayUtil.forEach(items, function(data){\r\n\t\t//\t|\t\t\tdomConstruct.create(\"li\", { innerHTML: data }, ul);\r\n\t\t//\t|\t\t});\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tCreate an anchor, with an href. Place in BODY:\r\n\t\t//\t|\trequire([\"dojo/dom-construct\", \"dojo/_base/window\"], function(domConstruct, win){\r\n\t\t//\t|\t\tdomConstruct.create(\"a\", { href:\"foo.html\", title:\"Goto FOO!\" }, win.body());\r\n\t\t//\t|\t});\r\n\r\n\t\tvar doc = win.doc;\r\n\t\tif(refNode){\r\n\t\t\trefNode = dom.byId(refNode);\r\n\t\t\tdoc = refNode.ownerDocument;\r\n\t\t}\r\n\t\tif(typeof tag == \"string\"){ // inline'd type check\r\n\t\t\ttag = doc.createElement(tag);\r\n\t\t}\r\n\t\tif(attrs){ attr.set(tag, attrs); }\r\n\t\tif(refNode){ exports.place(tag, refNode, pos); }\r\n\t\treturn tag; // DomNode\r\n\t};\r\n\r\n\tfunction _empty(/*DomNode*/ node){\r\n\t\t// TODO: remove this if() block in 2.0 when we no longer have to worry about IE memory leaks,\r\n\t\t// and then uncomment the emptyGrandchildren() test case from html.html.\r\n\t\t// Note that besides fixing #16957, using removeChild() is actually faster than setting node.innerHTML,\r\n\t\t// see http://jsperf.com/clear-dom-node.\r\n\t\tif(\"innerHTML\" in node){\r\n\t\t\ttry{\r\n\t\t\t\t// fast path\r\n\t\t\t\tnode.innerHTML = \"\";\r\n\t\t\t\treturn;\r\n\t\t\t}catch(e){\r\n\t\t\t\t// innerHTML is readOnly (e.g. TABLE (sub)elements in quirks mode)\r\n\t\t\t\t// Fall through (saves bytes)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// SVG/strict elements don't support innerHTML\r\n\t\tfor(var c; c = node.lastChild;){ // intentional assignment\r\n\t\t\tnode.removeChild(c);\r\n\t\t}\r\n\t}\r\n\r\n\texports.empty = function empty(/*DOMNode|String*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tsafely removes all children of the node.\r\n\t\t// node: DOMNode|String\r\n\t\t//\t\ta reference to a DOM node or an id.\r\n\t\t// example:\r\n\t\t//\t\tDestroy node's children byId:\r\n\t\t//\t|\trequire([\"dojo/dom-construct\"], function(domConstruct){\r\n\t\t//\t|\t\tdomConstruct.empty(\"someId\");\r\n\t\t//\t|\t});\r\n\r\n\t\t_empty(dom.byId(node));\r\n\t};\r\n\r\n\r\n\tfunction _destroy(/*DomNode*/ node, /*DomNode*/ parent){\r\n\t\t// in IE quirks, node.canHaveChildren can be false but firstChild can be non-null (OBJECT/APPLET)\r\n\t\tif(node.firstChild){\r\n\t\t\t_empty(node);\r\n\t\t}\r\n\t\tif(parent){\r\n\t\t\t// removeNode(false) doesn't leak in IE 6+, but removeChild() and removeNode(true) are known to leak under IE 8- while 9+ is TBD.\r\n\t\t\t// In IE quirks mode, PARAM nodes as children of OBJECT/APPLET nodes have a removeNode method that does nothing and\r\n\t\t\t// the parent node has canHaveChildren=false even though removeChild correctly removes the PARAM children.\r\n\t\t\t// In IE, SVG/strict nodes don't have a removeNode method nor a canHaveChildren boolean.\r\n\t\t\thas(\"ie\") && parent.canHaveChildren && \"removeNode\" in node ? node.removeNode(false) : parent.removeChild(node);\r\n\t\t}\r\n\t}\r\n\tvar destroy = exports.destroy = function destroy(/*DOMNode|String*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tRemoves a node from its parent, clobbering it and all of its\r\n\t\t//\t\tchildren.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tRemoves a node from its parent, clobbering it and all of its\r\n\t\t//\t\tchildren. Function only works with DomNodes, and returns nothing.\r\n\t\t//\r\n\t\t// node: DOMNode|String\r\n\t\t//\t\tA String ID or DomNode reference of the element to be destroyed\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tDestroy a node byId:\r\n\t\t//\t|\trequire([\"dojo/dom-construct\"], function(domConstruct){\r\n\t\t//\t|\t\tdomConstruct.destroy(\"someId\");\r\n\t\t//\t|\t});\r\n\r\n\t\tnode = dom.byId(node);\r\n\t\tif(!node){ return; }\r\n\t\t_destroy(node, node.parentNode);\r\n\t};\r\n});\r\n"]}