{"version":3,"sources":["promise/first.js"],"names":["define","array","Deferred","when","forEach","objectOrArray","Array","key","Object","hasOwnProperty","call","push","length","resolve","deferred","valueOrPromise","reject","promise"],"mappings":";;;;;;;AAAAA,QACC,iBACA,cACA,WACE,SAASC,EAAOC,EAAUC,GAC5B,aAKA,IAAIC,EAAUH,EAAMG,QAEpB,OAAO,SAAeC,GAcrB,IAAIJ,EACJ,GAAGI,aAAyBC,MAC3BL,EAAQI,OACH,GAAGA,GAA0C,iBAAlBA,EAEhC,IAAI,IAAIE,KADRN,KACeI,EACXG,OAAOC,eAAeC,KAAKL,EAAeE,IAC5CN,EAAMU,KAAKN,EAAcE,IAK5B,IAAIN,IAAUA,EAAMW,OACnB,OAAO,IAAIV,GAAWW,UAGvB,IAAIC,EAAW,IAAIZ,EAInB,OAHAE,EAAQH,EAAO,SAASc,GACvBZ,EAAKY,EAAgBD,EAASD,QAASC,EAASE,UAE1CF,EAASG","file":"../../promise/first.js","sourcesContent":["define([\r\n\t\"../_base/array\",\r\n\t\"../Deferred\",\r\n\t\"../when\"\r\n], function(array, Deferred, when){\r\n\t\"use strict\";\r\n\r\n\t// module:\r\n\t//\t\tdojo/promise/first\r\n\r\n\tvar forEach = array.forEach;\r\n\r\n\treturn function first(objectOrArray){\r\n\t\t// summary:\r\n\t\t//\t\tTakes multiple promises and returns a new promise that is fulfilled\r\n\t\t//\t\twhen the first of these promises is fulfilled.\r\n\t\t// description:\r\n\t\t//\t\tTakes multiple promises and returns a new promise that is fulfilled\r\n\t\t//\t\twhen the first of these promises is fulfilled. Canceling the returned\r\n\t\t//\t\tpromise will *not* cancel any passed promises. The promise will be\r\n\t\t//\t\tfulfilled with the value of the first fulfilled promise.\r\n\t\t// objectOrArray: Object|Array?\r\n\t\t//\t\tThe promises are taken from the array or object values. If no value\r\n\t\t//\t\tis passed, the returned promise is resolved with an undefined value.\r\n\t\t// returns: dojo/promise/Promise\r\n\r\n\t\tvar array;\r\n\t\tif(objectOrArray instanceof Array){\r\n\t\t\tarray = objectOrArray;\r\n\t\t}else if(objectOrArray && typeof objectOrArray === \"object\"){\r\n\t\t\tarray = [];\r\n\t\t\tfor(var key in objectOrArray){\r\n\t\t\t\tif(Object.hasOwnProperty.call(objectOrArray, key)){\r\n\t\t\t\t\tarray.push(objectOrArray[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!array || !array.length){\r\n\t\t\treturn new Deferred().resolve();\r\n\t\t}\r\n\r\n\t\tvar deferred = new Deferred();\r\n\t\tforEach(array, function(valueOrPromise){\r\n\t\t\twhen(valueOrPromise, deferred.resolve, deferred.reject);\r\n\t\t});\r\n\t\treturn deferred.promise;\t// dojo/promise/Promise\r\n\t};\r\n});\r\n"]}