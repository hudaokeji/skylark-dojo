{"version":3,"sources":["debounce.js"],"names":["define","cb","wait","timer","clearTimeout","self","this","a","arguments","setTimeout","apply"],"mappings":";;;;;;;AAAAA,UAAW,WAMV,OAAO,SAASC,EAAIC,GAYnB,IAAIC,EACJ,OAAO,WACHA,GACFC,aAAaD,GAEd,IAAIE,EAAOC,KACPC,EAAIC,UACRL,EAAQM,WAAW,WAClBR,EAAGS,MAAML,EAAME,IACbL","file":"../debounce.js","sourcesContent":["define([], function(){\r\n\t// module:\r\n\t//\t\tdojo/debounce\r\n\t// summary:\r\n\t//\t\tThis module provide a debouncer\r\n\r\n\treturn function(cb, wait){\r\n\t\t// summary:\r\n\t\t//\t\tCreate a function that will only execute after `wait` milliseconds\r\n\t\t// description:\r\n\t\t//\t\tCreate a function that will only execute after `wait` milliseconds\r\n\t\t//\t\tof repeated execution. Useful for delaying some event action slightly to allow\r\n\t\t//\t\tfor rapidly-firing events such as window.resize, node.mousemove and so on.\r\n\t\t// cb: Function\r\n\t\t//\t\tA callback to fire. Like hitch() and partial(), arguments passed to the\r\n\t\t//\t\treturned function curry along to the original callback.\r\n\t\t// wait: Integer\r\n\t\t//\t\tTime to spend caching executions before actually executing.\r\n\t\tvar timer;\r\n\t\treturn function(){\r\n\t\t\tif(timer){\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t}\r\n\t\t\tvar self = this;\r\n\t\t\tvar a = arguments;\r\n\t\t\ttimer = setTimeout(function(){\r\n\t\t\t\tcb.apply(self, a);\r\n\t\t\t}, wait);\r\n\t\t};\r\n\t};\r\n});\r\n"]}