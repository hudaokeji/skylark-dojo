{"version":3,"sources":["Evented.js"],"names":["define","aspect","on","after","Evented","prototype","type","listener","parse","this","target","emit","event","args","push","apply","arguments"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,QAAS,SAASC,EAAQC,GAI5C,aACA,IAAIC,EAAQF,EAAOE,MACpB,SAASC,KA4BT,OAZAA,EAAQC,WACPH,GAAI,SAASI,EAAMC,GAClB,OAAOL,EAAGM,MAAMC,KAAMH,EAAMC,EAAU,SAASG,EAAQJ,GACtD,OAAOH,EAAMO,EAAQ,KAAOJ,EAAMC,GAAU,MAG9CI,KAAM,SAASL,EAAMM,GACpB,IAAIC,GAAQJ,MAEZ,OADAI,EAAKC,KAAKC,MAAMF,EAAMG,WACfd,EAAGS,KAAKI,MAAMb,EAAIW,KAGpBT","file":"../Evented.js","sourcesContent":["define([\"./aspect\", \"./on\"], function(aspect, on){\r\n\t// module:\r\n\t//\t\tdojo/Evented\r\n\r\n \t\"use strict\";\r\n \tvar after = aspect.after;\r\n\tfunction Evented(){\r\n\t\t// summary:\r\n\t\t//\t\tA class that can be used as a mixin or base class,\r\n\t\t//\t\tto add on() and emit() methods to a class\r\n\t\t//\t\tfor listening for events and emitting events:\r\n\t\t// example:\r\n\t\t//\t\t|\tdefine([\"dojo/Evented\", \"dojo/_base/declare\", \"dojo/Stateful\"\r\n\t\t//\t\t|\t], function(Evented, declare, Stateful){\r\n\t\t//\t\t|\t\tvar EventedStateful = declare([Evented, Stateful], {...});\r\n\t\t//\t\t|\t\tvar instance = new EventedStateful();\r\n\t\t//\t\t|\t\tinstance.on(\"open\", function(event){\r\n\t\t//\t\t|\t\t... do something with event\r\n\t\t//\t\t|\t });\r\n\t\t//\t\t|\r\n\t\t//\t\t|\tinstance.emit(\"open\", {name:\"some event\", ...});\r\n\t}\r\n\tEvented.prototype = {\r\n\t\ton: function(type, listener){\r\n\t\t\treturn on.parse(this, type, listener, function(target, type){\r\n\t\t\t\treturn after(target, 'on' + type, listener, true);\r\n\t\t\t});\r\n\t\t},\r\n\t\temit: function(type, event){\r\n\t\t\tvar args = [this];\r\n\t\t\targs.push.apply(args, arguments);\r\n\t\t\treturn on.emit.apply(on, args);\r\n\t\t}\r\n\t};\r\n\treturn Evented;\r\n});\r\n"]}