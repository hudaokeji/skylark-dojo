{"version":3,"sources":["cookie.js"],"names":["define","dojo","regexp","cookie","name","value","props","ret","c","document","arguments","length","matches","match","RegExp","escapeString","decodeURIComponent","undefined","exp","expires","d","Date","setTime","getTime","toUTCString","propName","updatedCookie","encodeURIComponent","propValue","isSupported","navigator","this","cookieEnabled"],"mappings":";;;;;;;AAAAA,QAAQ,iBAAkB,YAAa,SAASC,EAAMC,GAgGtD,OA1EAD,EAAKE,OAAS,SAAmBC,EAAkBC,EAA0BC,GA8B5E,IAAyBC,EAArBC,EAAIC,SAASN,OACjB,GAAuB,GAApBO,UAAUC,OAAY,CACxB,IAAIC,EAAUJ,EAAEK,MAAM,IAAIC,OAAO,WAAaZ,EAAOa,aAAaX,GAAQ,aAC1EG,EAAMK,EAAUI,mBAAmBJ,EAAQ,SAAMK,MAC7C,CAGJ,IAAIC,GAFJZ,EAAQA,OAEQa,QAChB,GAAiB,iBAAPD,EAAgB,CACzB,IAAIE,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAAgB,GAAJL,EAAO,GAAG,GAAG,KACrCA,EAAMZ,EAAMa,QAAUC,EAEpBF,GAAOA,EAAIM,cAAclB,EAAMa,QAAUD,EAAIM,eAGhD,IAAwCC,EAApCC,EAAgBtB,EAAO,KAD3BC,EAAQsB,mBAAmBtB,IAE3B,IAAIoB,KAAYnB,EAAM,CACrBoB,GAAiB,KAAOD,EACxB,IAAIG,EAAYtB,EAAMmB,IACL,IAAdG,IAAqBF,GAAiB,IAAME,GAEhDnB,SAASN,OAASuB,EAEnB,OAAOnB,GAGRN,EAAKE,OAAO0B,YAAc,WAczB,MAPK,kBAAmBC,YACvBC,KAAK,mBAAoB,kBACzBD,UAAUE,cAA4C,kBAA5BD,KAAK,oBAC5BD,UAAUE,eACZD,KAAK,mBAAoB,IAAKZ,SAAU,KAGnCW,UAAUE,eAGX/B,EAAKE","file":"../cookie.js","sourcesContent":["define([\"./_base/kernel\", \"./regexp\"], function(dojo, regexp){\r\n\r\n// module:\r\n//\t\tdojo/cookie\r\n\r\n/*=====\r\nvar __cookieProps = {\r\n\t// expires: Date|String|Number?\r\n\t//\t\tIf a number, the number of days from today at which the cookie\r\n\t//\t\twill expire. If a date, the date past which the cookie will expire.\r\n\t//\t\tIf expires is in the past, the cookie will be deleted.\r\n\t//\t\tIf expires is omitted or is 0, the cookie will expire when the browser closes.\r\n\t// path: String?\r\n\t//\t\tThe path to use for the cookie.\r\n\t// domain: String?\r\n\t//\t\tThe domain to use for the cookie.\r\n\t// secure: Boolean?\r\n\t//\t\tWhether to only send the cookie on secure connections\r\n};\r\n=====*/\r\n\r\n\r\ndojo.cookie = function(/*String*/name, /*String?*/ value, /*__cookieProps?*/ props){\r\n\t// summary:\r\n\t//\t\tGet or set a cookie.\r\n\t// description:\r\n\t//\t\tIf one argument is passed, returns the value of the cookie\r\n\t//\t\tFor two or more arguments, acts as a setter.\r\n\t// name:\r\n\t//\t\tName of the cookie\r\n\t// value:\r\n\t//\t\tValue for the cookie\r\n\t// props:\r\n\t//\t\tProperties for the cookie\r\n\t// example:\r\n\t//\t\tset a cookie with the JSON-serialized contents of an object which\r\n\t//\t\twill expire 5 days from now:\r\n\t//\t|\trequire([\"dojo/cookie\", \"dojo/json\"], function(cookie, json){\r\n\t//\t|\t\tcookie(\"configObj\", json.stringify(config, {expires: 5 }));\r\n\t//\t|\t});\r\n\t//\r\n\t// example:\r\n\t//\t\tde-serialize a cookie back into a JavaScript object:\r\n\t//\t|\trequire([\"dojo/cookie\", \"dojo/json\"], function(cookie, json){\r\n\t//\t|\t\tconfig = json.parse(cookie(\"configObj\"));\r\n\t//\t|\t});\r\n\t//\r\n\t// example:\r\n\t//\t\tdelete a cookie:\r\n\t//\t|\trequire([\"dojo/cookie\"], function(cookie){\r\n\t//\t|\t\tcookie(\"configObj\", null, {expires: -1});\r\n\t//\t|\t});\r\n\tvar c = document.cookie, ret;\r\n\tif(arguments.length == 1){\r\n\t\tvar matches = c.match(new RegExp(\"(?:^|; )\" + regexp.escapeString(name) + \"=([^;]*)\"));\r\n\t\tret = matches ? decodeURIComponent(matches[1]) : undefined; \r\n\t}else{\r\n\t\tprops = props || {};\r\n// FIXME: expires=0 seems to disappear right away, not on close? (FF3)  Change docs?\r\n\t\tvar exp = props.expires;\r\n\t\tif(typeof exp == \"number\"){\r\n\t\t\tvar d = new Date();\r\n\t\t\td.setTime(d.getTime() + exp*24*60*60*1000);\r\n\t\t\texp = props.expires = d;\r\n\t\t}\r\n\t\tif(exp && exp.toUTCString){ props.expires = exp.toUTCString(); }\r\n\r\n\t\tvalue = encodeURIComponent(value);\r\n\t\tvar updatedCookie = name + \"=\" + value, propName;\r\n\t\tfor(propName in props){\r\n\t\t\tupdatedCookie += \"; \" + propName;\r\n\t\t\tvar propValue = props[propName];\r\n\t\t\tif(propValue !== true){ updatedCookie += \"=\" + propValue; }\r\n\t\t}\r\n\t\tdocument.cookie = updatedCookie;\r\n\t}\r\n\treturn ret; // String|undefined\r\n};\r\n\r\ndojo.cookie.isSupported = function(){\r\n\t// summary:\r\n\t//\t\tUse to determine if the current browser supports cookies or not.\r\n\t//\r\n\t//\t\tReturns true if user allows cookies.\r\n\t//\t\tReturns false if user doesn't allow cookies.\r\n\r\n\tif(!(\"cookieEnabled\" in navigator)){\r\n\t\tthis(\"__djCookieTest__\", \"CookiesAllowed\");\r\n\t\tnavigator.cookieEnabled = this(\"__djCookieTest__\") == \"CookiesAllowed\";\r\n\t\tif(navigator.cookieEnabled){\r\n\t\t\tthis(\"__djCookieTest__\", \"\", {expires: -1});\r\n\t\t}\r\n\t}\r\n\treturn navigator.cookieEnabled;\r\n};\r\n\r\nreturn dojo.cookie;\r\n});\r\n"]}