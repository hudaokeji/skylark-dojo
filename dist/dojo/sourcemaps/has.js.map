{"version":3,"sources":["has.js"],"names":["define","require","module","has","isBrowser","window","location","document","global","this","doc","element","createElement","cache","config","name","add","test","now","force","process","versions","node","v8","load","Packages","addEventListener","navigator","maxTouchPoints","msMaxTouchPoints","screen","availWidth","innerWidth","form","attributes","length","clearElement","innerHTML","normalize","id","toAbsMid","tokens","match","i","get","skip","term","req","onLoad","parentRequire","loaded"],"mappings":";;;;;;;AAAAA,QAAQ,UAAW,UAAW,SAASC,QAASC,QAkB/C,IAAIC,EAAMF,QAAQE,KAAO,aACzB,IAAIA,EAAI,gBAAgB,CACvB,IACCC,EAEkB,oBAAVC,QACY,oBAAZC,UACY,oBAAZC,UACPF,OAAOC,UAAYA,UAAYD,OAAOE,UAAYA,SAGnDC,EAAS,WAAe,OAAOC,KAAtB,GACTC,EAAMN,GAAaG,SACnBI,EAAUD,GAAOA,EAAIE,cAAc,OACnCC,EAASX,OAAOY,QAAUZ,OAAOY,cAElCX,EAAM,SAASY,GAWd,MAA6B,mBAAfF,EAAME,GAAuBF,EAAME,GAAQF,EAAME,GAAMP,EAAQE,EAAKC,GAAYE,EAAME,KAGjGF,MAAQA,EAEZV,EAAIa,IAAM,SAASD,EAAME,EAAMC,EAAKC,GAoCnC,YADqB,IAAbN,EAAME,IAAsBI,KAAWN,EAAME,GAAOE,GACrDC,GAAOf,EAAIY,IAMnBZ,EAAIa,IAAI,eAAgBZ,GACxBD,EAAIa,IAAI,YAAgC,iBAAXI,SAAuBA,QAAQC,UAAYD,QAAQC,SAASC,MAAQF,QAAQC,SAASE,IAClHpB,EAAIa,IAAI,aAA8B,mBAARQ,OAA0C,mBAAZC,UAA6C,iBAAZA,WAC7FtB,EAAIa,IAAI,MAAOZ,GACfD,EAAIa,IAAI,qBAAsB,GAC9Bb,EAAIa,IAAI,aAAc,GAGvB,GAAGb,EAAI,gBAAgB,CAEtBA,EAAIa,IAAI,yBAA0BT,SAASmB,kBAG3CvB,EAAIa,IAAI,QAAS,iBAAkBT,UAC9B,kBAAmBA,UAAYoB,UAAUC,eAAiB,GAC3DvB,OAAOsB,UAAUE,kBAGrB1B,EAAIa,IAAI,eAAgB,iBAAkBT,UAG1CJ,EAAIa,IAAI,iBAAkB,kBAAmBT,UAC7CJ,EAAIa,IAAI,YAAa,qBAAsBW,WAG3CxB,EAAIa,IAAI,eAAgBc,OAAOC,YAAcC,YAM7C,IAAIC,EAAO1B,SAASK,cAAc,QAClCT,EAAIa,IAAI,0BAAqD,GAA1BiB,EAAKC,WAAWC,QACnDhC,EAAIa,IAAI,gCAAiCiB,EAAKC,WAAWC,OAAS,GAAKF,EAAKC,WAAWC,OAAS,IAoEjG,OAjEAhC,EAAIiC,aAAe,SAASzB,GAI3B,OADAA,EAAQ0B,UAAW,GACZ1B,GAGRR,EAAImC,UAAY,SAASC,EAAIC,GAM5B,IACCC,EAASF,EAAGG,MAAM,kBAAmBC,EAAI,EACzCC,EAAM,SAASC,GACd,IAAIC,EAAOL,EAAOE,KAClB,MAAW,KAARG,EAEK,EAGW,KAAfL,EAAOE,MACLE,GAAQ1C,EAAI2C,GAERF,KAGPA,GAAI,GACGA,EAAIC,IAINC,GAAQ,GAIlB,OADAP,EAAKK,MACQJ,EAASD,KAGC,IAApBtC,QAAQG,UACXD,EAAIqB,KAAO,SAAUT,EAAMgC,EAAKC,EAAQlC,GACjCkC,KAGP7C,EAAIqB,KAAO,SAASe,EAAIU,EAAeC,GAWnCX,EACFU,GAAeV,GAAKW,GAEpBA,KAMI/C","file":"../has.js","sourcesContent":["define([\"require\", \"module\"], function(require, module){\r\n\r\n\t// module:\r\n\t//\t\tdojo/has\r\n\t// summary:\r\n\t//\t\tDefines the has.js API and several feature tests used by dojo.\r\n\t// description:\r\n\t//\t\tThis module defines the has API as described by the project has.js with the following additional features:\r\n\t//\r\n\t//\t\t- the has test cache is exposed at has.cache.\r\n\t//\t\t- the method has.add includes a forth parameter that controls whether or not existing tests are replaced\r\n\t//\t\t- the loader's has cache may be optionally copied into this module's has cahce.\r\n\t//\r\n\t//\t\tThis module adopted from https://github.com/phiggins42/has.js; thanks has.js team!\r\n\r\n\t// try to pull the has implementation from the loader; both the dojo loader and bdLoad provide one\r\n\t// if using a foreign loader, then the has cache may be initialized via the config object for this module\r\n\t// WARNING: if a foreign loader defines require.has to be something other than the has.js API, then this implementation fail\r\n\tvar has = require.has || function(){};\r\n\tif(!has(\"dojo-has-api\")){\r\n\t\tvar\r\n\t\t\tisBrowser =\r\n\t\t\t\t// the most fundamental decision: are we in the browser?\r\n\t\t\t\ttypeof window != \"undefined\" &&\r\n\t\t\t\ttypeof location != \"undefined\" &&\r\n\t\t\t\ttypeof document != \"undefined\" &&\r\n\t\t\t\twindow.location == location && window.document == document,\r\n\r\n\t\t\t// has API variables\r\n\t\t\tglobal = (function () { return this; })(),\r\n\t\t\tdoc = isBrowser && document,\r\n\t\t\telement = doc && doc.createElement(\"DiV\"),\r\n\t\t\tcache = (module.config && module.config()) || {};\r\n\r\n\t\thas = function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the current value of the named feature.\r\n\t\t\t//\r\n\t\t\t// name: String|Integer\r\n\t\t\t//\t\tThe name (if a string) or identifier (if an integer) of the feature to test.\r\n\t\t\t//\r\n\t\t\t// description:\r\n\t\t\t//\t\tReturns the value of the feature named by name. The feature must have been\r\n\t\t\t//\t\tpreviously added to the cache by has.add.\r\n\r\n\t\t\treturn typeof cache[name] == \"function\" ? (cache[name] = cache[name](global, doc, element)) : cache[name]; // Boolean\r\n\t\t};\r\n\r\n\t\thas.cache = cache;\r\n\r\n\t\thas.add = function(name, test, now, force){\r\n\t\t\t// summary:\r\n\t\t\t//\t \tRegister a new feature test for some named feature.\r\n\t\t\t// name: String|Integer\r\n\t\t\t//\t \tThe name (if a string) or identifier (if an integer) of the feature to test.\r\n\t\t\t// test: Function\r\n\t\t\t//\t\t A test function to register. If a function, queued for testing until actually\r\n\t\t\t//\t\t needed. The test function should return a boolean indicating\r\n\t\t\t//\t \tthe presence of a feature or bug.\r\n\t\t\t// now: Boolean?\r\n\t\t\t//\t\t Optional. Omit if `test` is not a function. Provides a way to immediately\r\n\t\t\t//\t\t run the test and cache the result.\r\n\t\t\t// force: Boolean?\r\n\t\t\t//\t \tOptional. If the test already exists and force is truthy, then the existing\r\n\t\t\t//\t \ttest will be replaced; otherwise, add does not replace an existing test (that\r\n\t\t\t//\t \tis, by default, the first test advice wins).\r\n\t\t\t// example:\r\n\t\t\t//\t\tA redundant test, testFn with immediate execution:\r\n\t\t\t//\t|\thas.add(\"javascript\", function(){ return true; }, true);\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tAgain with the redundantness. You can do this in your tests, but we should\r\n\t\t\t//\t\tnot be doing this in any internal has.js tests\r\n\t\t\t//\t|\thas.add(\"javascript\", true);\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tThree things are passed to the testFunction. `global`, `document`, and a generic element\r\n\t\t\t//\t\tfrom which to work your test should the need arise.\r\n\t\t\t//\t|\thas.add(\"bug-byid\", function(g, d, el){\r\n\t\t\t//\t|\t\t// g\t== global, typically window, yadda yadda\r\n\t\t\t//\t|\t\t// d\t== document object\r\n\t\t\t//\t|\t\t// el == the generic element. a `has` element.\r\n\t\t\t//\t|\t\treturn false; // fake test, byid-when-form-has-name-matching-an-id is slightly longer\r\n\t\t\t//\t|\t});\r\n\r\n\t\t\t(typeof cache[name]==\"undefined\" || force) && (cache[name]= test);\r\n\t\t\treturn now && has(name);\r\n\t\t};\r\n\r\n\t\t// since we're operating under a loader that doesn't provide a has API, we must explicitly initialize\r\n\t\t// has as it would have otherwise been initialized by the dojo loader; use has.add to the builder\r\n\t\t// can optimize these away iff desired\r\n\t\thas.add(\"host-browser\", isBrowser);\r\n\t\thas.add(\"host-node\", (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8));\r\n\t\thas.add(\"host-rhino\", (typeof load == \"function\" && (typeof Packages == \"function\" || typeof Packages == \"object\")));\r\n\t\thas.add(\"dom\", isBrowser);\r\n\t\thas.add(\"dojo-dom-ready-api\", 1);\r\n\t\thas.add(\"dojo-sniff\", 1);\r\n\t}\r\n\r\n\tif(has(\"host-browser\")){\r\n\t\t// Common application level tests\r\n\t\thas.add(\"dom-addeventlistener\", !!document.addEventListener);\r\n\r\n\t\t// Do the device and browser have touch capability?\r\n\t\thas.add(\"touch\", \"ontouchstart\" in document\r\n\t\t\t|| (\"onpointerdown\" in document && navigator.maxTouchPoints > 0)\r\n\t\t\t|| window.navigator.msMaxTouchPoints);\r\n\r\n\t\t// Touch events support\r\n\t\thas.add(\"touch-events\", \"ontouchstart\" in document);\r\n\r\n\t\t// Pointer Events support\r\n\t\thas.add(\"pointer-events\", \"onpointerdown\" in document);\r\n\t\thas.add(\"MSPointer\", \"msMaxTouchPoints\" in navigator); //IE10 (+IE11 preview)\r\n\r\n\t\t// I don't know if any of these tests are really correct, just a rough guess\r\n\t\thas.add(\"device-width\", screen.availWidth || innerWidth);\r\n\r\n\t\t// Tests for DOMNode.attributes[] behavior:\r\n\t\t//\t - dom-attributes-explicit - attributes[] only lists explicitly user specified attributes\r\n\t\t//\t - dom-attributes-specified-flag (IE8) - need to check attr.specified flag to skip attributes user didn't specify\r\n\t\t//\t - Otherwise, in IE6-7. attributes[] will list hundreds of values, so need to do outerHTML to get attrs instead.\r\n\t\tvar form = document.createElement(\"form\");\r\n\t\thas.add(\"dom-attributes-explicit\", form.attributes.length == 0); // W3C\r\n\t\thas.add(\"dom-attributes-specified-flag\", form.attributes.length > 0 && form.attributes.length < 40);\t// IE8\r\n\t}\r\n\r\n\thas.clearElement = function(element){\r\n\t\t// summary:\r\n\t\t//\t Deletes the contents of the element passed to test functions.\r\n\t\telement.innerHTML= \"\";\r\n\t\treturn element;\r\n\t};\r\n\r\n\thas.normalize = function(id, toAbsMid){\r\n\t\t// summary:\r\n\t\t//\t Resolves id into a module id based on possibly-nested tenary expression that branches on has feature test value(s).\r\n\t\t//\r\n\t\t// toAbsMid: Function\r\n\t\t//\t Resolves a relative module id into an absolute module id\r\n\t\tvar\r\n\t\t\ttokens = id.match(/[\\?:]|[^:\\?]*/g), i = 0,\r\n\t\t\tget = function(skip){\r\n\t\t\t\tvar term = tokens[i++];\r\n\t\t\t\tif(term == \":\"){\r\n\t\t\t\t\t// empty string module name, resolves to 0\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// postfixed with a ? means it is a feature to branch on, the term is the name of the feature\r\n\t\t\t\t\tif(tokens[i++] == \"?\"){\r\n\t\t\t\t\t\tif(!skip && has(term)){\r\n\t\t\t\t\t\t\t// matched the feature, get the first value from the options\r\n\t\t\t\t\t\t\treturn get();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// did not match, get the second value, passing over the first\r\n\t\t\t\t\t\t\tget(true);\r\n\t\t\t\t\t\t\treturn get(skip);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// a module\r\n\t\t\t\t\treturn term || 0;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tid = get();\r\n\t\treturn id && toAbsMid(id);\r\n\t};\r\n\r\n\tif (require.isBrowser===false) { // for build,will be changed with better implementation. by LWF\r\n\t\thas.load = function (name, req, onLoad, config) {\r\n\t        onLoad();\r\n\t    };\t\t\r\n\t} else {\r\n\t\thas.load = function(id, parentRequire, loaded){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConditional loading of AMD modules based on a has feature test value.\r\n\t\t\t// id: String\r\n\t\t\t//\t\tGives the resolved module id to load.\r\n\t\t\t// parentRequire: Function\r\n\t\t\t//\t\tThe loader require function with respect to the module that contained the plugin resource in it's\r\n\t\t\t//\t\tdependency list.\r\n\t\t\t// loaded: Function\r\n\t\t\t//\t Callback to loader that consumes result of plugin demand.\r\n\r\n\t\t\tif(id){\r\n\t\t\t\tparentRequire([id], loaded);\r\n\t\t\t}else{\r\n\t\t\t\tloaded();\r\n\t\t\t}\r\n\t\t};\t\t\r\n\t}\r\n\r\n\r\n\treturn has;\r\n});\r\n"]}