{"version":3,"sources":["text.js"],"names":["define","dojo","require","has","request","getText","url","sync","load","headers","X-Requested-With","then","console","error","theCache","strip","text","matches","replace","match","notFound","pending","cache","module","value","key","test","toUrl","val","undefined","sanitize","dynamic","normalize","id","toAbsMid","parts","split","stripFlag","length","absMid","requireCacheUrl","finish","push","pendingList","async","i"],"mappings":";;;;;;;AAAAA,QAAQ,iBAAkB,UAAW,QAAS,gCAAiC,SAASC,EAAMC,EAASC,EAAKC,GAI3G,IAAIC,EACDF,EAAI,gBACNE,EAAS,SAASC,EAAKC,EAAMC,GAC5BJ,EAAQE,GAAMC,OAAOA,EAAME,SAAWC,mBAAoB,QAAUC,KAAKH,IAKvEN,EAAQG,QACVA,EAASH,EAAQG,QAEjBO,QAAQC,MAAM,2EAIhB,IACCC,KAEAC,EAAO,SAASC,GAIf,GAAGA,EAAK,CAEP,IAAIC,GADJD,EAAMA,EAAKE,QAAQ,2DAA4D,KAC7DC,MAAM,wCACrBF,IACFD,EAAMC,EAAQ,SAGfD,EAAO,GAER,OAAOA,GAGRI,KAEAC,KAwGD,OAtGApB,EAAKqB,MAAQ,SAA2BC,EAAkBjB,EAAwBkB,GAgEjF,IAAIC,EACc,iBAARF,EACN,KAAKG,KAAKH,IAEZE,EAAMF,EACNC,EAAQlB,GAGRmB,EAAMvB,EAAQyB,MAAMJ,EAAOL,QAAQ,MAAO,MAAQZ,EAAO,IAAMA,EAAO,MAGvEmB,EAAMF,EAAS,GACfC,EAAQlB,GAET,IACCsB,OAAgBC,GAATL,GAAsC,iBAATA,EAAqBA,EAAMA,MAAQA,EACvEM,EAAWN,GAASA,EAAMM,SAE3B,MAAiB,iBAAPF,GAETd,EAASW,GAAOG,EACTE,EAAWf,EAAMa,GAAOA,GACf,OAARA,UAEDd,EAASW,GACT,OAIFA,KAAOX,GACXT,EAAQoB,GAAK,EAAM,SAAST,GAC3BF,EAASW,GAAMT,IAGVc,EAAWf,EAAMD,EAASW,IAAQX,EAASW,MAgBnDM,SAAS,EAETC,UAAW,SAASC,EAAIC,GAKvB,IAAIC,EAAOF,EAAGG,MAAM,KACnB9B,EAAK6B,EAAM,GACZ,OAAQ,MAAMT,KAAKpB,GAAO4B,EAAS5B,GAAOA,IAAQ6B,EAAM,GAAK,IAAMA,EAAM,GAAK,KAG/E3B,KAAM,SAASyB,EAAI/B,EAASM,GAY3B,IACC2B,EAAOF,EAAGG,MAAM,KAChBC,EAAWF,EAAMG,OAAO,EACxBC,EAAQJ,EAAM,GACd7B,EAAMJ,EAAQyB,MAAMQ,EAAM,IAC1BK,EAAkB,OAASlC,EAC3BU,EAAOI,EACPqB,EAAS,SAASzB,GACjBR,EAAK6B,EAAYtB,EAAMC,GAAQA,IASjC,GAPGuB,KAAUzB,EACZE,EAAOF,EAASyB,GACRrC,EAAQoB,OAASkB,KAAmBtC,EAAQoB,MACpDN,EAAOd,EAAQoB,MAAMkB,GACblC,KAAOQ,IACfE,EAAOF,EAASR,IAEdU,IAAOI,EACT,GAAGC,EAAQf,GACVe,EAAQf,GAAKoC,KAAKD,OACd,CACJ,IAAIE,EAActB,EAAQf,IAAQmC,GAClCpC,EAAQC,GAAMJ,EAAQ0C,MAAO,SAAS5B,GACrCF,EAASyB,GAASzB,EAASR,GAAMU,EACjC,IAAI,IAAI6B,EAAI,EAAGA,EAAEF,EAAYL,QAC5BK,EAAYE,KAAK7B,UAEXK,EAAQf,UAIjBmC,EAAOzB","file":"../text.js","sourcesContent":["define([\"./_base/kernel\", \"require\", \"./has\", \"./has!host-browser?./request\"], function(dojo, require, has, request){\r\n\t// module:\r\n\t//\t\tdojo/text\r\n\r\n\tvar getText;\r\n\tif(has(\"host-browser\")){\r\n\t\tgetText= function(url, sync, load){\r\n\t\t\trequest(url, {sync:!!sync, headers: { 'X-Requested-With': null } }).then(load);\r\n\t\t};\r\n\t}else{\r\n\t\t// Path for node.js and rhino, to load from local file system.\r\n\t\t// TODO: use node.js native methods rather than depending on a require.getText() method to exist.\r\n\t\tif(require.getText){\r\n\t\t\tgetText= require.getText;\r\n\t\t}else{\r\n\t\t\tconsole.error(\"dojo/text plugin failed to load because loader does not support getText\");\r\n\t\t}\r\n\t}\r\n\r\n\tvar\r\n\t\ttheCache = {},\r\n\r\n\t\tstrip= function(text){\r\n\t\t\t//Strips <?xml ...?> declarations so that external SVG and XML\r\n\t\t\t//documents can be added to a document without worry. Also, if the string\r\n\t\t\t//is an HTML document, only the part inside the body tag is returned.\r\n\t\t\tif(text){\r\n\t\t\t\ttext= text.replace(/^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im, \"\");\r\n\t\t\t\tvar matches= text.match(/<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im);\r\n\t\t\t\tif(matches){\r\n\t\t\t\t\ttext= matches[1];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\ttext = \"\";\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t},\r\n\r\n\t\tnotFound = {},\r\n\r\n\t\tpending = {};\r\n\r\n\tdojo.cache = function(/*String||Object*/module, /*String*/url, /*String||Object?*/value){\r\n\t\t// summary:\r\n\t\t//\t\tA getter and setter for storing the string content associated with the\r\n\t\t//\t\tmodule and url arguments.\r\n\t\t// description:\r\n\t\t//\t\tIf module is a string that contains slashes, then it is interpretted as a fully\r\n\t\t//\t\tresolved path (typically a result returned by require.toUrl), and url should not be\r\n\t\t//\t\tprovided. This is the preferred signature. If module is a string that does not\r\n\t\t//\t\tcontain slashes, then url must also be provided and module and url are used to\r\n\t\t//\t\tcall `dojo.moduleUrl()` to generate a module URL. This signature is deprecated.\r\n\t\t//\t\tIf value is specified, the cache value for the moduleUrl will be set to\r\n\t\t//\t\tthat value. Otherwise, dojo.cache will fetch the moduleUrl and store it\r\n\t\t//\t\tin its internal cache and return that cached value for the URL. To clear\r\n\t\t//\t\ta cache value pass null for value. Since XMLHttpRequest (XHR) is used to fetch the\r\n\t\t//\t\tthe URL contents, only modules on the same domain of the page can use this capability.\r\n\t\t//\t\tThe build system can inline the cache values though, to allow for xdomain hosting.\r\n\t\t// module: String||Object\r\n\t\t//\t\tIf a String with slashes, a fully resolved path; if a String without slashes, the\r\n\t\t//\t\tmodule name to use for the base part of the URL, similar to module argument\r\n\t\t//\t\tto `dojo.moduleUrl`. If an Object, something that has a .toString() method that\r\n\t\t//\t\tgenerates a valid path for the cache item. For example, a dojo._Url object.\r\n\t\t// url: String\r\n\t\t//\t\tThe rest of the path to append to the path derived from the module argument. If\r\n\t\t//\t\tmodule is an object, then this second argument should be the \"value\" argument instead.\r\n\t\t// value: String||Object?\r\n\t\t//\t\tIf a String, the value to use in the cache for the module/url combination.\r\n\t\t//\t\tIf an Object, it can have two properties: value and sanitize. The value property\r\n\t\t//\t\tshould be the value to use in the cache, and sanitize can be set to true or false,\r\n\t\t//\t\tto indicate if XML declarations should be removed from the value and if the HTML\r\n\t\t//\t\tinside a body tag in the value should be extracted as the real value. The value argument\r\n\t\t//\t\tor the value property on the value argument are usually only used by the build system\r\n\t\t//\t\tas it inlines cache content.\r\n\t\t// example:\r\n\t\t//\t\tTo ask dojo.cache to fetch content and store it in the cache (the dojo[\"cache\"] style\r\n\t\t//\t\tof call is used to avoid an issue with the build system erroneously trying to intern\r\n\t\t//\t\tthis example. To get the build system to intern your dojo.cache calls, use the\r\n\t\t//\t\t\"dojo.cache\" style of call):\r\n\t\t//\t\t| //If template.html contains \"<h1>Hello</h1>\" that will be\r\n\t\t//\t\t| //the value for the text variable.\r\n\t\t//\t\t| //Note: This is pre-AMD, deprecated syntax\r\n\t\t//\t\t| var text = dojo[\"cache\"](\"my.module\", \"template.html\");\r\n\t\t// example:\r\n\t\t//\t\tTo ask dojo.cache to fetch content and store it in the cache, and sanitize the input\r\n\t\t//\t\t (the dojo[\"cache\"] style of call is used to avoid an issue with the build system\r\n\t\t//\t\terroneously trying to intern this example. To get the build system to intern your\r\n\t\t//\t\tdojo.cache calls, use the \"dojo.cache\" style of call):\r\n\t\t//\t\t| //If template.html contains \"<html><body><h1>Hello</h1></body></html>\", the\r\n\t\t//\t\t| //text variable will contain just \"<h1>Hello</h1>\".\r\n\t\t//\t\t| //Note: This is pre-AMD, deprecated syntax\r\n\t\t//\t\t| var text = dojo[\"cache\"](\"my.module\", \"template.html\", {sanitize: true});\r\n\t\t// example:\r\n\t\t//\t\tSame example as previous, but demonstrates how an object can be passed in as\r\n\t\t//\t\tthe first argument, then the value argument can then be the second argument.\r\n\t\t//\t\t| //If template.html contains \"<html><body><h1>Hello</h1></body></html>\", the\r\n\t\t//\t\t| //text variable will contain just \"<h1>Hello</h1>\".\r\n\t\t//\t\t| //Note: This is pre-AMD, deprecated syntax\r\n\t\t//\t\t| var text = dojo[\"cache\"](new dojo._Url(\"my/module/template.html\"), {sanitize: true});\r\n\r\n\t\t//\t * (string string [value]) => (module, url, value)\r\n\t\t//\t * (object [value])        => (module, value), url defaults to \"\"\r\n\t\t//\r\n\t\t//\t * if module is an object, then it must be convertable to a string\r\n\t\t//\t * (module, url) module + (url ? (\"/\" + url) : \"\") must be a legal argument to require.toUrl\r\n\t\t//\t * value may be a string or an object; if an object then may have the properties \"value\" and/or \"sanitize\"\r\n\t\tvar key;\r\n\t\tif(typeof module==\"string\"){\r\n\t\t\tif(/\\//.test(module)){\r\n\t\t\t\t// module is a version 1.7+ resolved path\r\n\t\t\t\tkey = module;\r\n\t\t\t\tvalue = url;\r\n\t\t\t}else{\r\n\t\t\t\t// module is a version 1.6- argument to dojo.moduleUrl\r\n\t\t\t\tkey = require.toUrl(module.replace(/\\./g, \"/\") + (url ? (\"/\" + url) : \"\"));\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tkey = module + \"\";\r\n\t\t\tvalue = url;\r\n\t\t}\r\n\t\tvar\r\n\t\t\tval = (value != undefined && typeof value != \"string\") ? value.value : value,\r\n\t\t\tsanitize = value && value.sanitize;\r\n\r\n\t\tif(typeof val == \"string\"){\r\n\t\t\t//We have a string, set cache value\r\n\t\t\ttheCache[key] = val;\r\n\t\t\treturn sanitize ? strip(val) : val;\r\n\t\t}else if(val === null){\r\n\t\t\t//Remove cached value\r\n\t\t\tdelete theCache[key];\r\n\t\t\treturn null;\r\n\t\t}else{\r\n\t\t\t//Allow cache values to be empty strings. If key property does\r\n\t\t\t//not exist, fetch it.\r\n\t\t\tif(!(key in theCache)){\r\n\t\t\t\tgetText(key, true, function(text){\r\n\t\t\t\t\ttheCache[key]= text;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn sanitize ? strip(theCache[key]) : theCache[key];\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tThis module implements the dojo/text! plugin and the dojo.cache API.\r\n\t\t// description:\r\n\t\t//\t\tWe choose to include our own plugin to leverage functionality already contained in dojo\r\n\t\t//\t\tand thereby reduce the size of the plugin compared to various foreign loader implementations.\r\n\t\t//\t\tAlso, this allows foreign AMD loaders to be used without their plugins.\r\n\t\t//\r\n\t\t//\t\tCAUTION: this module is designed to optionally function synchronously to support the dojo v1.x synchronous\r\n\t\t//\t\tloader. This feature is outside the scope of the CommonJS plugins specification.\r\n\r\n\t\t// the dojo/text caches it's own resources because of dojo.cache\r\n\t\tdynamic: true,\r\n\r\n\t\tnormalize: function(id, toAbsMid){\r\n\t\t\t// id is something like (path may be relative):\r\n\t\t\t//\r\n\t\t\t//\t \"path/to/text.html\"\r\n\t\t\t//\t \"path/to/text.html!strip\"\r\n\t\t\tvar parts= id.split(\"!\"),\r\n\t\t\t\turl= parts[0];\r\n\t\t\treturn (/^\\./.test(url) ? toAbsMid(url) : url) + (parts[1] ? \"!\" + parts[1] : \"\");\r\n\t\t},\r\n\r\n\t\tload: function(id, require, load){\r\n\t\t\t// id: String\r\n\t\t\t//\t\tPath to the resource.\r\n\t\t\t// require: Function\r\n\t\t\t//\t\tObject that include the function toUrl with given id returns a valid URL from which to load the text.\r\n\t\t\t// load: Function\r\n\t\t\t//\t\tCallback function which will be called, when the loading finished.\r\n\r\n\t\t\t// id is something like (path is always absolute):\r\n\t\t\t//\r\n\t\t\t//\t \"path/to/text.html\"\r\n\t\t\t//\t \"path/to/text.html!strip\"\r\n\t\t\tvar\r\n\t\t\t\tparts= id.split(\"!\"),\r\n\t\t\t\tstripFlag= parts.length>1,\r\n\t\t\t\tabsMid= parts[0],\r\n\t\t\t\turl = require.toUrl(parts[0]),\r\n\t\t\t\trequireCacheUrl = \"url:\" + url,\r\n\t\t\t\ttext = notFound,\r\n\t\t\t\tfinish = function(text){\r\n\t\t\t\t\tload(stripFlag ? strip(text) : text);\r\n\t\t\t\t};\r\n\t\t\tif(absMid in theCache){\r\n\t\t\t\ttext = theCache[absMid];\r\n\t\t\t}else if(require.cache && requireCacheUrl in require.cache){\r\n\t\t\t\ttext = require.cache[requireCacheUrl];\r\n\t\t\t}else if(url in theCache){\r\n\t\t\t\ttext = theCache[url];\r\n\t\t\t}\r\n\t\t\tif(text===notFound){\r\n\t\t\t\tif(pending[url]){\r\n\t\t\t\t\tpending[url].push(finish);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar pendingList = pending[url] = [finish];\r\n\t\t\t\t\tgetText(url, !require.async, function(text){\r\n\t\t\t\t\t\ttheCache[absMid]= theCache[url]= text;\r\n\t\t\t\t\t\tfor(var i = 0; i<pendingList.length;){\r\n\t\t\t\t\t\t\tpendingList[i++](text);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete pending[url];\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfinish(text);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n});\r\n\r\n"]}