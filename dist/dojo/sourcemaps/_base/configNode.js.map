{"version":3,"sources":["_base/configNode.js"],"names":["exports","config","deps","args","i","process","argv","length","arg","split","push","fs","require","hasCache","host-node","host-browser","dom","dojo-has-api","dojo-xhr-factory","dojo-inject-api","dojo-timeout-api","dojo-trace-api","dojo-dom-ready-api","dojo-publish-privates","dojo-sniff","dojo-loader","dojo-test-xd","dojo-test-sniff","p","vm","nodeConfig","baseUrl","dirname","commandLineArgs","timeout","locale","loaderPatch","log","item","util","debug","inspect","eval","__text","__urlHint","runInThisContext","injectUrl","url","callback","readFileSync","e","this","getText","sync","onLoad"],"mappings":";;;;;;;AAAAA,QAAQC,OAAS,SAASA,GAKzB,IAAI,IAAIC,KAAWC,KAAWC,EAAI,EAAGA,EAAIC,QAAQC,KAAKC,OAAQH,IAAI,CACjE,IAAII,GAAOH,QAAQC,KAAKF,GAAK,IAAIK,MAAM,KAC1B,QAAVD,EAAI,GACNN,EAAKQ,KAAKF,EAAI,IAEdL,EAAKO,KAAKF,GAIZ,IAAIG,EAAKC,QAAQ,MAQbC,GACHC,YAAY,EACZC,eAAe,EACfC,IAAM,EACNC,eAAe,EACfC,mBAAmB,EACnBC,kBAAkB,EAClBC,mBAAmB,EACnBC,iBAAiB,EACjBC,qBAAqB,EACrBC,wBAAwB,EACxBC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,kBAAkB,GAEnB,IAAI,IAAIC,KAAKf,EACZZ,EAAOY,SAASe,GAAKf,EAASe,GAG/B,IAAIC,EAAKjB,QAAQ,MAIbkB,GACHC,QAJOnB,QAAQ,QAIDoB,QAAQ3B,QAAQC,KAAK,IACnC2B,gBAAgB9B,EAChBD,KAAKA,EACLgC,QAAQ,EAGRC,OAAO,QAEPC,aACCC,IAAI,SAASC,GAGZ,IAAIC,EAAO3B,QAAQ,QACnB2B,EAAKC,MAAMD,EAAKE,QAAQH,KAGzBI,KAAM,SAASC,EAAQC,GACtB,OAAOf,EAAGgB,iBAAiBF,EAAQC,IAGpCE,UAAW,SAASC,EAAKC,GACxB,IACCnB,EAAGgB,iBAAiBlC,EAAGsC,aAAaF,EAAK,QAASA,GAClDC,IACA,MAAME,GACNC,KAAKd,IAAI,4BAA8BU,EAAM,KAC7CI,KAAKd,IAAIa,KAIXE,QAAS,SAASL,EAAKM,EAAMC,GAE5BA,EAAO3C,EAAGsC,aAAaF,EAAK,YAI/B,IAAInB,KAAKE,EACR7B,EAAO2B,GAAKE,EAAWF","file":"../../_base/configNode.js","sourcesContent":["exports.config = function(config){\r\n\t// summary:\r\n\t//\t\tThis module provides bootstrap configuration for running dojo in node.js\r\n\r\n\t// any command line arguments with the load flag are pushed into deps\r\n\tfor(var deps = [], args = [], i = 0; i < process.argv.length; i++){\r\n\t\tvar arg = (process.argv[i] + \"\").split(\"=\");\r\n\t\tif(arg[0] == \"load\"){\r\n\t\t\tdeps.push(arg[1]);\r\n\t\t}else{\r\n\t\t\targs.push(arg);\r\n\t\t}\r\n\t}\r\n\r\n\tvar fs = require(\"fs\");\r\n\r\n\t// make sure global require exists\r\n\t//if (typeof global.require==\"undefined\"){\r\n\t//\tglobal.require= {};\r\n\t//}\r\n\r\n\t// reset the has cache with node-appropriate values;\r\n\tvar hasCache = {\r\n\t\t\"host-node\":1,\r\n\t\t\"host-browser\":0,\r\n\t\t\"dom\":0,\r\n\t\t\"dojo-has-api\":1,\r\n\t\t\"dojo-xhr-factory\":0,\r\n\t\t\"dojo-inject-api\":1,\r\n\t\t\"dojo-timeout-api\":0,\r\n\t\t\"dojo-trace-api\":1,\r\n\t\t\"dojo-dom-ready-api\":0,\r\n\t\t\"dojo-publish-privates\":1,\r\n\t\t\"dojo-sniff\":0,\r\n\t\t\"dojo-loader\":1,\r\n\t\t\"dojo-test-xd\":0,\r\n\t\t\"dojo-test-sniff\":0\r\n\t};\r\n\tfor(var p in hasCache){\r\n\t\tconfig.hasCache[p] = hasCache[p];\r\n\t}\r\n\r\n\tvar vm = require('vm'),\r\n\t\tpath = require('path');\r\n\r\n\t// reset some configuration switches with node-appropriate values\r\n\tvar nodeConfig = {\r\n\t\tbaseUrl: path.dirname(process.argv[1]),\r\n\t\tcommandLineArgs:args,\r\n\t\tdeps:deps,\r\n\t\ttimeout:0,\r\n\r\n\t\t// TODO: really get the locale\r\n\t\tlocale:\"en-us\",\r\n\r\n\t\tloaderPatch: {\r\n\t\t\tlog:function(item){\r\n\t\t\t\t// define debug for console messages during dev instead of console.log\r\n\t\t\t\t// (node's heavy async makes console.log confusing sometimes)\r\n\t\t\t\tvar util = require(\"util\");\r\n\t\t\t\tutil.debug(util.inspect(item));\r\n\t\t\t},\r\n\r\n\t\t\teval: function(__text, __urlHint){\r\n\t\t\t\treturn vm.runInThisContext(__text, __urlHint);\r\n\t\t\t},\r\n\r\n\t\t\tinjectUrl: function(url, callback){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvm.runInThisContext(fs.readFileSync(url, \"utf8\"), url);\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tthis.log(\"failed to load resource (\" + url + \")\");\r\n\t\t\t\t\tthis.log(e);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetText: function(url, sync, onLoad){\r\n\t\t\t\t// TODO: implement async and http/https handling\r\n\t\t\t\tonLoad(fs.readFileSync(url, \"utf8\"));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tfor(p in nodeConfig){\r\n\t\tconfig[p] = nodeConfig[p];\r\n\t}\r\n};\r\n"]}