{"version":3,"sources":["_base/config.js"],"names":["define","has","require","result","p","src","rawConfig","adviseHas","featureSet","prefix","booting","add","global","this","dojoConfig","djConfig","locale","navigator","language","userLanguage","toLowerCase"],"mappings":";;;;;;;AAAAA,QAAQ,SAAU,WAAY,SAASC,EAAKC,SAmK3C,IAAIC,KACJ,GAAGF,EAAI,mBAAmB,CAEzB,IAA6BG,EAAzBC,EAAMH,QAAQI,UAClB,IAAIF,KAAKC,EACRF,EAAOC,GAAKC,EAAID,OAEb,CACJ,IAAIG,EAAY,SAASC,EAAYC,EAAQC,GAC5C,IAAIN,KAAKI,EACL,OAAHJ,GAAYH,EAAIU,IAAIF,EAASL,EAAGI,EAAWJ,GAAI,EAAGM,IAGhDE,EAAS,WAAe,OAAOC,KAAtB,GAMbN,EALAJ,EAASF,EAAI,eAEZC,QAAQI,UAERM,EAAOE,YAAcF,EAAOG,aACX,SAAU,GAC5BR,EAAUJ,EAAOF,IAAK,GAAI,GAG3B,IAAIE,EAAOa,QAA8B,oBAAbC,UAAyB,CAEpD,IAAIC,EAAYD,UAAUC,UAAYD,UAAUE,aAC7CD,IACFf,EAAOa,OAASE,EAASE,eAI3B,OAAOjB","file":"../../_base/config.js","sourcesContent":["define([\"../has\", \"require\"], function(has, require){\r\n\t// module:\r\n\t//\t\tdojo/_base/config\r\n\r\n/*=====\r\nreturn {\r\n\t// summary:\r\n\t//\t\tThis module defines the user configuration during bootstrap.\r\n\t// description:\r\n\t//\t\tBy defining user configuration as a module value, an entire configuration can be specified in a build,\r\n\t//\t\tthereby eliminating the need for sniffing and or explicitly setting in the global variable dojoConfig.\r\n\t//\t\tAlso, when multiple instances of dojo exist in a single application, each will necessarily be located\r\n\t//\t\tat an unique absolute module identifier as given by the package configuration. Implementing configuration\r\n\t//\t\tas a module allows for specifying unique, per-instance configurations.\r\n\t// example:\r\n\t//\t\tCreate a second instance of dojo with a different, instance-unique configuration (assume the loader and\r\n\t//\t\tdojo.js are already loaded).\r\n\t//\t\t|\t// specify a configuration that creates a new instance of dojo at the absolute module identifier \"myDojo\"\r\n\t//\t\t|\trequire({\r\n\t//\t\t|\t\tpackages:[{\r\n\t//\t\t|\t\t\tname:\"myDojo\",\r\n\t//\t\t|\t\t\tlocation:\".\", //assume baseUrl points to dojo.js\r\n\t//\t\t|\t\t}]\r\n\t//\t\t|\t});\r\n\t//\t\t|\r\n\t//\t\t|\t// specify a configuration for the myDojo instance\r\n\t//\t\t|\tdefine(\"myDojo/config\", {\r\n\t//\t\t|\t\t// normal configuration variables go here, e.g.,\r\n\t//\t\t|\t\tlocale:\"fr-ca\"\r\n\t//\t\t|\t});\r\n\t//\t\t|\r\n\t//\t\t|\t// load and use the new instance of dojo\r\n\t//\t\t|\trequire([\"myDojo\"], function(dojo){\r\n\t//\t\t|\t\t// dojo is the new instance of dojo\r\n\t//\t\t|\t\t// use as required\r\n\t//\t\t|\t});\r\n\r\n\t// isDebug: Boolean\r\n\t//\t\tDefaults to `false`. If set to `true`, ensures that Dojo provides\r\n\t//\t\textended debugging feedback via Firebug. If Firebug is not available\r\n\t//\t\ton your platform, setting `isDebug` to `true` will force Dojo to\r\n\t//\t\tpull in (and display) the version of Firebug Lite which is\r\n\t//\t\tintegrated into the Dojo distribution, thereby always providing a\r\n\t//\t\tdebugging/logging console when `isDebug` is enabled. Note that\r\n\t//\t\tFirebug's `console.*` methods are ALWAYS defined by Dojo. If\r\n\t//\t\t`isDebug` is false and you are on a platform without Firebug, these\r\n\t//\t\tmethods will be defined as no-ops.\r\n\tisDebug: false,\r\n\r\n\t// locale: String\r\n\t//\t\tThe locale to assume for loading localized resources in this page,\r\n\t//\t\tspecified according to [RFC 3066](http://www.ietf.org/rfc/rfc3066.txt).\r\n\t//\t\tMust be specified entirely in lowercase, e.g. `en-us` and `zh-cn`.\r\n\t//\t\tSee the documentation for `dojo.i18n` and `dojo.requireLocalization`\r\n\t//\t\tfor details on loading localized resources. If no locale is specified,\r\n\t//\t\tDojo assumes the locale of the user agent, according to `navigator.userLanguage`\r\n\t//\t\tor `navigator.language` properties.\r\n\tlocale: undefined,\r\n\r\n\t// extraLocale: Array\r\n\t//\t\tNo default value. Specifies additional locales whose\r\n\t//\t\tresources should also be loaded alongside the default locale when\r\n\t//\t\tcalls to `dojo.requireLocalization()` are processed.\r\n\textraLocale: undefined,\r\n\r\n\t// baseUrl: String\r\n\t//\t\tThe directory in which `dojo.js` is located. Under normal\r\n\t//\t\tconditions, Dojo auto-detects the correct location from which it\r\n\t//\t\twas loaded. You may need to manually configure `baseUrl` in cases\r\n\t//\t\twhere you have renamed `dojo.js` or in which `<base>` tags confuse\r\n\t//\t\tsome browsers (e.g. IE 6). The variable `dojo.baseUrl` is assigned\r\n\t//\t\teither the value of `djConfig.baseUrl` if one is provided or the\r\n\t//\t\tauto-detected root if not. Other modules are located relative to\r\n\t//\t\tthis path. The path should end in a slash.\r\n\tbaseUrl: undefined,\r\n\r\n\t// modulePaths: [deprecated] Object\r\n\t//\t\tA map of module names to paths relative to `dojo.baseUrl`. The\r\n\t//\t\tkey/value pairs correspond directly to the arguments which\r\n\t//\t\t`dojo.registerModulePath` accepts. Specifying\r\n\t//\t\t`djConfig.modulePaths = { \"foo\": \"../../bar\" }` is the equivalent\r\n\t//\t\tof calling `dojo.registerModulePath(\"foo\", \"../../bar\");`. Multiple\r\n\t//\t\tmodules may be configured via `djConfig.modulePaths`.\r\n\tmodulePaths: {},\r\n\r\n\t// addOnLoad: Function|Array\r\n\t//\t\tAdds a callback via dojo/ready. Useful when Dojo is added after\r\n\t//\t\tthe page loads and djConfig.afterOnLoad is true. Supports the same\r\n\t//\t\targuments as dojo/ready. When using a function reference, use\r\n\t//\t\t`djConfig.addOnLoad = function(){};`. For object with function name use\r\n\t//\t\t`djConfig.addOnLoad = [myObject, \"functionName\"];` and for object with\r\n\t//\t\tfunction reference use\r\n\t//\t\t`djConfig.addOnLoad = [myObject, function(){}];`\r\n\taddOnLoad: null,\r\n\r\n\t// parseOnLoad: Boolean\r\n\t//\t\tRun the parser after the page is loaded\r\n\tparseOnLoad: false,\r\n\r\n\t// require: String[]\r\n\t//\t\tAn array of module names to be loaded immediately after dojo.js has been included\r\n\t//\t\tin a page.\r\n\trequire: [],\r\n\r\n\t// defaultDuration: Number\r\n\t//\t\tDefault duration, in milliseconds, for wipe and fade animations within dijits.\r\n\t//\t\tAssigned to dijit.defaultDuration.\r\n\tdefaultDuration: 200,\r\n\r\n\t// dojoBlankHtmlUrl: String\r\n\t//\t\tUsed by some modules to configure an empty iframe. Used by dojo/io/iframe and\r\n\t//\t\tdojo/back, and dijit/popup support in IE where an iframe is needed to make sure native\r\n\t//\t\tcontrols do not bleed through the popups. Normally this configuration variable\r\n\t//\t\tdoes not need to be set, except when using cross-domain/CDN Dojo builds.\r\n\t//\t\tSave dojo/resources/blank.html to your domain and set `djConfig.dojoBlankHtmlUrl`\r\n\t//\t\tto the path on your domain your copy of blank.html.\r\n\tdojoBlankHtmlUrl: undefined,\r\n\r\n\t// ioPublish: Boolean?\r\n\t//\t\tSet this to true to enable publishing of topics for the different phases of\r\n\t//\t\tIO operations. Publishing is done via dojo/topic.publish(). See dojo/main.__IoPublish for a list\r\n\t//\t\tof topics that are published.\r\n\tioPublish: false,\r\n\r\n\t// useCustomLogger: Anything?\r\n\t//\t\tIf set to a value that evaluates to true such as a string or array and\r\n\t//\t\tisDebug is true and Firebug is not available or running, then it bypasses\r\n\t//\t\tthe creation of Firebug Lite allowing you to define your own console object.\r\n\tuseCustomLogger: undefined,\r\n\r\n\t// transparentColor: Array\r\n\t//\t\tArray containing the r, g, b components used as transparent color in dojo.Color;\r\n\t//\t\tif undefined, [255,255,255] (white) will be used.\r\n\ttransparentColor: undefined,\r\n\t\r\n\t// deps: Function|Array\r\n\t//\t\tDefines dependencies to be used before the loader has been loaded.\r\n\t//\t\tWhen provided, they cause the loader to execute require(deps, callback) \r\n\t//\t\tonce it has finished loading. Should be used with callback.\r\n\tdeps: undefined,\r\n\t\r\n\t// callback: Function|Array\r\n\t//\t\tDefines a callback to be used when dependencies are defined before \r\n\t//\t\tthe loader has been loaded. When provided, they cause the loader to \r\n\t//\t\texecute require(deps, callback) once it has finished loading. \r\n\t//\t\tShould be used with deps.\r\n\tcallback: undefined,\r\n\t\r\n\t// deferredInstrumentation: Boolean\r\n\t//\t\tWhether deferred instrumentation should be loaded or included\r\n\t//\t\tin builds.\r\n\tdeferredInstrumentation: true,\r\n\r\n\t// useDeferredInstrumentation: Boolean|String\r\n\t//\t\tWhether the deferred instrumentation should be used.\r\n\t//\r\n\t//\t\t* `\"report-rejections\"`: report each rejection as it occurs.\r\n\t//\t\t* `true` or `1` or `\"report-unhandled-rejections\"`: wait 1 second\r\n\t//\t\t\tin an attempt to detect unhandled rejections.\r\n\tuseDeferredInstrumentation: \"report-unhandled-rejections\"\r\n};\r\n=====*/\r\n\r\n\tvar result = {};\r\n\tif(has(\"dojo-config-api\")){\r\n\t\t// must be the dojo loader; take a shallow copy of require.rawConfig\r\n\t\tvar src = require.rawConfig, p;\r\n\t\tfor(p in src){\r\n\t\t\tresult[p] = src[p];\r\n\t\t}\r\n\t}else{\r\n\t\tvar adviseHas = function(featureSet, prefix, booting){\r\n\t\t\tfor(p in featureSet){\r\n\t\t\t\tp!=\"has\" && has.add(prefix + p, featureSet[p], 0, booting);\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar global = (function () { return this; })();\r\n\t\tresult = has(\"dojo-loader\") ?\r\n\t\t\t// must be a built version of the dojo loader; all config stuffed in require.rawConfig\r\n\t\t\trequire.rawConfig :\r\n\t\t\t// a foreign loader\r\n\t\t\tglobal.dojoConfig || global.djConfig || {};\r\n\t\tadviseHas(result, \"config\", 1);\r\n\t\tadviseHas(result.has, \"\", 1);\r\n\t}\r\n\r\n\tif(!result.locale && typeof navigator != \"undefined\"){\r\n\t\t// Default locale for browsers.\r\n\t\tvar language = (navigator.language || navigator.userLanguage);\r\n\t\tif(language){\r\n\t\t\tresult.locale = language.toLowerCase();\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n});\r\n\r\n"]}