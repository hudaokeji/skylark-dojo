{"version":3,"sources":["_base/lang.js"],"names":["define","dojo","has","add","i","toString","_extraNames","split","_extraLen","length","getProp","parts","create","context","scopeMap","shift","global","p","e","opts","Object","prototype","efficient","obj","offset","startWith","concat","Array","slice","call","_pattern","lang","_mixin","dest","source","copyFunc","name","s","empty","mixin","sources","l","arguments","setObject","value","pop","undefined","getObject","exists","isString","it","String","isArray","isFunction","isObject","isArrayLike","tagName","toLowerCase","isFinite","isAlien","test","extend","ctor","props","_hitchArgs","scope","method","pre","_toArray","named","args","f","apply","this","hitch","join","delegate","TMP","tmp","arr","x","push","partial","clone","src","nodeType","cloneNode","Date","getTime","RegExp","r","constructor","trim","str","replace","tmpl","map","pattern","_","k"],"mappings":"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","file":"../../_base/lang.js","sourcesContent":["define([\"./kernel\", \"../has\", \"../sniff\"], function(dojo, has){\r\n\t// module:\r\n\t//\t\tdojo/_base/lang\r\n\r\n\thas.add(\"bug-for-in-skips-shadowed\", function(){\r\n\t\t// if true, the for-in iterator skips object properties that exist in Object's prototype (IE 6 - ?)\r\n\t\tfor(var i in {toString: 1}){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn 1;\r\n\t});\r\n\r\n\t// Helper methods\r\n\tvar _extraNames =\r\n\t\t\thas(\"bug-for-in-skips-shadowed\") ?\r\n\t\t\t\t\"hasOwnProperty.valueOf.isPrototypeOf.propertyIsEnumerable.toLocaleString.toString.constructor\".split(\".\") : [],\r\n\r\n\t\t_extraLen = _extraNames.length,\r\n\r\n\t\tgetProp = function(/*Array*/parts, /*Boolean*/create, /*Object*/context){\r\n\t\t\tif(!context){\r\n\t\t\t\tif(parts[0] && dojo.scopeMap[parts[0]]) {\r\n\t\t\t\t\t// Voodoo code from the old days where \"dojo\" or \"dijit\" maps to some special object\r\n\t\t\t\t\t// rather than just window.dojo\r\n\t\t\t\t\tcontext = dojo.scopeMap[parts.shift()][1];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcontext = dojo.global;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttry{\r\n\t\t\t\tfor(var i = 0; i < parts.length; i++){\r\n\t\t\t\t\tvar p = parts[i];\r\n\t\t\t\t\tif(!(p in context)){\r\n\t\t\t\t\t\tif(create){\r\n\t\t\t\t\t\t\tcontext[p] = {};\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\treturn;\t\t// return undefined\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontext = context[p];\r\n\t\t\t\t}\r\n\t\t\t\treturn context; // mixed\r\n\t\t\t}catch(e){\r\n\t\t\t\t// \"p in context\" throws an exception when context is a number, boolean, etc. rather than an object,\r\n\t\t\t\t// so in that corner case just return undefined (by having no return statement)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\topts = Object.prototype.toString,\r\n\r\n\t\tefficient = function(obj, offset, startWith){\r\n\t\t\treturn (startWith||[]).concat(Array.prototype.slice.call(obj, offset||0));\r\n\t\t},\r\n\r\n\t\t_pattern = /\\{([^\\}]+)\\}/g;\r\n\r\n\t// Module export\r\n\tvar lang = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module defines Javascript language extensions.\r\n\r\n\t\t// _extraNames: String[]\r\n\t\t//\t\tLists property names that must be explicitly processed during for-in iteration\r\n\t\t//\t\tin environments that have has(\"bug-for-in-skips-shadowed\") true.\r\n\t\t_extraNames:_extraNames,\r\n\r\n\t\t_mixin: function(dest, source, copyFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCopies/adds all properties of source to dest; returns dest.\r\n\t\t\t// dest: Object\r\n\t\t\t//\t\tThe object to which to copy/add all properties contained in source.\r\n\t\t\t// source: Object\r\n\t\t\t//\t\tThe object from which to draw all properties to copy into dest.\r\n\t\t\t// copyFunc: Function?\r\n\t\t\t//\t\tThe process used to copy/add a property in source; defaults to the Javascript assignment operator.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tdest, as modified\r\n\t\t\t// description:\r\n\t\t\t//\t\tAll properties, including functions (sometimes termed \"methods\"), excluding any non-standard extensions\r\n\t\t\t//\t\tfound in Object.prototype, are copied/added to dest. Copying/adding each particular property is\r\n\t\t\t//\t\tdelegated to copyFunc (if any); copyFunc defaults to the Javascript assignment operator if not provided.\r\n\t\t\t//\t\tNotice that by default, _mixin executes a so-called \"shallow copy\" and aggregate types are copied/added by reference.\r\n\t\t\tvar name, s, i, empty = {};\r\n\t\t\tfor(name in source){\r\n\t\t\t\t// the (!(name in empty) || empty[name] !== s) condition avoids copying properties in \"source\"\r\n\t\t\t\t// inherited from Object.prototype.\t For example, if dest has a custom toString() method,\r\n\t\t\t\t// don't overwrite it with the toString() method that source inherited from Object.prototype\r\n\t\t\t\ts = source[name];\r\n\t\t\t\tif(!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))){\r\n\t\t\t\t\tdest[name] = copyFunc ? copyFunc(s) : s;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(has(\"bug-for-in-skips-shadowed\")){\r\n\t\t\t\tif(source){\r\n\t\t\t\t\tfor(i = 0; i < _extraLen; ++i){\r\n\t\t\t\t\t\tname = _extraNames[i];\r\n\t\t\t\t\t\ts = source[name];\r\n\t\t\t\t\t\tif(!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))){\r\n\t\t\t\t\t\t\tdest[name] = copyFunc ? copyFunc(s) : s;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn dest; // Object\r\n\t\t},\r\n\r\n\t\tmixin: function(dest, sources){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCopies/adds all properties of one or more sources to dest; returns dest.\r\n\t\t\t// dest: Object\r\n\t\t\t//\t\tThe object to which to copy/add all properties contained in source. If dest is falsy, then\r\n\t\t\t//\t\ta new object is manufactured before copying/adding properties begins.\r\n\t\t\t// sources: Object...\r\n\t\t\t//\t\tOne of more objects from which to draw all properties to copy into dest. sources are processed\r\n\t\t\t//\t\tleft-to-right and if more than one of these objects contain the same property name, the right-most\r\n\t\t\t//\t\tvalue \"wins\".\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tdest, as modified\r\n\t\t\t// description:\r\n\t\t\t//\t\tAll properties, including functions (sometimes termed \"methods\"), excluding any non-standard extensions\r\n\t\t\t//\t\tfound in Object.prototype, are copied/added from sources to dest. sources are processed left to right.\r\n\t\t\t//\t\tThe Javascript assignment operator is used to copy/add each property; therefore, by default, mixin\r\n\t\t\t//\t\texecutes a so-called \"shallow copy\" and aggregate types are copied/added by reference.\r\n\t\t\t// example:\r\n\t\t\t//\t\tmake a shallow copy of an object\r\n\t\t\t//\t|\tvar copy = lang.mixin({}, source);\r\n\t\t\t// example:\r\n\t\t\t//\t\tmany class constructors often take an object which specifies\r\n\t\t\t//\t\tvalues to be configured on the object. In this case, it is\r\n\t\t\t//\t\toften simplest to call `lang.mixin` on the `this` object:\r\n\t\t\t//\t|\tdeclare(\"acme.Base\", null, {\r\n\t\t\t//\t|\t\tconstructor: function(properties){\r\n\t\t\t//\t|\t\t\t// property configuration:\r\n\t\t\t//\t|\t\t\tlang.mixin(this, properties);\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t\t\tconsole.log(this.quip);\r\n\t\t\t//\t|\t\t\t//\t...\r\n\t\t\t//\t|\t\t},\r\n\t\t\t//\t|\t\tquip: \"I wasn't born yesterday, you know - I've seen movies.\",\r\n\t\t\t//\t|\t\t// ...\r\n\t\t\t//\t|\t});\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t// create an instance of the class and configure it\r\n\t\t\t//\t|\tvar b = new acme.Base({quip: \"That's what it does!\" });\r\n\t\t\t// example:\r\n\t\t\t//\t\tcopy in properties from multiple objects\r\n\t\t\t//\t|\tvar flattened = lang.mixin(\r\n\t\t\t//\t|\t\t{\r\n\t\t\t//\t|\t\t\tname: \"Frylock\",\r\n\t\t\t//\t|\t\t\tbraces: true\r\n\t\t\t//\t|\t\t},\r\n\t\t\t//\t|\t\t{\r\n\t\t\t//\t|\t\t\tname: \"Carl Brutanananadilewski\"\r\n\t\t\t//\t|\t\t}\r\n\t\t\t//\t|\t);\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t// will print \"Carl Brutanananadilewski\"\r\n\t\t\t//\t|\tconsole.log(flattened.name);\r\n\t\t\t//\t|\t// will print \"true\"\r\n\t\t\t//\t|\tconsole.log(flattened.braces);\r\n\r\n\t\t\tif(!dest){ dest = {}; }\r\n\t\t\tfor(var i = 1, l = arguments.length; i < l; i++){\r\n\t\t\t\tlang._mixin(dest, arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn dest; // Object\r\n\t\t},\r\n\r\n\t\tsetObject: function(name, value, context){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet a property from a dot-separated string, such as \"A.B.C\"\r\n\t\t\t// description:\r\n\t\t\t//\t\tUseful for longer api chains where you have to test each object in\r\n\t\t\t//\t\tthe chain, or when you have an object reference in string format.\r\n\t\t\t//\t\tObjects are created as needed along `path`. Returns the passed\r\n\t\t\t//\t\tvalue if setting is successful or `undefined` if not.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tPath to a property, in the form \"A.B.C\".\r\n\t\t\t// value: anything\r\n\t\t\t//\t\tvalue or object to place at location given by name\r\n\t\t\t// context: Object?\r\n\t\t\t//\t\tOptional. Object to use as root of path. Defaults to\r\n\t\t\t//\t\t`dojo.global`.\r\n\t\t\t// example:\r\n\t\t\t//\t\tset the value of `foo.bar.baz`, regardless of whether\r\n\t\t\t//\t\tintermediate objects already exist:\r\n\t\t\t//\t| lang.setObject(\"foo.bar.baz\", value);\r\n\t\t\t// example:\r\n\t\t\t//\t\twithout `lang.setObject`, we often see code like this:\r\n\t\t\t//\t| // ensure that intermediate objects are available\r\n\t\t\t//\t| if(!obj[\"parent\"]){ obj.parent = {}; }\r\n\t\t\t//\t| if(!obj.parent[\"child\"]){ obj.parent.child = {}; }\r\n\t\t\t//\t| // now we can safely set the property\r\n\t\t\t//\t| obj.parent.child.prop = \"some value\";\r\n\t\t\t//\t\twhereas with `lang.setObject`, we can shorten that to:\r\n\t\t\t//\t| lang.setObject(\"parent.child.prop\", \"some value\", obj);\r\n\r\n\t\t\tvar parts = name.split(\".\"), p = parts.pop(), obj = getProp(parts, true, context);\r\n\t\t\treturn obj && p ? (obj[p] = value) : undefined; // Object\r\n\t\t},\r\n\r\n\t\tgetObject: function(name, create, context){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet a property from a dot-separated string, such as \"A.B.C\"\r\n\t\t\t// description:\r\n\t\t\t//\t\tUseful for longer api chains where you have to test each object in\r\n\t\t\t//\t\tthe chain, or when you have an object reference in string format.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tPath to an property, in the form \"A.B.C\".\r\n\t\t\t// create: Boolean?\r\n\t\t\t//\t\tOptional. Defaults to `false`. If `true`, Objects will be\r\n\t\t\t//\t\tcreated at any point along the 'path' that is undefined.\r\n\t\t\t// context: Object?\r\n\t\t\t//\t\tOptional. Object to use as root of path. Defaults to\r\n\t\t\t//\t\t'dojo.global'. Null may be passed.\r\n\t\t\treturn getProp(name ? name.split(\".\") : [], create, context); // Object\r\n\t\t},\r\n\r\n\t\texists: function(name, obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdetermine if an object supports a given method\r\n\t\t\t// description:\r\n\t\t\t//\t\tuseful for longer api chains where you have to test each object in\r\n\t\t\t//\t\tthe chain. Useful for object and method detection.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tPath to an object, in the form \"A.B.C\".\r\n\t\t\t// obj: Object?\r\n\t\t\t//\t\tObject to use as root of path. Defaults to\r\n\t\t\t//\t\t'dojo.global'. Null may be passed.\r\n\t\t\t// example:\r\n\t\t\t//\t| // define an object\r\n\t\t\t//\t| var foo = {\r\n\t\t\t//\t|\t\tbar: { }\r\n\t\t\t//\t| };\r\n\t\t\t//\t|\r\n\t\t\t//\t| // search the global scope\r\n\t\t\t//\t| lang.exists(\"foo.bar\"); // true\r\n\t\t\t//\t| lang.exists(\"foo.bar.baz\"); // false\r\n\t\t\t//\t|\r\n\t\t\t//\t| // search from a particular scope\r\n\t\t\t//\t| lang.exists(\"bar\", foo); // true\r\n\t\t\t//\t| lang.exists(\"bar.baz\", foo); // false\r\n\t\t\treturn lang.getObject(name, false, obj) !== undefined; // Boolean\r\n\t\t},\r\n\r\n\t\t// Crockford (ish) functions\r\n\r\n\t\tisString: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if it is a String\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\treturn (typeof it == \"string\" || it instanceof String); // Boolean\r\n\t\t},\r\n\r\n\t\tisArray: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if it is an Array.\r\n\t\t\t//\t\tDoes not work on Arrays created in other windows.\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\treturn it && (it instanceof Array || typeof it == \"array\"); // Boolean\r\n\t\t},\r\n\r\n\t\tisFunction: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if it is a Function\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\treturn opts.call(it) === \"[object Function]\";\r\n\t\t},\r\n\r\n\t\tisObject: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if it is a JavaScript object (or an Array, a Function\r\n\t\t\t//\t\tor null)\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\treturn it !== undefined &&\r\n\t\t\t\t(it === null || typeof it == \"object\" || lang.isArray(it) || lang.isFunction(it)); // Boolean\r\n\t\t},\r\n\r\n\t\tisArrayLike: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsimilar to isArray() but more permissive\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tIf it walks like a duck and quacks like a duck, return `true`\r\n\t\t\t// description:\r\n\t\t\t//\t\tDoesn't strongly test for \"arrayness\".  Instead, settles for \"isn't\r\n\t\t\t//\t\ta string or number and has a length property\". Arguments objects\r\n\t\t\t//\t\tand DOM collections will return true when passed to\r\n\t\t\t//\t\tisArrayLike(), but will return false when passed to\r\n\t\t\t//\t\tisArray().\r\n\t\t\treturn it && it !== undefined && // Boolean\r\n\t\t\t\t// keep out built-in constructors (Number, String, ...) which have length\r\n\t\t\t\t// properties\r\n\t\t\t\t!lang.isString(it) && !lang.isFunction(it) &&\r\n\t\t\t\t!(it.tagName && it.tagName.toLowerCase() == 'form') &&\r\n\t\t\t\t(lang.isArray(it) || isFinite(it.length));\r\n\t\t},\r\n\r\n\t\tisAlien: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if it is a built-in function or some other kind of\r\n\t\t\t//\t\toddball that *should* report as a function but doesn't\r\n\t\t\treturn it && !lang.isFunction(it) && /\\{\\s*\\[native code\\]\\s*\\}/.test(String(it)); // Boolean\r\n\t\t},\r\n\r\n\t\textend: function(ctor, props){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds all properties and methods of props to constructor's\r\n\t\t\t//\t\tprototype, making them available to all instances created with\r\n\t\t\t//\t\tconstructor.\r\n\t\t\t// ctor: Object\r\n\t\t\t//\t\tTarget constructor to extend.\r\n\t\t\t// props: Object\r\n\t\t\t//\t\tOne or more objects to mix into ctor.prototype\r\n\t\t\tfor(var i=1, l=arguments.length; i<l; i++){\r\n\t\t\t\tlang._mixin(ctor.prototype, arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn ctor; // Object\r\n\t\t},\r\n\r\n\t\t_hitchArgs: function(scope, method){\r\n\t\t\tvar pre = lang._toArray(arguments, 2);\r\n\t\t\tvar named = lang.isString(method);\r\n\t\t\treturn function(){\r\n\t\t\t\t// arrayify arguments\r\n\t\t\t\tvar args = lang._toArray(arguments);\r\n\t\t\t\t// locate our method\r\n\t\t\t\tvar f = named ? (scope||dojo.global)[method] : method;\r\n\t\t\t\t// invoke with collected args\r\n\t\t\t\treturn f && f.apply(scope || this, pre.concat(args)); // mixed\r\n\t\t\t}; // Function\r\n\t\t},\r\n\r\n\t\thitch: function(scope, method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a function that will only ever execute in the given scope.\r\n\t\t\t//\t\tThis allows for easy use of object member functions\r\n\t\t\t//\t\tin callbacks and other places in which the \"this\" keyword may\r\n\t\t\t//\t\totherwise not reference the expected scope.\r\n\t\t\t//\t\tAny number of default positional arguments may be passed as parameters\r\n\t\t\t//\t\tbeyond \"method\".\r\n\t\t\t//\t\tEach of these values will be used to \"placehold\" (similar to curry)\r\n\t\t\t//\t\tfor the hitched function.\r\n\t\t\t// scope: Object\r\n\t\t\t//\t\tThe scope to use when method executes. If method is a string,\r\n\t\t\t//\t\tscope is also the object containing method.\r\n\t\t\t// method: Function|String...\r\n\t\t\t//\t\tA function to be hitched to scope, or the name of the method in\r\n\t\t\t//\t\tscope to be hitched.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tlang.hitch(foo, \"bar\")();\r\n\t\t\t//\t\truns foo.bar() in the scope of foo\r\n\t\t\t// example:\r\n\t\t\t//\t|\tlang.hitch(foo, myFunction);\r\n\t\t\t//\t\treturns a function that runs myFunction in the scope of foo\r\n\t\t\t// example:\r\n\t\t\t//\t\tExpansion on the default positional arguments passed along from\r\n\t\t\t//\t\thitch. Passed args are mixed first, additional args after.\r\n\t\t\t//\t|\tvar foo = { bar: function(a, b, c){ console.log(a, b, c); } };\r\n\t\t\t//\t|\tvar fn = lang.hitch(foo, \"bar\", 1, 2);\r\n\t\t\t//\t|\tfn(3); // logs \"1, 2, 3\"\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar foo = { bar: 2 };\r\n\t\t\t//\t|\tlang.hitch(foo, function(){ this.bar = 10; })();\r\n\t\t\t//\t\texecute an anonymous function in scope of foo\r\n\t\t\tif(arguments.length > 2){\r\n\t\t\t\treturn lang._hitchArgs.apply(dojo, arguments); // Function\r\n\t\t\t}\r\n\t\t\tif(!method){\r\n\t\t\t\tmethod = scope;\r\n\t\t\t\tscope = null;\r\n\t\t\t}\r\n\t\t\tif(lang.isString(method)){\r\n\t\t\t\tscope = scope || dojo.global;\r\n\t\t\t\tif(!scope[method]){ throw(['lang.hitch: scope[\"', method, '\"] is null (scope=\"', scope, '\")'].join('')); }\r\n\t\t\t\treturn function(){ return scope[method].apply(scope, arguments || []); }; // Function\r\n\t\t\t}\r\n\t\t\treturn !scope ? method : function(){ return method.apply(scope, arguments || []); }; // Function\r\n\t\t},\r\n\r\n\t\tdelegate: (function(){\r\n\t\t\t// boodman/crockford delegation w/ cornford optimization\r\n\t\t\tfunction TMP(){}\r\n\t\t\treturn function(obj, props){\r\n\t\t\t\tTMP.prototype = obj;\r\n\t\t\t\tvar tmp = new TMP();\r\n\t\t\t\tTMP.prototype = null;\r\n\t\t\t\tif(props){\r\n\t\t\t\t\tlang._mixin(tmp, props);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp; // Object\r\n\t\t\t};\r\n\t\t})(),\r\n\t\t/*=====\r\n\t\tdelegate: function(obj, props){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a new object which \"looks\" to obj for properties which it\r\n\t\t\t//\t\tdoes not have a value for. Optionally takes a bag of properties to\r\n\t\t\t//\t\tseed the returned object with initially.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis is a small implementation of the Boodman/Crockford delegation\r\n\t\t\t//\t\tpattern in JavaScript. An intermediate object constructor mediates\r\n\t\t\t//\t\tthe prototype chain for the returned object, using it to delegate\r\n\t\t\t//\t\tdown to obj for property lookup when object-local lookup fails.\r\n\t\t\t//\t\tThis can be thought of similarly to ES4's \"wrap\", save that it does\r\n\t\t\t//\t\tnot act on types but rather on pure objects.\r\n\t\t\t// obj: Object\r\n\t\t\t//\t\tThe object to delegate to for properties not found directly on the\r\n\t\t\t//\t\treturn object or in props.\r\n\t\t\t// props: Object...\r\n\t\t\t//\t\tan object containing properties to assign to the returned object\r\n\t\t\t// returns:\r\n\t\t\t//\t\tan Object of anonymous type\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar foo = { bar: \"baz\" };\r\n\t\t\t//\t|\tvar thinger = lang.delegate(foo, { thud: \"xyzzy\"});\r\n\t\t\t//\t|\tthinger.bar == \"baz\"; // delegated to foo\r\n\t\t\t//\t|\tfoo.thud == undefined; // by definition\r\n\t\t\t//\t|\tthinger.thud == \"xyzzy\"; // mixed in from props\r\n\t\t\t//\t|\tfoo.bar = \"thonk\";\r\n\t\t\t//\t|\tthinger.bar == \"thonk\"; // still delegated to foo's bar\r\n\t\t},\r\n\t\t=====*/\r\n\r\n\t\t_toArray: has(\"ie\") ?\r\n\t\t\t(function(){\r\n\t\t\t\tfunction slow(obj, offset, startWith){\r\n\t\t\t\t\tvar arr = startWith||[];\r\n\t\t\t\t\tfor(var x = offset || 0; x < obj.length; x++){\r\n\t\t\t\t\t\tarr.push(obj[x]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t}\r\n\t\t\t\treturn function(obj){\r\n\t\t\t\t\treturn ((obj.item) ? slow : efficient).apply(this, arguments);\r\n\t\t\t\t};\r\n\t\t\t})() : efficient,\r\n\t\t/*=====\r\n\t\t _toArray: function(obj, offset, startWith){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tConverts an array-like object (i.e. arguments, DOMCollection) to an\r\n\t\t\t //\t\tarray. Returns a new Array with the elements of obj.\r\n\t\t\t // obj: Object\r\n\t\t\t //\t\tthe object to \"arrayify\". We expect the object to have, at a\r\n\t\t\t //\t\tminimum, a length property which corresponds to integer-indexed\r\n\t\t\t //\t\tproperties.\r\n\t\t\t // offset: Number?\r\n\t\t\t //\t\tthe location in obj to start iterating from. Defaults to 0.\r\n\t\t\t //\t\tOptional.\r\n\t\t\t // startWith: Array?\r\n\t\t\t //\t\tAn array to pack with the properties of obj. If provided,\r\n\t\t\t //\t\tproperties in obj are appended at the end of startWith and\r\n\t\t\t //\t\tstartWith is the returned array.\r\n\t\t },\r\n\t\t =====*/\r\n\r\n\t\tpartial: function(/*Function|String*/ method /*, ...*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsimilar to hitch() except that the scope object is left to be\r\n\t\t\t//\t\twhatever the execution context eventually becomes.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalling lang.partial is the functional equivalent of calling:\r\n\t\t\t//\t\t|\tlang.hitch(null, funcName, ...);\r\n\t\t\t// method:\r\n\t\t\t//\t\tThe function to \"wrap\"\r\n\t\t\tvar arr = [ null ];\r\n\t\t\treturn lang.hitch.apply(dojo, arr.concat(lang._toArray(arguments))); // Function\r\n\t\t},\r\n\r\n\t\tclone: function(/*anything*/ src){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClones objects (including DOM nodes) and all children.\r\n\t\t\t//\t\tWarning: do not clone cyclic structures.\r\n\t\t\t// src:\r\n\t\t\t//\t\tThe object to clone\r\n\t\t\tif(!src || typeof src != \"object\" || lang.isFunction(src)){\r\n\t\t\t\t// null, undefined, any non-object, or function\r\n\t\t\t\treturn src;\t// anything\r\n\t\t\t}\r\n\t\t\tif(src.nodeType && \"cloneNode\" in src){\r\n\t\t\t\t// DOM Node\r\n\t\t\t\treturn src.cloneNode(true); // Node\r\n\t\t\t}\r\n\t\t\tif(src instanceof Date){\r\n\t\t\t\t// Date\r\n\t\t\t\treturn new Date(src.getTime());\t// Date\r\n\t\t\t}\r\n\t\t\tif(src instanceof RegExp){\r\n\t\t\t\t// RegExp\r\n\t\t\t\treturn new RegExp(src);   // RegExp\r\n\t\t\t}\r\n\t\t\tvar r, i, l;\r\n\t\t\tif(lang.isArray(src)){\r\n\t\t\t\t// array\r\n\t\t\t\tr = [];\r\n\t\t\t\tfor(i = 0, l = src.length; i < l; ++i){\r\n\t\t\t\t\tif(i in src){\r\n\t\t\t\t\t\tr.push(lang.clone(src[i]));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// we don't clone functions for performance reasons\r\n\t\t\t\t//\t\t}else if(d.isFunction(src)){\r\n\t\t\t\t//\t\t\t// function\r\n\t\t\t\t//\t\t\tr = function(){ return src.apply(this, arguments); };\r\n\t\t\t}else{\r\n\t\t\t\t// generic objects\r\n\t\t\t\tr = src.constructor ? new src.constructor() : {};\r\n\t\t\t}\r\n\t\t\treturn lang._mixin(r, src, lang.clone);\r\n\t\t},\r\n\r\n\r\n\t\ttrim: String.prototype.trim ?\r\n\t\t\tfunction(str){ return str.trim(); } :\r\n\t\t\tfunction(str){ return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); },\r\n\t\t/*=====\r\n\t\t trim: function(str){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tTrims whitespace from both sides of the string\r\n\t\t\t // str: String\r\n\t\t\t //\t\tString to be trimmed\r\n\t\t\t // returns: String\r\n\t\t\t //\t\tReturns the trimmed string\r\n\t\t\t // description:\r\n\t\t\t //\t\tThis version of trim() was selected for inclusion into the base due\r\n\t\t\t //\t\tto its compact size and relatively good performance\r\n\t\t\t //\t\t(see [Steven Levithan's blog](http://blog.stevenlevithan.com/archives/faster-trim-javascript)\r\n\t\t\t //\t\tUses String.prototype.trim instead, if available.\r\n\t\t\t //\t\tThe fastest but longest version of this function is located at\r\n\t\t\t //\t\tlang.string.trim()\r\n\t\t },\r\n\t\t =====*/\r\n\r\n\t\treplace: function(tmpl, map, pattern){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPerforms parameterized substitutions on a string. Throws an\r\n\t\t\t//\t\texception if any parameter is unmatched.\r\n\t\t\t// tmpl: String\r\n\t\t\t//\t\tString to be used as a template.\r\n\t\t\t// map: Object|Function\r\n\t\t\t//\t\tIf an object, it is used as a dictionary to look up substitutions.\r\n\t\t\t//\t\tIf a function, it is called for every substitution with following parameters:\r\n\t\t\t//\t\ta whole match, a name, an offset, and the whole template\r\n\t\t\t//\t\tstring (see https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/replace\r\n\t\t\t//\t\tfor more details).\r\n\t\t\t// pattern: RegEx?\r\n\t\t\t//\t\tOptional regular expression objects that overrides the default pattern.\r\n\t\t\t//\t\tMust be global and match one item. The default is: /\\{([^\\}]+)\\}/g,\r\n\t\t\t//\t\twhich matches patterns like that: \"{xxx}\", where \"xxx\" is any sequence\r\n\t\t\t//\t\tof characters, which doesn't include \"}\".\r\n\t\t\t// returns: String\r\n\t\t\t//\t\tReturns the substituted string.\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// uses a dictionary for substitutions:\r\n\t\t\t//\t|\tlang.replace(\"Hello, {name.first} {name.last} AKA {nick}!\",\r\n\t\t\t//\t|\t\t{\r\n\t\t\t//\t|\t\t\tnick: \"Bob\",\r\n\t\t\t//\t|\t\t\tname: {\r\n\t\t\t//\t|\t\t\t\tfirst:\t\"Robert\",\r\n\t\t\t//\t|\t\t\t\tmiddle: \"X\",\r\n\t\t\t//\t|\t\t\t\tlast:\t\t\"Cringely\"\r\n\t\t\t//\t|\t\t\t}\r\n\t\t\t//\t|\t\t});\r\n\t\t\t//\t|\t// returns: Hello, Robert Cringely AKA Bob!\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// uses an array for substitutions:\r\n\t\t\t//\t|\tlang.replace(\"Hello, {0} {2}!\",\r\n\t\t\t//\t|\t\t[\"Robert\", \"X\", \"Cringely\"]);\r\n\t\t\t//\t|\t// returns: Hello, Robert Cringely!\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// uses a function for substitutions:\r\n\t\t\t//\t|\tfunction sum(a){\r\n\t\t\t//\t|\t\tvar t = 0;\r\n\t\t\t//\t|\t\tarrayforEach(a, function(x){ t += x; });\r\n\t\t\t//\t|\t\treturn t;\r\n\t\t\t//\t|\t}\r\n\t\t\t//\t|\tlang.replace(\r\n\t\t\t//\t|\t\t\"{count} payments averaging {avg} USD per payment.\",\r\n\t\t\t//\t|\t\tlang.hitch(\r\n\t\t\t//\t|\t\t\t{ payments: [11, 16, 12] },\r\n\t\t\t//\t|\t\t\tfunction(_, key){\r\n\t\t\t//\t|\t\t\t\tswitch(key){\r\n\t\t\t//\t|\t\t\t\t\tcase \"count\": return this.payments.length;\r\n\t\t\t//\t|\t\t\t\t\tcase \"min\":\t\treturn Math.min.apply(Math, this.payments);\r\n\t\t\t//\t|\t\t\t\t\tcase \"max\":\t\treturn Math.max.apply(Math, this.payments);\r\n\t\t\t//\t|\t\t\t\t\tcase \"sum\":\t\treturn sum(this.payments);\r\n\t\t\t//\t|\t\t\t\t\tcase \"avg\":\t\treturn sum(this.payments) / this.payments.length;\r\n\t\t\t//\t|\t\t\t\t}\r\n\t\t\t//\t|\t\t\t}\r\n\t\t\t//\t|\t\t)\r\n\t\t\t//\t|\t);\r\n\t\t\t//\t|\t// prints: 3 payments averaging 13 USD per payment.\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// uses an alternative PHP-like pattern for substitutions:\r\n\t\t\t//\t|\tlang.replace(\"Hello, ${0} ${2}!\",\r\n\t\t\t//\t|\t\t[\"Robert\", \"X\", \"Cringely\"], /\\$\\{([^\\}]+)\\}/g);\r\n\t\t\t//\t|\t// returns: Hello, Robert Cringely!\r\n\r\n\t\t\treturn tmpl.replace(pattern || _pattern, lang.isFunction(map) ?\r\n\t\t\t\tmap : function(_, k){ return lang.getObject(k, false, map); });\r\n\t\t}\r\n\t};\r\n\r\n\thas(\"extend-dojo\") && lang.mixin(dojo, lang);\r\n\r\n\treturn lang;\r\n});\r\n\r\n"]}