{"version":3,"sources":["_base/connect.js"],"names":["define","dojo","on","hub","aspect","eventModule","mouse","has","lang","add","testKeyEvent","charCode","document","createEvent","initKeyboardEvent","initKeyEvent","call","e","keypress","_punctMap","106","111","186","187","188","189","190","191","192","219","220","221","222","229","evtCopyKey","_synthesizeEvent","evt","props","faux","mixin","setKeyChar","preventDefault","stopPropagation","keyChar","String","fromCharCode","charOrCode","keyCode","object","listener","keydownSignal","k","unprintable","ctrlKey","c","currentTarget","shiftKey","type","code","_trySetKeyCode","keypressSignal","this","remove","which","connect","_keypress","obj","event","context","method","dontFix","a","arguments","args","i","push","a1","l","length","hitch","addEventListener","attachEvent","after","global","substring","enter","leave","apply","disconnect","handle","subscribe","topic","publish","concat","connectPublisher","pf","isCopyKey","unsubscribe"],"mappings":"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","file":"../../_base/connect.js","sourcesContent":["define([\"./kernel\", \"../on\", \"../topic\", \"../aspect\", \"./event\", \"../mouse\", \"./sniff\", \"./lang\", \"../keys\"], function(dojo, on, hub, aspect, eventModule, mouse, has, lang){\r\n// module:\r\n//\t\tdojo/_base/connect\r\n\r\nhas.add(\"events-keypress-typed\", function(){ // keypresses should only occur a printable character is hit\r\n\tvar testKeyEvent = {charCode: 0};\r\n\ttry{\r\n\t\ttestKeyEvent = document.createEvent(\"KeyboardEvent\");\r\n\t\t(testKeyEvent.initKeyboardEvent || testKeyEvent.initKeyEvent).call(testKeyEvent, \"keypress\", true, true, null, false, false, false, false, 9, 3);\r\n\t}catch(e){}\r\n\treturn testKeyEvent.charCode == 0 && !has(\"opera\");\r\n});\r\n\r\nfunction connect_(obj, event, context, method, dontFix){\r\n\tmethod = lang.hitch(context, method);\r\n\tif(!obj || !(obj.addEventListener || obj.attachEvent)){\r\n\t\t// it is a not a DOM node and we are using the dojo.connect style of treating a\r\n\t\t// method like an event, must go right to aspect\r\n\t\treturn aspect.after(obj || dojo.global, event, method, true);\r\n\t}\r\n\tif(typeof event == \"string\" && event.substring(0, 2) == \"on\"){\r\n\t\tevent = event.substring(2);\r\n\t}\r\n\tif(!obj){\r\n\t\tobj = dojo.global;\r\n\t}\r\n\tif(!dontFix){\r\n\t\tswitch(event){\r\n\t\t\t// dojo.connect has special handling for these event types\r\n\t\t\tcase \"keypress\":\r\n\t\t\t\tevent = keypress;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mouseenter\":\r\n\t\t\t\tevent = mouse.enter;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mouseleave\":\r\n\t\t\t\tevent = mouse.leave;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn on(obj, event, method, dontFix);\r\n}\r\n\r\nvar _punctMap = {\r\n\t106:42,\r\n\t111:47,\r\n\t186:59,\r\n\t187:43,\r\n\t188:44,\r\n\t189:45,\r\n\t190:46,\r\n\t191:47,\r\n\t192:96,\r\n\t219:91,\r\n\t220:92,\r\n\t221:93,\r\n\t222:39,\r\n\t229:113\r\n};\r\nvar evtCopyKey = has(\"mac\") ? \"metaKey\" : \"ctrlKey\";\r\n\r\n\r\nvar _synthesizeEvent = function(evt, props){\r\n\tvar faux = lang.mixin({}, evt, props);\r\n\tsetKeyChar(faux);\r\n\t// FIXME: would prefer to use lang.hitch: lang.hitch(evt, evt.preventDefault);\r\n\t// but it throws an error when preventDefault is invoked on Safari\r\n\t// does Event.preventDefault not support \"apply\" on Safari?\r\n\tfaux.preventDefault = function(){ evt.preventDefault(); };\r\n\tfaux.stopPropagation = function(){ evt.stopPropagation(); };\r\n\treturn faux;\r\n};\r\nfunction setKeyChar(evt){\r\n\tevt.keyChar = evt.charCode ? String.fromCharCode(evt.charCode) : '';\r\n\tevt.charOrCode = evt.keyChar || evt.keyCode;\r\n}\r\nvar keypress;\r\nif(has(\"events-keypress-typed\")){\r\n\t// this emulates Firefox's keypress behavior where every keydown can correspond to a keypress\r\n\tvar _trySetKeyCode = function(e, code){\r\n\t\ttry{\r\n\t\t\t// squelch errors when keyCode is read-only\r\n\t\t\t// (e.g. if keyCode is ctrl or shift)\r\n\t\t\treturn (e.keyCode = code);\r\n\t\t}catch(e){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t};\r\n\tkeypress = function(object, listener){\r\n\t\tvar keydownSignal = on(object, \"keydown\", function(evt){\r\n\t\t\t// munge key/charCode\r\n\t\t\tvar k=evt.keyCode;\r\n\t\t\t// These are Windows Virtual Key Codes\r\n\t\t\t// http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/WinUI/WindowsUserInterface/UserInput/VirtualKeyCodes.asp\r\n\t\t\tvar unprintable = (k!=13) && k!=32 && (k!=27||!has(\"ie\")) && (k<48||k>90) && (k<96||k>111) && (k<186||k>192) && (k<219||k>222) && k!=229;\r\n\t\t\t// synthesize keypress for most unprintables and CTRL-keys\r\n\t\t\tif(unprintable||evt.ctrlKey){\r\n\t\t\t\tvar c = unprintable ? 0 : k;\r\n\t\t\t\tif(evt.ctrlKey){\r\n\t\t\t\t\tif(k==3 || k==13){\r\n\t\t\t\t\t\treturn listener.call(evt.currentTarget, evt); // IE will post CTRL-BREAK, CTRL-ENTER as keypress natively\r\n\t\t\t\t\t}else if(c>95 && c<106){\r\n\t\t\t\t\t\tc -= 48; // map CTRL-[numpad 0-9] to ASCII\r\n\t\t\t\t\t}else if((!evt.shiftKey)&&(c>=65&&c<=90)){\r\n\t\t\t\t\t\tc += 32; // map CTRL-[A-Z] to lowercase\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tc = _punctMap[c] || c; // map other problematic CTRL combinations to ASCII\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// simulate a keypress event\r\n\t\t\t\tvar faux = _synthesizeEvent(evt, {type: 'keypress', faux: true, charCode: c});\r\n\t\t\t\tlistener.call(evt.currentTarget, faux);\r\n\t\t\t\tif(has(\"ie\")){\r\n\t\t\t\t\t_trySetKeyCode(evt, faux.keyCode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar keypressSignal = on(object, \"keypress\", function(evt){\r\n\t\t\tvar c = evt.charCode;\r\n\t\t\tc = c>=32 ? c : 0;\r\n\t\t\tevt = _synthesizeEvent(evt, {charCode: c, faux: true});\r\n\t\t\treturn listener.call(this, evt);\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tremove: function(){\r\n\t\t\t\tkeydownSignal.remove();\r\n\t\t\t\tkeypressSignal.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n}else{\r\n\tif(has(\"opera\")){\r\n\t\tkeypress = function(object, listener){\r\n\t\t\treturn on(object, \"keypress\", function(evt){\r\n\t\t\t\tvar c = evt.which;\r\n\t\t\t\tif(c==3){\r\n\t\t\t\t\tc=99; // Mozilla maps CTRL-BREAK to CTRL-c\r\n\t\t\t\t}\r\n\t\t\t\t// can't trap some keys at all, like INSERT and DELETE\r\n\t\t\t\t// there is no differentiating info between DELETE and \".\", or INSERT and \"-\"\r\n\t\t\t\tc = c<32 && !evt.shiftKey ? 0 : c;\r\n\t\t\t\tif(evt.ctrlKey && !evt.shiftKey && c>=65 && c<=90){\r\n\t\t\t\t\t// lowercase CTRL-[A-Z] keys\r\n\t\t\t\t\tc += 32;\r\n\t\t\t\t}\r\n\t\t\t\treturn listener.call(this, _synthesizeEvent(evt, { charCode: c }));\r\n\t\t\t});\r\n\t\t};\r\n\t}else{\r\n\t\tkeypress = function(object, listener){\r\n\t\t\treturn on(object, \"keypress\", function(evt){\r\n\t\t\t\tsetKeyChar(evt);\r\n\t\t\t\treturn listener.call(this, evt);\r\n\t\t\t});\r\n\t\t};\r\n\t}\r\n}\r\n\r\nvar connect = {\r\n\t// summary:\r\n\t//\t\tThis module defines the dojo.connect API.\r\n\t//\t\tThis modules also provides keyboard event handling helpers.\r\n\t//\t\tThis module exports an extension event for emulating Firefox's keypress handling.\r\n\t//\t\tHowever, this extension event exists primarily for backwards compatibility and\r\n\t//\t\tis not recommended. WebKit and IE uses an alternate keypress handling (only\r\n\t//\t\tfiring for printable characters, to distinguish from keydown events), and most\r\n\t//\t\tconsider the WebKit/IE behavior more desirable.\r\n\r\n\t_keypress:keypress,\r\n\r\n\tconnect:function(obj, event, context, method, dontFix){\r\n\t\t// summary:\r\n\t\t//\t\t`dojo.connect` is a deprecated event handling and delegation method in\r\n\t\t//\t\tDojo. It allows one function to \"listen in\" on the execution of\r\n\t\t//\t\tany other, triggering the second whenever the first is called. Many\r\n\t\t//\t\tlisteners may be attached to a function, and source functions may\r\n\t\t//\t\tbe either regular function calls or DOM events.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tConnects listeners to actions, so that after event fires, a\r\n\t\t//\t\tlistener is called with the same arguments passed to the original\r\n\t\t//\t\tfunction.\r\n\t\t//\r\n\t\t//\t\tSince `dojo.connect` allows the source of events to be either a\r\n\t\t//\t\t\"regular\" JavaScript function or a DOM event, it provides a uniform\r\n\t\t//\t\tinterface for listening to all the types of events that an\r\n\t\t//\t\tapplication is likely to deal with though a single, unified\r\n\t\t//\t\tinterface. DOM programmers may want to think of it as\r\n\t\t//\t\t\"addEventListener for everything and anything\".\r\n\t\t//\r\n\t\t//\t\tWhen setting up a connection, the `event` parameter must be a\r\n\t\t//\t\tstring that is the name of the method/event to be listened for. If\r\n\t\t//\t\t`obj` is null, `kernel.global` is assumed, meaning that connections\r\n\t\t//\t\tto global methods are supported but also that you may inadvertently\r\n\t\t//\t\tconnect to a global by passing an incorrect object name or invalid\r\n\t\t//\t\treference.\r\n\t\t//\r\n\t\t//\t\t`dojo.connect` generally is forgiving. If you pass the name of a\r\n\t\t//\t\tfunction or method that does not yet exist on `obj`, connect will\r\n\t\t//\t\tnot fail, but will instead set up a stub method. Similarly, null\r\n\t\t//\t\targuments may simply be omitted such that fewer than 4 arguments\r\n\t\t//\t\tmay be required to set up a connection See the examples for details.\r\n\t\t//\r\n\t\t//\t\tThe return value is a handle that is needed to\r\n\t\t//\t\tremove this connection with `dojo.disconnect`.\r\n\t\t//\r\n\t\t// obj: Object?\r\n\t\t//\t\tThe source object for the event function.\r\n\t\t//\t\tDefaults to `kernel.global` if null.\r\n\t\t//\t\tIf obj is a DOM node, the connection is delegated\r\n\t\t//\t\tto the DOM event manager (unless dontFix is true).\r\n\t\t//\r\n\t\t// event: String\r\n\t\t//\t\tString name of the event function in obj.\r\n\t\t//\t\tI.e. identifies a property `obj[event]`.\r\n\t\t//\r\n\t\t// context: Object|null\r\n\t\t//\t\tThe object that method will receive as \"this\".\r\n\t\t//\r\n\t\t//\t\tIf context is null and method is a function, then method\r\n\t\t//\t\tinherits the context of event.\r\n\t\t//\r\n\t\t//\t\tIf method is a string then context must be the source\r\n\t\t//\t\tobject object for method (context[method]). If context is null,\r\n\t\t//\t\tkernel.global is used.\r\n\t\t//\r\n\t\t// method: String|Function\r\n\t\t//\t\tA function reference, or name of a function in context.\r\n\t\t//\t\tThe function identified by method fires after event does.\r\n\t\t//\t\tmethod receives the same arguments as the event.\r\n\t\t//\t\tSee context argument comments for information on method's scope.\r\n\t\t//\r\n\t\t// dontFix: Boolean?\r\n\t\t//\t\tIf obj is a DOM node, set dontFix to true to prevent delegation\r\n\t\t//\t\tof this connection to the DOM event manager.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tWhen obj.onchange(), do ui.update():\r\n\t\t//\t|\tdojo.connect(obj, \"onchange\", ui, \"update\");\r\n\t\t//\t|\tdojo.connect(obj, \"onchange\", ui, ui.update); // same\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tUsing return value for disconnect:\r\n\t\t//\t|\tvar link = dojo.connect(obj, \"onchange\", ui, \"update\");\r\n\t\t//\t|\t...\r\n\t\t//\t|\tdojo.disconnect(link);\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tWhen onglobalevent executes, watcher.handler is invoked:\r\n\t\t//\t|\tdojo.connect(null, \"onglobalevent\", watcher, \"handler\");\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tWhen ob.onCustomEvent executes, customEventHandler is invoked:\r\n\t\t//\t|\tdojo.connect(ob, \"onCustomEvent\", null, \"customEventHandler\");\r\n\t\t//\t|\tdojo.connect(ob, \"onCustomEvent\", \"customEventHandler\"); // same\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tWhen ob.onCustomEvent executes, customEventHandler is invoked\r\n\t\t//\t\twith the same scope (this):\r\n\t\t//\t|\tdojo.connect(ob, \"onCustomEvent\", null, customEventHandler);\r\n\t\t//\t|\tdojo.connect(ob, \"onCustomEvent\", customEventHandler); // same\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tWhen globalEvent executes, globalHandler is invoked\r\n\t\t//\t\twith the same scope (this):\r\n\t\t//\t|\tdojo.connect(null, \"globalEvent\", null, globalHandler);\r\n\t\t//\t|\tdojo.connect(\"globalEvent\", globalHandler); // same\r\n\r\n\t\t// normalize arguments\r\n\t\tvar a=arguments, args=[], i=0;\r\n\t\t// if a[0] is a String, obj was omitted\r\n\t\targs.push(typeof a[0] == \"string\" ? null : a[i++], a[i++]);\r\n\t\t// if the arg-after-next is a String or Function, context was NOT omitted\r\n\t\tvar a1 = a[i+1];\r\n\t\targs.push(typeof a1 == \"string\" || typeof a1 == \"function\" ? a[i++] : null, a[i++]);\r\n\t\t// absorb any additional arguments\r\n\t\tfor(var l=a.length; i<l; i++){\targs.push(a[i]); }\r\n\t\treturn connect_.apply(this, args);\r\n\t},\r\n\r\n\tdisconnect:function(handle){\r\n\t\t// summary:\r\n\t\t//\t\tRemove a link created by dojo.connect.\r\n\t\t// description:\r\n\t\t//\t\tRemoves the connection between event and the method referenced by handle.\r\n\t\t// handle: Handle\r\n\t\t//\t\tthe return value of the dojo.connect call that created the connection.\r\n\r\n\t\tif(handle){\r\n\t\t\thandle.remove();\r\n\t\t}\r\n\t},\r\n\r\n\tsubscribe:function(topic, context, method){\r\n\t\t// summary:\r\n\t\t//\t\tAttach a listener to a named topic. The listener function is invoked whenever the\r\n\t\t//\t\tnamed topic is published (see: dojo.publish).\r\n\t\t//\t\tReturns a handle which is needed to unsubscribe this listener.\r\n\t\t// topic: String\r\n\t\t//\t\tThe topic to which to subscribe.\r\n\t\t// context: Object?\r\n\t\t//\t\tScope in which method will be invoked, or null for default scope.\r\n\t\t// method: String|Function\r\n\t\t//\t\tThe name of a function in context, or a function reference. This is the function that\r\n\t\t//\t\tis invoked when topic is published.\r\n\t\t// example:\r\n\t\t//\t|\tdojo.subscribe(\"alerts\", null, function(caption, message){ alert(caption + \"\\n\" + message); });\r\n\t\t//\t|\tdojo.publish(\"alerts\", [ \"read this\", \"hello world\" ]);\r\n\t\treturn hub.subscribe(topic, lang.hitch(context, method));\r\n\t},\r\n\r\n\tpublish:function(topic, args){\r\n\t\t// summary:\r\n\t\t//\t\tInvoke all listener method subscribed to topic.\r\n\t\t// topic: String\r\n\t\t//\t\tThe name of the topic to publish.\r\n\t\t// args: Array?\r\n\t\t//\t\tAn array of arguments. The arguments will be applied\r\n\t\t//\t\tto each topic subscriber (as first class parameters, via apply).\r\n\t\t// example:\r\n\t\t//\t|\tdojo.subscribe(\"alerts\", null, function(caption, message){ alert(caption + \"\\n\" + message); };\r\n\t\t//\t|\tdojo.publish(\"alerts\", [ \"read this\", \"hello world\" ]);\r\n\t\treturn hub.publish.apply(hub, [topic].concat(args));\r\n\t},\r\n\r\n\tconnectPublisher:function(topic, obj, event){\r\n\t\t// summary:\r\n\t\t//\t\tEnsure that every time obj.event() is called, a message is published\r\n\t\t//\t\ton the topic. Returns a handle which can be passed to\r\n\t\t//\t\tdojo.disconnect() to disable subsequent automatic publication on\r\n\t\t//\t\tthe topic.\r\n\t\t// topic: String\r\n\t\t//\t\tThe name of the topic to publish.\r\n\t\t// obj: Object?\r\n\t\t//\t\tThe source object for the event function. Defaults to kernel.global\r\n\t\t//\t\tif null.\r\n\t\t// event: String\r\n\t\t//\t\tThe name of the event function in obj.\r\n\t\t//\t\tI.e. identifies a property obj[event].\r\n\t\t// example:\r\n\t\t//\t|\tdojo.connectPublisher(\"/ajax/start\", dojo, \"xhrGet\");\r\n\t\tvar pf = function(){ connect.publish(topic, arguments); };\r\n\t\treturn event ? connect.connect(obj, event, pf) : connect.connect(obj, pf); //Handle\r\n\t},\r\n\r\n\tisCopyKey: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tChecks an event for the copy key (meta on Mac, and ctrl anywhere else)\r\n\t\t// e: Event\r\n\t\t//\t\tEvent object to examine\r\n\t\treturn e[evtCopyKey];\t// Boolean\r\n\t}\r\n};\r\n\r\nconnect.unsubscribe = connect.disconnect;\r\n/*=====\r\n connect.unsubscribe = function(handle){\r\n\t // summary:\r\n\t //\t\tRemove a topic listener.\r\n\t // handle: Handle\r\n\t //\t\tThe handle returned from a call to subscribe.\r\n\t // example:\r\n\t //\t|\tvar alerter = dojo.subscribe(\"alerts\", null, function(caption, message){ alert(caption + \"\\n\" + message); };\r\n\t //\t|\t...\r\n\t //\t|\tdojo.unsubscribe(alerter);\r\n };\r\n =====*/\r\n\r\nhas(\"extend-dojo\") && lang.mixin(dojo, connect);\r\nreturn connect;\r\n\r\n});\r\n\r\n\r\n"]}