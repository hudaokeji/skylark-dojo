{"version":3,"sources":["_base/fx.js"],"names":["define","dojo","config","lang","Evented","Color","aspect","has","dom","style","_mixin","mixin","basefx","_Line","start","end","this","prototype","getValue","n","Animation","args","isArray","curve","extend","duration","repeat","rate","_percent","_startRepeatCount","_getStep","_p","_e","easing","_fire","evt","a","debugAtAllCosts","apply","e","console","error","play","delay","gotoStart","_t","_delayTimer","_clearTimer","_stopTimer","_active","_paused","node","de","hitch","setTimeout","_play","_startTime","Date","valueOf","value","_cycle","pause","gotoPercent","percent","andPlay","stop","gotoEnd","_timer","destroy","status","curr","step","_startTimer","clearTimeout","ctr","timer","runner","run","after","setInterval","remove","clearInterval","_makeFadeable","ns","width","length","get","_fade","byId","fArgs","properties","props","opacity","anim","animateProperty","partial","fadeIn","fadeOut","_defaultEasing","Math","sin","PI","PropLine","p","_properties","prop","tempColor","r","ret","blendColors","toCss","units","pm","display","isFunction","isObject","isColor","toLowerCase","indexOf","getStyle","v","height","offsetHeight","offsetWidth","undefined","parseFloat","onEnd","_Animation"],"mappings":"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","file":"../../_base/fx.js","sourcesContent":["define([\"./kernel\", \"./config\", /*===== \"./declare\", =====*/ \"./lang\", \"../Evented\", \"./Color\", \"../aspect\", \"../sniff\", \"../dom\", \"../dom-style\"],\r\n\tfunction(dojo, config, /*===== declare, =====*/ lang, Evented, Color, aspect, has, dom, style){\r\n\t// module:\r\n\t//\t\tdojo/_base/fx\r\n\t// notes:\r\n\t//\t\tAnimation loosely package based on Dan Pupius' work, contributed under CLA; see\r\n\t//\t\thttp://pupius.co.uk/js/Toolkit.Drawing.js\r\n\r\n\tvar _mixin = lang.mixin;\r\n\r\n\t// Module export\r\n\tvar basefx = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module defines the base dojo/_base/fx implementation.\r\n\t};\r\n\r\n\tvar _Line = basefx._Line = function(/*int*/ start, /*int*/ end){\r\n\t\t// summary:\r\n\t\t//\t\tObject used to generate values from a start value to an end value\r\n\t\t// start: int\r\n\t\t//\t\tBeginning value for range\r\n\t\t// end: int\r\n\t\t//\t\tEnding value for range\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t};\r\n\r\n\t_Line.prototype.getValue = function(/*float*/ n){\r\n\t\t// summary:\r\n\t\t//\t\tReturns the point on the line\r\n\t\t// n:\r\n\t\t//\t\ta floating point number greater than 0 and less than 1\r\n\t\treturn ((this.end - this.start) * n) + this.start; // Decimal\r\n\t};\r\n\r\n\tvar Animation = basefx.Animation = function(args){\r\n\t\t// summary:\r\n\t\t//\t\tA generic animation class that fires callbacks into its handlers\r\n\t\t//\t\tobject at various states.\r\n\t\t// description:\r\n\t\t//\t\tA generic animation class that fires callbacks into its handlers\r\n\t\t//\t\tobject at various states. Nearly all dojo animation functions\r\n\t\t//\t\treturn an instance of this method, usually without calling the\r\n\t\t//\t\t.play() method beforehand. Therefore, you will likely need to\r\n\t\t//\t\tcall .play() on instances of `Animation` when one is\r\n\t\t//\t\treturned.\r\n\t\t// args: Object\r\n\t\t//\t\tThe 'magic argument', mixing all the properties into this\r\n\t\t//\t\tanimation instance.\r\n\r\n\t\t_mixin(this, args);\r\n\t\tif(lang.isArray(this.curve)){\r\n\t\t\tthis.curve = new _Line(this.curve[0], this.curve[1]);\r\n\t\t}\r\n\r\n\t};\r\n\tAnimation.prototype = new Evented();\r\n\r\n\tlang.extend(Animation, {\r\n\t\t// duration: Integer\r\n\t\t//\t\tThe time in milliseconds the animation will take to run\r\n\t\tduration: 350,\r\n\r\n\t/*=====\r\n\t\t// curve: _Line|Array\r\n\t\t//\t\tA two element array of start and end values, or a `_Line` instance to be\r\n\t\t//\t\tused in the Animation.\r\n\t\tcurve: null,\r\n\r\n\t\t// easing: Function?\r\n\t\t//\t\tA Function to adjust the acceleration (or deceleration) of the progress\r\n\t\t//\t\tacross a _Line\r\n\t\teasing: null,\r\n\t=====*/\r\n\r\n\t\t// repeat: Integer?\r\n\t\t//\t\tThe number of times to loop the animation\r\n\t\trepeat: 0,\r\n\r\n\t\t// rate: Integer?\r\n\t\t//\t\tthe time in milliseconds to wait before advancing to next frame\r\n\t\t//\t\t(used as a fps timer: 1000/rate = fps)\r\n\t\trate: 20 /* 50 fps */,\r\n\r\n\t/*=====\r\n\t\t// delay: Integer?\r\n\t\t//\t\tThe time in milliseconds to wait before starting animation after it\r\n\t\t//\t\thas been .play()'ed\r\n\t\tdelay: null,\r\n\r\n\t\t// beforeBegin: Event?\r\n\t\t//\t\tSynthetic event fired before a Animation begins playing (synchronous)\r\n\t\tbeforeBegin: null,\r\n\r\n\t\t// onBegin: Event?\r\n\t\t//\t\tSynthetic event fired as a Animation begins playing (useful?)\r\n\t\tonBegin: null,\r\n\r\n\t\t// onAnimate: Event?\r\n\t\t//\t\tSynthetic event fired at each interval of the Animation\r\n\t\tonAnimate: null,\r\n\r\n\t\t// onEnd: Event?\r\n\t\t//\t\tSynthetic event fired after the final frame of the Animation\r\n\t\tonEnd: null,\r\n\r\n\t\t// onPlay: Event?\r\n\t\t//\t\tSynthetic event fired any time the Animation is play()'ed\r\n\t\tonPlay: null,\r\n\r\n\t\t// onPause: Event?\r\n\t\t//\t\tSynthetic event fired when the Animation is paused\r\n\t\tonPause: null,\r\n\r\n\t\t// onStop: Event\r\n\t\t//\t\tSynthetic event fires when the Animation is stopped\r\n\t\tonStop: null,\r\n\r\n\t=====*/\r\n\r\n\t\t_percent: 0,\r\n\t\t_startRepeatCount: 0,\r\n\r\n\t\t_getStep: function(){\r\n\t\t\tvar _p = this._percent,\r\n\t\t\t\t_e = this.easing\r\n\t\t\t;\r\n\t\t\treturn _e ? _e(_p) : _p;\r\n\t\t},\r\n\t\t_fire: function(/*Event*/ evt, /*Array?*/ args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvenience function.  Fire event \"evt\" and pass it the\r\n\t\t\t//\t\targuments specified in \"args\".\r\n\t\t\t// description:\r\n\t\t\t//\t\tConvenience function.  Fire event \"evt\" and pass it the\r\n\t\t\t//\t\targuments specified in \"args\".\r\n\t\t\t//\t\tFires the callback in the scope of this Animation\r\n\t\t\t//\t\tinstance.\r\n\t\t\t// evt:\r\n\t\t\t//\t\tThe event to fire.\r\n\t\t\t// args:\r\n\t\t\t//\t\tThe arguments to pass to the event.\r\n\t\t\tvar a = args||[];\r\n\t\t\tif(this[evt]){\r\n\t\t\t\tif(config.debugAtAllCosts){\r\n\t\t\t\t\tthis[evt].apply(this, a);\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tthis[evt].apply(this, a);\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t// squelch and log because we shouldn't allow exceptions in\r\n\t\t\t\t\t\t// synthetic event handlers to cause the internal timer to run\r\n\t\t\t\t\t\t// amuck, potentially pegging the CPU. I'm not a fan of this\r\n\t\t\t\t\t\t// squelch, but hopefully logging will make it clear what's\r\n\t\t\t\t\t\t// going on\r\n\t\t\t\t\t\tconsole.error(\"exception in animation handler for:\", evt);\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this; // Animation\r\n\t\t},\r\n\r\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStart the animation.\r\n\t\t\t// delay:\r\n\t\t\t//\t\tHow many milliseconds to delay before starting.\r\n\t\t\t// gotoStart:\r\n\t\t\t//\t\tIf true, starts the animation from the beginning; otherwise,\r\n\t\t\t//\t\tstarts it from its current position.\r\n\t\t\t// returns: Animation\r\n\t\t\t//\t\tThe instance to allow chaining.\r\n\r\n\t\t\tvar _t = this;\r\n\t\t\tif(_t._delayTimer){ _t._clearTimer(); }\r\n\t\t\tif(gotoStart){\r\n\t\t\t\t_t._stopTimer();\r\n\t\t\t\t_t._active = _t._paused = false;\r\n\t\t\t\t_t._percent = 0;\r\n\t\t\t}else if(_t._active && !_t._paused){\r\n\t\t\t\treturn _t;\r\n\t\t\t}\r\n\r\n\t\t\t_t._fire(\"beforeBegin\", [_t.node]);\r\n\r\n\t\t\tvar de = delay || _t.delay,\r\n\t\t\t\t_p = lang.hitch(_t, \"_play\", gotoStart);\r\n\r\n\t\t\tif(de > 0){\r\n\t\t\t\t_t._delayTimer = setTimeout(_p, de);\r\n\t\t\t\treturn _t;\r\n\t\t\t}\r\n\t\t\t_p();\r\n\t\t\treturn _t;\t// Animation\r\n\t\t},\r\n\r\n\t\t_play: function(gotoStart){\r\n\t\t\tvar _t = this;\r\n\t\t\tif(_t._delayTimer){ _t._clearTimer(); }\r\n\t\t\t_t._startTime = new Date().valueOf();\r\n\t\t\tif(_t._paused){\r\n\t\t\t\t_t._startTime -= _t.duration * _t._percent;\r\n\t\t\t}\r\n\r\n\t\t\t_t._active = true;\r\n\t\t\t_t._paused = false;\r\n\t\t\tvar value = _t.curve.getValue(_t._getStep());\r\n\t\t\tif(!_t._percent){\r\n\t\t\t\tif(!_t._startRepeatCount){\r\n\t\t\t\t\t_t._startRepeatCount = _t.repeat;\r\n\t\t\t\t}\r\n\t\t\t\t_t._fire(\"onBegin\", [value]);\r\n\t\t\t}\r\n\r\n\t\t\t_t._fire(\"onPlay\", [value]);\r\n\r\n\t\t\t_t._cycle();\r\n\t\t\treturn _t; // Animation\r\n\t\t},\r\n\r\n\t\tpause: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPauses a running animation.\r\n\t\t\tvar _t = this;\r\n\t\t\tif(_t._delayTimer){ _t._clearTimer(); }\r\n\t\t\t_t._stopTimer();\r\n\t\t\tif(!_t._active){ return _t; /*Animation*/ }\r\n\t\t\t_t._paused = true;\r\n\t\t\t_t._fire(\"onPause\", [_t.curve.getValue(_t._getStep())]);\r\n\t\t\treturn _t; // Animation\r\n\t\t},\r\n\r\n\t\tgotoPercent: function(/*Decimal*/ percent, /*Boolean?*/ andPlay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the progress of the animation.\r\n\t\t\t// percent:\r\n\t\t\t//\t\tA percentage in decimal notation (between and including 0.0 and 1.0).\r\n\t\t\t// andPlay:\r\n\t\t\t//\t\tIf true, play the animation after setting the progress.\r\n\t\t\tvar _t = this;\r\n\t\t\t_t._stopTimer();\r\n\t\t\t_t._active = _t._paused = true;\r\n\t\t\t_t._percent = percent;\r\n\t\t\tif(andPlay){ _t.play(); }\r\n\t\t\treturn _t; // Animation\r\n\t\t},\r\n\r\n\t\tstop: function(/*boolean?*/ gotoEnd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStops a running animation.\r\n\t\t\t// gotoEnd:\r\n\t\t\t//\t\tIf true, the animation will end.\r\n\t\t\tvar _t = this;\r\n\t\t\tif(_t._delayTimer){ _t._clearTimer(); }\r\n\t\t\tif(!_t._timer){ return _t; /* Animation */ }\r\n\t\t\t_t._stopTimer();\r\n\t\t\tif(gotoEnd){\r\n\t\t\t\t_t._percent = 1;\r\n\t\t\t}\r\n\t\t\t_t._fire(\"onStop\", [_t.curve.getValue(_t._getStep())]);\r\n\t\t\t_t._active = _t._paused = false;\r\n\t\t\treturn _t; // Animation\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcleanup the animation\r\n\t\t\tthis.stop();\r\n\t\t},\r\n\r\n\t\tstatus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a string token representation of the status of\r\n\t\t\t//\t\tthe animation, one of: \"paused\", \"playing\", \"stopped\"\r\n\t\t\tif(this._active){\r\n\t\t\t\treturn this._paused ? \"paused\" : \"playing\"; // String\r\n\t\t\t}\r\n\t\t\treturn \"stopped\"; // String\r\n\t\t},\r\n\r\n\t\t_cycle: function(){\r\n\t\t\tvar _t = this;\r\n\t\t\tif(_t._active){\r\n\t\t\t\tvar curr = new Date().valueOf();\r\n\t\t\t\t// Allow durations of 0 (instant) by setting step to 1 - see #13798\r\n\t\t\t\tvar step = _t.duration === 0 ? 1 : (curr - _t._startTime) / (_t.duration);\r\n\r\n\t\t\t\tif(step >= 1){\r\n\t\t\t\t\tstep = 1;\r\n\t\t\t\t}\r\n\t\t\t\t_t._percent = step;\r\n\r\n\t\t\t\t// Perform easing\r\n\t\t\t\tif(_t.easing){\r\n\t\t\t\t\tstep = _t.easing(step);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_t._fire(\"onAnimate\", [_t.curve.getValue(step)]);\r\n\r\n\t\t\t\tif(_t._percent < 1){\r\n\t\t\t\t\t_t._startTimer();\r\n\t\t\t\t}else{\r\n\t\t\t\t\t_t._active = false;\r\n\r\n\t\t\t\t\tif(_t.repeat > 0){\r\n\t\t\t\t\t\t_t.repeat--;\r\n\t\t\t\t\t\t_t.play(null, true);\r\n\t\t\t\t\t}else if(_t.repeat == -1){\r\n\t\t\t\t\t\t_t.play(null, true);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(_t._startRepeatCount){\r\n\t\t\t\t\t\t\t_t.repeat = _t._startRepeatCount;\r\n\t\t\t\t\t\t\t_t._startRepeatCount = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_t._percent = 0;\r\n\t\t\t\t\t_t._fire(\"onEnd\", [_t.node]);\r\n\t\t\t\t\t!_t.repeat && _t._stopTimer();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn _t; // Animation\r\n\t\t},\r\n\r\n\t\t_clearTimer: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear the play delay timer\r\n\t\t\tclearTimeout(this._delayTimer);\r\n\t\t\tdelete this._delayTimer;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t// the local timer, stubbed into all Animation instances\r\n\tvar ctr = 0,\r\n\t\ttimer = null,\r\n\t\trunner = {\r\n\t\t\trun: function(){}\r\n\t\t};\r\n\r\n\tlang.extend(Animation, {\r\n\r\n\t\t_startTimer: function(){\r\n\t\t\tif(!this._timer){\r\n\t\t\t\tthis._timer = aspect.after(runner, \"run\", lang.hitch(this, \"_cycle\"), true);\r\n\t\t\t\tctr++;\r\n\t\t\t}\r\n\t\t\tif(!timer){\r\n\t\t\t\ttimer = setInterval(lang.hitch(runner, \"run\"), this.rate);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_stopTimer: function(){\r\n\t\t\tif(this._timer){\r\n\t\t\t\tthis._timer.remove();\r\n\t\t\t\tthis._timer = null;\r\n\t\t\t\tctr--;\r\n\t\t\t}\r\n\t\t\tif(ctr <= 0){\r\n\t\t\t\tclearInterval(timer);\r\n\t\t\t\ttimer = null;\r\n\t\t\t\tctr = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tvar _makeFadeable =\r\n\t\thas(\"ie\") ? function(node){\r\n\t\t\t// only set the zoom if the \"tickle\" value would be the same as the\r\n\t\t\t// default\r\n\t\t\tvar ns = node.style;\r\n\t\t\t// don't set the width to auto if it didn't already cascade that way.\r\n\t\t\t// We don't want to f anyones designs\r\n\t\t\tif(!ns.width.length && style.get(node, \"width\") == \"auto\"){\r\n\t\t\t\tns.width = \"auto\";\r\n\t\t\t}\r\n\t\t} :\r\n\t\tfunction(){};\r\n\r\n\tbasefx._fade = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an animation that will fade the node defined by\r\n\t\t//\t\targs.node from the start to end values passed (args.start\r\n\t\t//\t\targs.end) (end is mandatory, start is optional)\r\n\r\n\t\targs.node = dom.byId(args.node);\r\n\t\tvar fArgs = _mixin({ properties: {} }, args),\r\n\t\t\tprops = (fArgs.properties.opacity = {});\r\n\r\n\t\tprops.start = !(\"start\" in fArgs) ?\r\n\t\t\tfunction(){\r\n\t\t\t\treturn +style.get(fArgs.node, \"opacity\")||0;\r\n\t\t\t} : fArgs.start;\r\n\t\tprops.end = fArgs.end;\r\n\r\n\t\tvar anim = basefx.animateProperty(fArgs);\r\n\t\taspect.after(anim, \"beforeBegin\", lang.partial(_makeFadeable, fArgs.node), true);\r\n\r\n\t\treturn anim; // Animation\r\n\t};\r\n\r\n\t/*=====\r\n\tvar __FadeArgs = declare(null, {\r\n\t\t// node: DOMNode|String\r\n\t\t//\t\tThe node referenced in the animation\r\n\t\t// duration: Integer?\r\n\t\t//\t\tDuration of the animation in milliseconds.\r\n\t\t// easing: Function?\r\n\t\t//\t\tAn easing function.\r\n\t});\r\n\t=====*/\r\n\r\n\tbasefx.fadeIn = function(/*__FadeArgs*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an animation that will fade node defined in 'args' from\r\n\t\t//\t\tits current opacity to fully opaque.\r\n\t\treturn basefx._fade(_mixin({ end: 1 }, args)); // Animation\r\n\t};\r\n\r\n\tbasefx.fadeOut = function(/*__FadeArgs*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an animation that will fade node defined in 'args'\r\n\t\t//\t\tfrom its current opacity to fully transparent.\r\n\t\treturn basefx._fade(_mixin({ end: 0 }, args)); // Animation\r\n\t};\r\n\r\n\tbasefx._defaultEasing = function(/*Decimal?*/ n){\r\n\t\t// summary:\r\n\t\t//\t\tThe default easing function for Animation(s)\r\n\t\treturn 0.5 + ((Math.sin((n + 1.5) * Math.PI)) / 2);\t// Decimal\r\n\t};\r\n\r\n\tvar PropLine = function(properties){\r\n\t\t// PropLine is an internal class which is used to model the values of\r\n\t\t// an a group of CSS properties across an animation lifecycle. In\r\n\t\t// particular, the \"getValue\" function handles getting interpolated\r\n\t\t// values between start and end for a particular CSS value.\r\n\t\tthis._properties = properties;\r\n\t\tfor(var p in properties){\r\n\t\t\tvar prop = properties[p];\r\n\t\t\tif(prop.start instanceof Color){\r\n\t\t\t\t// create a reusable temp color object to keep intermediate results\r\n\t\t\t\tprop.tempColor = new Color();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tPropLine.prototype.getValue = function(r){\r\n\t\tvar ret = {};\r\n\t\tfor(var p in this._properties){\r\n\t\t\tvar prop = this._properties[p],\r\n\t\t\t\tstart = prop.start;\r\n\t\t\tif(start instanceof Color){\r\n\t\t\t\tret[p] = Color.blendColors(start, prop.end, r, prop.tempColor).toCss();\r\n\t\t\t}else if(!lang.isArray(start)){\r\n\t\t\t\tret[p] = ((prop.end - start) * r) + start + (p != \"opacity\" ? prop.units || \"px\" : 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n\r\n\t/*=====\r\n\tvar __AnimArgs = declare(__FadeArgs, {\r\n\t\t// properties: Object?\r\n\t\t//\t\tA hash map of style properties to Objects describing the transition,\r\n\t\t//\t\tsuch as the properties of _Line with an additional 'units' property\r\n\t\tproperties: {}\r\n\r\n\t\t//TODOC: add event callbacks\r\n\t});\r\n\t=====*/\r\n\r\n\tbasefx.animateProperty = function(/*__AnimArgs*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an animation that will transition the properties of\r\n\t\t//\t\tnode defined in `args` depending how they are defined in\r\n\t\t//\t\t`args.properties`\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tFoundation of most `dojo/_base/fx`\r\n\t\t//\t\tanimations. It takes an object of \"properties\" corresponding to\r\n\t\t//\t\tstyle properties, and animates them in parallel over a set\r\n\t\t//\t\tduration.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tA simple animation that changes the width of the specified node.\r\n\t\t//\t|\tbasefx.animateProperty({\r\n\t\t//\t|\t\tnode: \"nodeId\",\r\n\t\t//\t|\t\tproperties: { width: 400 },\r\n\t\t//\t|\t}).play();\r\n\t\t//\t\tDojo figures out the start value for the width and converts the\r\n\t\t//\t\tinteger specified for the width to the more expressive but\r\n\t\t//\t\tverbose form `{ width: { end: '400', units: 'px' } }` which you\r\n\t\t//\t\tcan also specify directly. Defaults to 'px' if omitted.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tAnimate width, height, and padding over 2 seconds... the\r\n\t\t//\t\tpedantic way:\r\n\t\t//\t|\tbasefx.animateProperty({ node: node, duration:2000,\r\n\t\t//\t|\t\tproperties: {\r\n\t\t//\t|\t\t\twidth: { start: '200', end: '400', units:\"px\" },\r\n\t\t//\t|\t\t\theight: { start:'200', end: '400', units:\"px\" },\r\n\t\t//\t|\t\t\tpaddingTop: { start:'5', end:'50', units:\"px\" }\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t}).play();\r\n\t\t//\t\tNote 'paddingTop' is used over 'padding-top'. Multi-name CSS properties\r\n\t\t//\t\tare written using \"mixed case\", as the hyphen is illegal as an object key.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tPlug in a different easing function and register a callback for\r\n\t\t//\t\twhen the animation ends. Easing functions accept values between\r\n\t\t//\t\tzero and one and return a value on that basis. In this case, an\r\n\t\t//\t\texponential-in curve.\r\n\t\t//\t|\tbasefx.animateProperty({\r\n\t\t//\t|\t\tnode: \"nodeId\",\r\n\t\t//\t|\t\t// dojo figures out the start value\r\n\t\t//\t|\t\tproperties: { width: { end: 400 } },\r\n\t\t//\t|\t\teasing: function(n){\r\n\t\t//\t|\t\t\treturn (n==0) ? 0 : Math.pow(2, 10 * (n - 1));\r\n\t\t//\t|\t\t},\r\n\t\t//\t|\t\tonEnd: function(node){\r\n\t\t//\t|\t\t\t// called when the animation finishes. The animation\r\n\t\t//\t|\t\t\t// target is passed to this function\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t}).play(500); // delay playing half a second\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tLike all `Animation`s, animateProperty returns a handle to the\r\n\t\t//\t\tAnimation instance, which fires the events common to Dojo FX. Use `aspect.after`\r\n\t\t//\t\tto access these events outside of the Animation definition:\r\n\t\t//\t|\tvar anim = basefx.animateProperty({\r\n\t\t//\t|\t\tnode:\"someId\",\r\n\t\t//\t|\t\tproperties:{\r\n\t\t//\t|\t\t\twidth:400, height:500\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\t|\taspect.after(anim, \"onEnd\", function(){\r\n\t\t//\t|\t\tconsole.log(\"animation ended\");\r\n\t\t//\t|\t}, true);\r\n\t\t//\t|\t// play the animation now:\r\n\t\t//\t|\tanim.play();\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tEach property can be a function whose return value is substituted along.\r\n\t\t//\t\tAdditionally, each measurement (eg: start, end) can be a function. The node\r\n\t\t//\t\treference is passed directly to callbacks.\r\n\t\t//\t|\tbasefx.animateProperty({\r\n\t\t//\t|\t\tnode:\"mine\",\r\n\t\t//\t|\t\tproperties:{\r\n\t\t//\t|\t\t\theight:function(node){\r\n\t\t//\t|\t\t\t\t// shrink this node by 50%\r\n\t\t//\t|\t\t\t\treturn domGeom.position(node).h / 2\r\n\t\t//\t|\t\t\t},\r\n\t\t//\t|\t\t\twidth:{\r\n\t\t//\t|\t\t\t\tstart:function(node){ return 100; },\r\n\t\t//\t|\t\t\t\tend:function(node){ return 200; }\r\n\t\t//\t|\t\t\t}\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t}).play();\r\n\t\t//\r\n\r\n\t\tvar n = args.node = dom.byId(args.node);\r\n\t\tif(!args.easing){ args.easing = dojo._defaultEasing; }\r\n\r\n\t\tvar anim = new Animation(args);\r\n\t\taspect.after(anim, \"beforeBegin\", lang.hitch(anim, function(){\r\n\t\t\tvar pm = {};\r\n\t\t\tfor(var p in this.properties){\r\n\t\t\t\t// Make shallow copy of properties into pm because we overwrite\r\n\t\t\t\t// some values below. In particular if start/end are functions\r\n\t\t\t\t// we don't want to overwrite them or the functions won't be\r\n\t\t\t\t// called if the animation is reused.\r\n\t\t\t\tif(p == \"width\" || p == \"height\"){\r\n\t\t\t\t\tthis.node.display = \"block\";\r\n\t\t\t\t}\r\n\t\t\t\tvar prop = this.properties[p];\r\n\t\t\t\tif(lang.isFunction(prop)){\r\n\t\t\t\t\tprop = prop(n);\r\n\t\t\t\t}\r\n\t\t\t\tprop = pm[p] = _mixin({}, (lang.isObject(prop) ? prop: { end: prop }));\r\n\r\n\t\t\t\tif(lang.isFunction(prop.start)){\r\n\t\t\t\t\tprop.start = prop.start(n);\r\n\t\t\t\t}\r\n\t\t\t\tif(lang.isFunction(prop.end)){\r\n\t\t\t\t\tprop.end = prop.end(n);\r\n\t\t\t\t}\r\n\t\t\t\tvar isColor = (p.toLowerCase().indexOf(\"color\") >= 0);\r\n\t\t\t\tfunction getStyle(node, p){\r\n\t\t\t\t\t// domStyle.get(node, \"height\") can return \"auto\" or \"\" on IE; this is more reliable:\r\n\t\t\t\t\tvar v = { height: node.offsetHeight, width: node.offsetWidth }[p];\r\n\t\t\t\t\tif(v !== undefined){ return v; }\r\n\t\t\t\t\tv = style.get(node, p);\r\n\t\t\t\t\treturn (p == \"opacity\") ? +v : (isColor ? v : parseFloat(v));\r\n\t\t\t\t}\r\n\t\t\t\tif(!(\"end\" in prop)){\r\n\t\t\t\t\tprop.end = getStyle(n, p);\r\n\t\t\t\t}else if(!(\"start\" in prop)){\r\n\t\t\t\t\tprop.start = getStyle(n, p);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(isColor){\r\n\t\t\t\t\tprop.start = new Color(prop.start);\r\n\t\t\t\t\tprop.end = new Color(prop.end);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tprop.start = (p == \"opacity\") ? +prop.start : parseFloat(prop.start);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.curve = new PropLine(pm);\r\n\t\t}), true);\r\n\t\taspect.after(anim, \"onAnimate\", lang.hitch(style, \"set\", anim.node), true);\r\n\t\treturn anim; // Animation\r\n\t};\r\n\r\n\tbasefx.anim = function(\t/*DOMNode|String*/\tnode,\r\n\t\t\t\t\t\t\t/*Object*/\t\t\tproperties,\r\n\t\t\t\t\t\t\t/*Integer?*/\t\tduration,\r\n\t\t\t\t\t\t\t/*Function?*/\t\teasing,\r\n\t\t\t\t\t\t\t/*Function?*/\t\tonEnd,\r\n\t\t\t\t\t\t\t/*Integer?*/\t\tdelay){\r\n\t\t// summary:\r\n\t\t//\t\tA simpler interface to `animateProperty()`, also returns\r\n\t\t//\t\tan instance of `Animation` but begins the animation\r\n\t\t//\t\timmediately, unlike nearly every other Dojo animation API.\r\n\t\t// description:\r\n\t\t//\t\tSimpler (but somewhat less powerful) version\r\n\t\t//\t\tof `animateProperty`.  It uses defaults for many basic properties\r\n\t\t//\t\tand allows for positional parameters to be used in place of the\r\n\t\t//\t\tpacked \"property bag\" which is used for other Dojo animation\r\n\t\t//\t\tmethods.\r\n\t\t//\r\n\t\t//\t\tThe `Animation` object returned will be already playing, so\r\n\t\t//\t\tcalling play() on it again is (usually) a no-op.\r\n\t\t// node:\r\n\t\t//\t\ta DOM node or the id of a node to animate CSS properties on\r\n\t\t// duration:\r\n\t\t//\t\tThe number of milliseconds over which the animation\r\n\t\t//\t\tshould run. Defaults to the global animation default duration\r\n\t\t//\t\t(350ms).\r\n\t\t// easing:\r\n\t\t//\t\tAn easing function over which to calculate acceleration\r\n\t\t//\t\tand deceleration of the animation through its duration.\r\n\t\t//\t\tA default easing algorithm is provided, but you may\r\n\t\t//\t\tplug in any you wish. A large selection of easing algorithms\r\n\t\t//\t\tare available in `dojo/fx/easing`.\r\n\t\t// onEnd:\r\n\t\t//\t\tA function to be called when the animation finishes\r\n\t\t//\t\trunning.\r\n\t\t// delay:\r\n\t\t//\t\tThe number of milliseconds to delay beginning the\r\n\t\t//\t\tanimation by. The default is 0.\r\n\t\t// example:\r\n\t\t//\t\tFade out a node\r\n\t\t//\t|\tbasefx.anim(\"id\", { opacity: 0 });\r\n\t\t// example:\r\n\t\t//\t\tFade out a node over a full second\r\n\t\t//\t|\tbasefx.anim(\"id\", { opacity: 0 }, 1000);\r\n\t\treturn basefx.animateProperty({ // Animation\r\n\t\t\tnode: node,\r\n\t\t\tduration: duration || Animation.prototype.duration,\r\n\t\t\tproperties: properties,\r\n\t\t\teasing: easing,\r\n\t\t\tonEnd: onEnd\r\n\t\t}).play(delay || 0);\r\n\t};\r\n\r\n\r\n\tif(has(\"extend-dojo\")){\r\n\t\t_mixin(dojo, basefx);\r\n\t\t// Alias to drop come 2.0:\r\n\t\tdojo._Animation = Animation;\r\n\t}\r\n\r\n\treturn basefx;\r\n});\r\n"]}