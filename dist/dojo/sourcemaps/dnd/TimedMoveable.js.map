{"version":3,"sources":["dnd/TimedMoveable.js"],"names":["define","declare","Moveable","oldOnMove","prototype","onMove","timeout","constructor","node","params","this","onMoveStop","mover","_timer","clearTimeout","call","_leftTop","apply","arguments","leftTop","_t","setTimeout"],"mappings":";;;;;;;AAAAA,QAAQ,mBAAoB,cAA0C,SAASC,EAASC,GAcvF,IAAIC,EAAYD,EAASE,UAAUC,OAEnC,OAAOJ,EAAQ,yBAA0BC,GAQxCI,QAAS,GAETC,YAAa,SAASC,EAAMC,GASvBA,IAASA,MACVA,EAAOH,SAAoC,iBAAlBG,EAAOH,SAAuBG,EAAOH,SAAW,IAC3EI,KAAKJ,QAAUG,EAAOH,UAIxBK,WAAY,SAAmBC,GAC3BA,EAAMC,SAERC,aAAaF,EAAMC,QAEnBV,EAAUY,KAAKL,KAAME,EAAOA,EAAMI,WAEnCd,EAASE,UAAUO,WAAWM,MAAMP,KAAMQ,YAE3Cb,OAAQ,SAAmBO,EAAkBO,GAE5C,GADAP,EAAMI,SAAWG,GACbP,EAAMC,OAAO,CAChB,IAAIO,EAAKV,KACTE,EAAMC,OAASQ,WAAW,WAEzBT,EAAMC,OAAS,KAEfV,EAAUY,KAAKK,EAAIR,EAAOA,EAAMI,WAC9BN,KAAKJ","file":"../../dnd/TimedMoveable.js","sourcesContent":["define([\"../_base/declare\", \"./Moveable\" /*=====, \"./Mover\" =====*/], function(declare, Moveable /*=====, Mover =====*/){\r\n\t// module:\r\n\t//\t\tdojo/dnd/TimedMoveable\r\n\r\n\t/*=====\r\n\tvar __TimedMoveableArgs = declare([Moveable.__MoveableArgs], {\r\n\t\t// timeout: Number\r\n\t\t//\t\tdelay move by this number of ms,\r\n\t\t//\t\taccumulating position changes during the timeout\r\n\t\ttimeout: 0\r\n\t});\r\n\t=====*/\r\n\r\n\t// precalculate long expressions\r\n\tvar oldOnMove = Moveable.prototype.onMove;\r\n\r\n\treturn declare(\"dojo.dnd.TimedMoveable\", Moveable, {\r\n\t\t// summary:\r\n\t\t//\t\tA specialized version of Moveable to support an FPS throttling.\r\n\t\t//\t\tThis class puts an upper restriction on FPS, which may reduce\r\n\t\t//\t\tthe CPU load. The additional parameter \"timeout\" regulates\r\n\t\t//\t\tthe delay before actually moving the moveable object.\r\n\r\n\t\t// object attributes (for markup)\r\n\t\ttimeout: 40,\t// in ms, 40ms corresponds to 25 fps\r\n\r\n\t\tconstructor: function(node, params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tan object that makes a node moveable with a timer\r\n\t\t\t// node: Node||String\r\n\t\t\t//\t\ta node (or node's id) to be moved\r\n\t\t\t// params: __TimedMoveableArgs\r\n\t\t\t//\t\tobject with additional parameters.\r\n\r\n\t\t\t// sanitize parameters\r\n\t\t\tif(!params){ params = {}; }\r\n\t\t\tif(params.timeout && typeof params.timeout == \"number\" && params.timeout >= 0){\r\n\t\t\t\tthis.timeout = params.timeout;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonMoveStop: function(/*Mover*/ mover){\r\n\t\t\tif(mover._timer){\r\n\t\t\t\t// stop timer\r\n\t\t\t\tclearTimeout(mover._timer);\r\n\t\t\t\t// reflect the last received position\r\n\t\t\t\toldOnMove.call(this, mover, mover._leftTop);\r\n\t\t\t}\r\n\t\t\tMoveable.prototype.onMoveStop.apply(this, arguments);\r\n\t\t},\r\n\t\tonMove: function(/*Mover*/ mover, /*Object*/ leftTop){\r\n\t\t\tmover._leftTop = leftTop;\r\n\t\t\tif(!mover._timer){\r\n\t\t\t\tvar _t = this;\t// to avoid using dojo.hitch()\r\n\t\t\t\tmover._timer = setTimeout(function(){\r\n\t\t\t\t\t// we don't have any pending requests\r\n\t\t\t\t\tmover._timer = null;\r\n\t\t\t\t\t// reflect the last received position\r\n\t\t\t\t\toldOnMove.call(_t, mover, mover._leftTop);\r\n\t\t\t\t}, this.timeout);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n"]}