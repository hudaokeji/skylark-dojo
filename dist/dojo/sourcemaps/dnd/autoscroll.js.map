{"version":3,"sources":["dnd/autoscroll.js"],"names":["define","lang","has","win","domGeom","domStyle","winUtils","exports","setObject","getViewport","getBox","V_TRIGGER_AUTOSCROLL","H_TRIGGER_AUTOSCROLL","V_AUTOSCROLL_VALUE","H_AUTOSCROLL_VALUE","viewport","doc","maxScrollTop","Infinity","maxScrollLeft","autoScrollStart","d","html","body","parentNode","Math","max","scrollHeight","h","scrollWidth","w","autoScroll","e","v","dx","dy","clientX","min","scrollLeft","clientY","scrollTop","window","scrollBy","_validNodes","div","p","td","_validOverflow","auto","scroll","autoScrollNodes","b","t","rx","ry","n","target","nodeType","tagName","toLowerCase","s","getComputedStyle","overflow","overflowX","overflowY","getContentBox","position","pageX","x","pageY","y"],"mappings":"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","file":"../../dnd/autoscroll.js","sourcesContent":["define([\"../_base/lang\", \"../sniff\", \"../_base/window\", \"../dom-geometry\", \"../dom-style\", \"../window\"],\r\n\tfunction(lang, has, win, domGeom, domStyle, winUtils){\r\n\r\n// module:\r\n//\t\tdojo/dnd/autoscroll\r\n\r\nvar exports = {\r\n\t// summary:\r\n\t//\t\tUsed by dojo/dnd/Manager to scroll document or internal node when the user\r\n\t//\t\tdrags near the edge of the viewport or a scrollable node\r\n};\r\nlang.setObject(\"dojo.dnd.autoscroll\", exports);\r\n\r\nexports.getViewport = winUtils.getBox;\r\n\r\nexports.V_TRIGGER_AUTOSCROLL = 32;\r\nexports.H_TRIGGER_AUTOSCROLL = 32;\r\n\r\nexports.V_AUTOSCROLL_VALUE = 16;\r\nexports.H_AUTOSCROLL_VALUE = 16;\r\n\r\n// These are set by autoScrollStart().\r\n// Set to default values in case autoScrollStart() isn't called. (back-compat, remove for 2.0)\r\nvar viewport,\r\n\tdoc = win.doc,\r\n\tmaxScrollTop = Infinity,\r\n\tmaxScrollLeft = Infinity;\r\n\r\nexports.autoScrollStart = function(d){\r\n\t// summary:\r\n\t//\t\tCalled at the start of a drag.\r\n\t// d: Document\r\n\t//\t\tThe document of the node being dragged.\r\n\r\n\tdoc = d;\r\n\tviewport = winUtils.getBox(doc);\r\n\r\n\t// Save height/width of document at start of drag, before it gets distorted by a user dragging an avatar past\r\n\t// the document's edge\r\n\tvar html = win.body(doc).parentNode;\r\n\tmaxScrollTop = Math.max(html.scrollHeight - viewport.h, 0);\r\n\tmaxScrollLeft = Math.max(html.scrollWidth - viewport.w, 0);\t// usually 0\r\n};\r\n\r\nexports.autoScroll = function(e){\r\n\t// summary:\r\n\t//\t\ta handler for mousemove and touchmove events, which scrolls the window, if\r\n\t//\t\tnecessary\r\n\t// e: Event\r\n\t//\t\tmousemove/touchmove event\r\n\r\n\t// FIXME: needs more docs!\r\n\tvar v = viewport || winUtils.getBox(doc), // getBox() call for back-compat, in case autoScrollStart() wasn't called\r\n\t\thtml = win.body(doc).parentNode,\r\n\t\tdx = 0, dy = 0;\r\n\tif(e.clientX < exports.H_TRIGGER_AUTOSCROLL){\r\n\t\tdx = -exports.H_AUTOSCROLL_VALUE;\r\n\t}else if(e.clientX > v.w - exports.H_TRIGGER_AUTOSCROLL){\r\n\t\tdx = Math.min(exports.H_AUTOSCROLL_VALUE, maxScrollLeft - html.scrollLeft);\t// don't scroll past edge of doc\r\n\t}\r\n\tif(e.clientY < exports.V_TRIGGER_AUTOSCROLL){\r\n\t\tdy = -exports.V_AUTOSCROLL_VALUE;\r\n\t}else if(e.clientY > v.h - exports.V_TRIGGER_AUTOSCROLL){\r\n\t\tdy = Math.min(exports.V_AUTOSCROLL_VALUE, maxScrollTop - html.scrollTop);\t// don't scroll past edge of doc\r\n\t}\r\n\twindow.scrollBy(dx, dy);\r\n};\r\n\r\nexports._validNodes = {\"div\": 1, \"p\": 1, \"td\": 1};\r\nexports._validOverflow = {\"auto\": 1, \"scroll\": 1};\r\n\r\nexports.autoScrollNodes = function(e){\r\n\t// summary:\r\n\t//\t\ta handler for mousemove and touchmove events, which scrolls the first available\r\n\t//\t\tDom element, it falls back to exports.autoScroll()\r\n\t// e: Event\r\n\t//\t\tmousemove/touchmove event\r\n\r\n\t// FIXME: needs more docs!\r\n\r\n\tvar b, t, w, h, rx, ry, dx = 0, dy = 0, oldLeft, oldTop;\r\n\r\n\tfor(var n = e.target; n;){\r\n\t\tif(n.nodeType == 1 && (n.tagName.toLowerCase() in exports._validNodes)){\r\n\t\t\tvar s = domStyle.getComputedStyle(n),\r\n\t\t\t\toverflow = (s.overflow.toLowerCase() in exports._validOverflow),\r\n\t\t\t\toverflowX = (s.overflowX.toLowerCase() in exports._validOverflow),\r\n\t\t\t\toverflowY = (s.overflowY.toLowerCase() in exports._validOverflow);\r\n\t\t\tif(overflow || overflowX || overflowY){\r\n\t\t\t\tb = domGeom.getContentBox(n, s);\r\n\t\t\t\tt = domGeom.position(n, true);\r\n\t\t\t}\r\n\t\t\t// overflow-x\r\n\t\t\tif(overflow || overflowX){\r\n\t\t\t\tw = Math.min(exports.H_TRIGGER_AUTOSCROLL, b.w / 2);\r\n\t\t\t\trx = e.pageX - t.x;\r\n\t\t\t\tif(has(\"webkit\") || has(\"opera\")){\r\n\t\t\t\t\t// FIXME: this code should not be here, it should be taken into account\r\n\t\t\t\t\t// either by the event fixing code, or the domGeom.position()\r\n\t\t\t\t\t// FIXME: this code doesn't work on Opera 9.5 Beta\r\n\t\t\t\t\trx += win.body().scrollLeft;\r\n\t\t\t\t}\r\n\t\t\t\tdx = 0;\r\n\t\t\t\tif(rx > 0 && rx < b.w){\r\n\t\t\t\t\tif(rx < w){\r\n\t\t\t\t\t\tdx = -w;\r\n\t\t\t\t\t}else if(rx > b.w - w){\r\n\t\t\t\t\t\tdx = w;\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldLeft = n.scrollLeft;\r\n\t\t\t\t\tn.scrollLeft = n.scrollLeft + dx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// overflow-y\r\n\t\t\tif(overflow || overflowY){\r\n\t\t\t\t//console.log(b.l, b.t, t.x, t.y, n.scrollLeft, n.scrollTop);\r\n\t\t\t\th = Math.min(exports.V_TRIGGER_AUTOSCROLL, b.h / 2);\r\n\t\t\t\try = e.pageY - t.y;\r\n\t\t\t\tif(has(\"webkit\") || has(\"opera\")){\r\n\t\t\t\t\t// FIXME: this code should not be here, it should be taken into account\r\n\t\t\t\t\t// either by the event fixing code, or the domGeom.position()\r\n\t\t\t\t\t// FIXME: this code doesn't work on Opera 9.5 Beta\r\n\t\t\t\t\try += win.body().scrollTop;\r\n\t\t\t\t}\r\n\t\t\t\tdy = 0;\r\n\t\t\t\tif(ry > 0 && ry < b.h){\r\n\t\t\t\t\tif(ry < h){\r\n\t\t\t\t\t\tdy = -h;\r\n\t\t\t\t\t}else if(ry > b.h - h){\r\n\t\t\t\t\t\tdy = h;\r\n\t\t\t\t\t}\r\n\t\t\t\t\toldTop = n.scrollTop;\r\n\t\t\t\t\tn.scrollTop  = n.scrollTop  + dy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(dx || dy){ return; }\r\n\t\t}\r\n\t\ttry{\r\n\t\t\tn = n.parentNode;\r\n\t\t}catch(x){\r\n\t\t\tn = null;\r\n\t\t}\r\n\t}\r\n\texports.autoScroll(e);\r\n};\r\n\r\nreturn exports;\r\n\r\n});\r\n"]}