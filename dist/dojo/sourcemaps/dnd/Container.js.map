{"version":3,"sources":["dnd/Container.js"],"names":["define","array","declare","kernel","lang","win","dom","domClass","domConstruct","Evented","has","on","query","touch","dnd","Container","skipForm","allowNested","constructor","node","params","this","byId","creator","parent","dropParent","map","current","containerState","add","_skipStartup","startup","events","over","hitch","out","getItem","key","setItem","data","delItem","forInItems","f","o","global","m","e","_empty","i","call","clearItems","getAllNodes","sync","forEach","id","item","getUniqueId","type","getAttribute","innerHTML","split","insertNodes","before","anchor","t","firstChild","nextSibling","length","_normalizedCreator","parentNode","insertBefore","appendChild","destroy","handle","remove","markupFactory","Ctor","tagName","toLowerCase","c","getElementsByTagName","defaultCreator","_defaultCreator","onMouseOver","n","relatedTarget","x","_changeState","onOverEvent","_getChildByEvent","_removeItemClass","_addItemClass","onMouseOut","onOutEvent","onSelectStart","isFormElement","stopPropagation","preventDefault","newState","prefix","state","replace","target","contains","hint","isArray","_createNode","tag","text","create","_createSpan","_createTrTd","tr","_defaultCreatorNodes","ul","ol","div","p","isObj","isObject","nodeType","String"],"mappings":"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","file":"../../dnd/Container.js","sourcesContent":["define([\r\n\t\"../_base/array\",\r\n\t\"../_base/declare\",\r\n\t\"../_base/kernel\",\r\n\t\"../_base/lang\",\r\n\t\"../_base/window\",\r\n\t\"../dom\",\r\n\t\"../dom-class\",\r\n\t\"../dom-construct\",\r\n\t\"../Evented\",\r\n\t\"../has\",\r\n\t\"../on\",\r\n\t\"../query\",\r\n\t\"../touch\",\r\n\t\"./common\"\r\n], function(\r\n\tarray, declare, kernel, lang, win,\r\n\tdom, domClass, domConstruct, Evented, has, on, query, touch, dnd){\r\n\r\n// module:\r\n//\t\tdojo/dnd/Container\r\n\r\n/*\r\n\tContainer states:\r\n\t\t\"\"\t\t- normal state\r\n\t\t\"Over\"\t- mouse over a container\r\n\tContainer item states:\r\n\t\t\"\"\t\t- normal state\r\n\t\t\"Over\"\t- mouse over a container item\r\n*/\r\n\r\n\r\n\r\nvar Container = declare(\"dojo.dnd.Container\", Evented, {\r\n\t// summary:\r\n\t//\t\ta Container object, which knows when mouse hovers over it,\r\n\t//\t\tand over which element it hovers\r\n\r\n\t// object attributes (for markup)\r\n\tskipForm: false,\r\n\t// allowNested: Boolean\r\n\t//\t\tIndicates whether to allow dnd item nodes to be nested within other elements.\r\n\t//\t\tBy default this is false, indicating that only direct children of the container can\r\n\t//\t\tbe draggable dnd item nodes\r\n\tallowNested: false,\r\n\t/*=====\r\n\t// current: DomNode\r\n\t//\t\tThe DOM node the mouse is currently hovered over\r\n\tcurrent: null,\r\n\r\n\t// map: Hash<String, Container.Item>\r\n\t//\t\tMap from an item's id (which is also the DOMNode's id) to\r\n\t//\t\tthe dojo/dnd/Container.Item itself.\r\n\tmap: {},\r\n\t=====*/\r\n\r\n\tconstructor: function(node, params){\r\n\t\t// summary:\r\n\t\t//\t\ta constructor of the Container\r\n\t\t// node: Node\r\n\t\t//\t\tnode or node's id to build the container on\r\n\t\t// params: Container.__ContainerArgs\r\n\t\t//\t\ta dictionary of parameters\r\n\t\tthis.node = dom.byId(node);\r\n\t\tif(!params){ params = {}; }\r\n\t\tthis.creator = params.creator || null;\r\n\t\tthis.skipForm = params.skipForm;\r\n\t\tthis.parent = params.dropParent && dom.byId(params.dropParent);\r\n\r\n\t\t// class-specific variables\r\n\t\tthis.map = {};\r\n\t\tthis.current = null;\r\n\r\n\t\t// states\r\n\t\tthis.containerState = \"\";\r\n\t\tdomClass.add(this.node, \"dojoDndContainer\");\r\n\r\n\t\t// mark up children\r\n\t\tif(!(params && params._skipStartup)){\r\n\t\t\tthis.startup();\r\n\t\t}\r\n\r\n\t\t// set up events\r\n\t\tthis.events = [\r\n\t\t\ton(this.node, touch.over, lang.hitch(this, \"onMouseOver\")),\r\n\t\t\ton(this.node, touch.out,  lang.hitch(this, \"onMouseOut\")),\r\n\t\t\t// cancel text selection and text dragging\r\n\t\t\ton(this.node, \"dragstart\",   lang.hitch(this, \"onSelectStart\")),\r\n\t\t\ton(this.node, \"selectstart\", lang.hitch(this, \"onSelectStart\"))\r\n\t\t];\r\n\t},\r\n\r\n\t// object attributes (for markup)\r\n\tcreator: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcreator function, dummy at the moment\r\n\t},\r\n\r\n\t// abstract access to the map\r\n\tgetItem: function(/*String*/ key){\r\n\t\t// summary:\r\n\t\t//\t\treturns a data item by its key (id)\r\n\t\treturn this.map[key];\t// Container.Item\r\n\t},\r\n\tsetItem: function(/*String*/ key, /*Container.Item*/ data){\r\n\t\t// summary:\r\n\t\t//\t\tassociates a data item with its key (id)\r\n\t\tthis.map[key] = data;\r\n\t},\r\n\tdelItem: function(/*String*/ key){\r\n\t\t// summary:\r\n\t\t//\t\tremoves a data item from the map by its key (id)\r\n\t\tdelete this.map[key];\r\n\t},\r\n\tforInItems: function(/*Function*/ f, /*Object?*/ o){\r\n\t\t// summary:\r\n\t\t//\t\titerates over a data map skipping members that\r\n\t\t//\t\tare present in the empty object (IE and/or 3rd-party libraries).\r\n\t\to = o || kernel.global;\r\n\t\tvar m = this.map, e = dnd._empty;\r\n\t\tfor(var i in m){\r\n\t\t\tif(i in e){ continue; }\r\n\t\t\tf.call(o, m[i], i, this);\r\n\t\t}\r\n\t\treturn o;\t// Object\r\n\t},\r\n\tclearItems: function(){\r\n\t\t// summary:\r\n\t\t//\t\tremoves all data items from the map\r\n\t\tthis.map = {};\r\n\t},\r\n\r\n\t// methods\r\n\tgetAllNodes: function(){\r\n\t\t// summary:\r\n\t\t//\t\treturns a list (an array) of all valid child nodes\r\n\t\treturn query((this.allowNested ? \"\" : \"> \") + \".dojoDndItem\", this.parent);\t// NodeList\r\n\t},\r\n\tsync: function(){\r\n\t\t// summary:\r\n\t\t//\t\tsync up the node list with the data map\r\n\t\tvar map = {};\r\n\t\tthis.getAllNodes().forEach(function(node){\r\n\t\t\tif(node.id){\r\n\t\t\t\tvar item = this.getItem(node.id);\r\n\t\t\t\tif(item){\r\n\t\t\t\t\tmap[node.id] = item;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tnode.id = dnd.getUniqueId();\r\n\t\t\t}\r\n\t\t\tvar type = node.getAttribute(\"dndType\"),\r\n\t\t\t\tdata = node.getAttribute(\"dndData\");\r\n\t\t\tmap[node.id] = {\r\n\t\t\t\tdata: data || node.innerHTML,\r\n\t\t\t\ttype: type ? type.split(/\\s*,\\s*/) : [\"text\"]\r\n\t\t\t};\r\n\t\t}, this);\r\n\t\tthis.map = map;\r\n\t\treturn this;\t// self\r\n\t},\r\n\tinsertNodes: function(data, before, anchor){\r\n\t\t// summary:\r\n\t\t//\t\tinserts an array of new nodes before/after an anchor node\r\n\t\t// data: Array\r\n\t\t//\t\ta list of data items, which should be processed by the creator function\r\n\t\t// before: Boolean\r\n\t\t//\t\tinsert before the anchor, if true, and after the anchor otherwise\r\n\t\t// anchor: Node\r\n\t\t//\t\tthe anchor node to be used as a point of insertion\r\n\t\tif(!this.parent.firstChild){\r\n\t\t\tanchor = null;\r\n\t\t}else if(before){\r\n\t\t\tif(!anchor){\r\n\t\t\t\tanchor = this.parent.firstChild;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif(anchor){\r\n\t\t\t\tanchor = anchor.nextSibling;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar i, t;\r\n\t\tif(anchor){\r\n\t\t\tfor(i = 0; i < data.length; ++i){\r\n\t\t\t\tt = this._normalizedCreator(data[i]);\r\n\t\t\t\tthis.setItem(t.node.id, {data: t.data, type: t.type});\r\n\t\t\t\tanchor.parentNode.insertBefore(t.node, anchor);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(i = 0; i < data.length; ++i){\r\n\t\t\t\tt = this._normalizedCreator(data[i]);\r\n\t\t\t\tthis.setItem(t.node.id, {data: t.data, type: t.type});\r\n\t\t\t\tthis.parent.appendChild(t.node);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\t// self\r\n\t},\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tprepares this object to be garbage-collected\r\n\t\tarray.forEach(this.events, function(handle){ handle.remove(); });\r\n\t\tthis.clearItems();\r\n\t\tthis.node = this.parent = this.current = null;\r\n\t},\r\n\r\n\t// markup methods\r\n\tmarkupFactory: function(params, node, Ctor){\r\n\t\tparams._skipStartup = true;\r\n\t\treturn new Ctor(node, params);\r\n\t},\r\n\tstartup: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcollects valid child items and populate the map\r\n\r\n\t\t// set up the real parent node\r\n\t\tif(!this.parent){\r\n\t\t\t// use the standard algorithm, if not assigned\r\n\t\t\tthis.parent = this.node;\r\n\t\t\tif(this.parent.tagName.toLowerCase() == \"table\"){\r\n\t\t\t\tvar c = this.parent.getElementsByTagName(\"tbody\");\r\n\t\t\t\tif(c && c.length){ this.parent = c[0]; }\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.defaultCreator = dnd._defaultCreator(this.parent);\r\n\r\n\t\t// process specially marked children\r\n\t\tthis.sync();\r\n\t},\r\n\r\n\t// mouse events\r\n\tonMouseOver: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onmouseover or touch, to mark that element as the current element\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\t\tvar n = e.relatedTarget;\r\n\t\twhile(n){\r\n\t\t\tif(n == this.node){ break; }\r\n\t\t\ttry{\r\n\t\t\t\tn = n.parentNode;\r\n\t\t\t}catch(x){\r\n\t\t\t\tn = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!n){\r\n\t\t\tthis._changeState(\"Container\", \"Over\");\r\n\t\t\tthis.onOverEvent();\r\n\t\t}\r\n\t\tn = this._getChildByEvent(e);\r\n\t\tif(this.current == n){ return; }\r\n\t\tif(this.current){ this._removeItemClass(this.current, \"Over\"); }\r\n\t\tif(n){ this._addItemClass(n, \"Over\"); }\r\n\t\tthis.current = n;\r\n\t},\r\n\tonMouseOut: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onmouseout\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\t\tfor(var n = e.relatedTarget; n;){\r\n\t\t\tif(n == this.node){ return; }\r\n\t\t\ttry{\r\n\t\t\t\tn = n.parentNode;\r\n\t\t\t}catch(x){\r\n\t\t\t\tn = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.current){\r\n\t\t\tthis._removeItemClass(this.current, \"Over\");\r\n\t\t\tthis.current = null;\r\n\t\t}\r\n\t\tthis._changeState(\"Container\", \"\");\r\n\t\tthis.onOutEvent();\r\n\t},\r\n\tonSelectStart: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onselectevent and ondragevent\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\t\tif(!this.skipForm || !dnd.isFormElement(e)){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t// utilities\r\n\tonOverEvent: function(){\r\n\t\t// summary:\r\n\t\t//\t\tthis function is called once, when mouse is over our container\r\n\t},\r\n\tonOutEvent: function(){\r\n\t\t// summary:\r\n\t\t//\t\tthis function is called once, when mouse is out of our container\r\n\t},\r\n\t_changeState: function(type, newState){\r\n\t\t// summary:\r\n\t\t//\t\tchanges a named state to new state value\r\n\t\t// type: String\r\n\t\t//\t\ta name of the state to change\r\n\t\t// newState: String\r\n\t\t//\t\tnew state\r\n\t\tvar prefix = \"dojoDnd\" + type;\r\n\t\tvar state  = type.toLowerCase() + \"State\";\r\n\t\t//domClass.replace(this.node, prefix + newState, prefix + this[state]);\r\n\t\tdomClass.replace(this.node, prefix + newState, prefix + this[state]);\r\n\t\tthis[state] = newState;\r\n\t},\r\n\t_addItemClass: function(node, type){\r\n\t\t// summary:\r\n\t\t//\t\tadds a class with prefix \"dojoDndItem\"\r\n\t\t// node: Node\r\n\t\t//\t\ta node\r\n\t\t// type: String\r\n\t\t//\t\ta variable suffix for a class name\r\n\t\tdomClass.add(node, \"dojoDndItem\" + type);\r\n\t},\r\n\t_removeItemClass: function(node, type){\r\n\t\t// summary:\r\n\t\t//\t\tremoves a class with prefix \"dojoDndItem\"\r\n\t\t// node: Node\r\n\t\t//\t\ta node\r\n\t\t// type: String\r\n\t\t//\t\ta variable suffix for a class name\r\n\t\tdomClass.remove(node, \"dojoDndItem\" + type);\r\n\t},\r\n\t_getChildByEvent: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tgets a child, which is under the mouse at the moment, or null\r\n\t\t// e: Event\r\n\t\t//\t\ta mouse event\r\n\t\tvar node = e.target;\r\n\t\tif(node){\r\n\t\t\tfor(var parent = node.parentNode; parent; node = parent, parent = node.parentNode){\r\n\t\t\t\tif((parent == this.parent || this.allowNested) && domClass.contains(node, \"dojoDndItem\")){ return node; }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t_normalizedCreator: function(/*Container.Item*/ item, /*String*/ hint){\r\n\t\t// summary:\r\n\t\t//\t\tadds all necessary data to the output of the user-supplied creator function\r\n\t\tvar t = (this.creator || this.defaultCreator).call(this, item, hint);\r\n\t\tif(!lang.isArray(t.type)){ t.type = [\"text\"]; }\r\n\t\tif(!t.node.id){ t.node.id = dnd.getUniqueId(); }\r\n\t\tdomClass.add(t.node, \"dojoDndItem\");\r\n\t\treturn t;\r\n\t}\r\n});\r\n\r\ndnd._createNode = function(tag){\r\n\t// summary:\r\n\t//\t\treturns a function, which creates an element of given tag\r\n\t//\t\t(SPAN by default) and sets its innerHTML to given text\r\n\t// tag: String\r\n\t//\t\ta tag name or empty for SPAN\r\n\tif(!tag){ return dnd._createSpan; }\r\n\treturn function(text){\t// Function\r\n\t\treturn domConstruct.create(tag, {innerHTML: text});\t// Node\r\n\t};\r\n};\r\n\r\ndnd._createTrTd = function(text){\r\n\t// summary:\r\n\t//\t\tcreates a TR/TD structure with given text as an innerHTML of TD\r\n\t// text: String\r\n\t//\t\ta text for TD\r\n\tvar tr = domConstruct.create(\"tr\");\r\n\tdomConstruct.create(\"td\", {innerHTML: text}, tr);\r\n\treturn tr;\t// Node\r\n};\r\n\r\ndnd._createSpan = function(text){\r\n\t// summary:\r\n\t//\t\tcreates a SPAN element with given text as its innerHTML\r\n\t// text: String\r\n\t//\t\ta text for SPAN\r\n\treturn domConstruct.create(\"span\", {innerHTML: text});\t// Node\r\n};\r\n\r\n// dnd._defaultCreatorNodes: Object\r\n//\t\ta dictionary that maps container tag names to child tag names\r\ndnd._defaultCreatorNodes = {ul: \"li\", ol: \"li\", div: \"div\", p: \"div\"};\r\n\r\ndnd._defaultCreator = function(node){\r\n\t// summary:\r\n\t//\t\ttakes a parent node, and returns an appropriate creator function\r\n\t// node: Node\r\n\t//\t\ta container node\r\n\tvar tag = node.tagName.toLowerCase();\r\n\tvar c = tag == \"tbody\" || tag == \"thead\" ? dnd._createTrTd :\r\n\t\t\tdnd._createNode(dnd._defaultCreatorNodes[tag]);\r\n\treturn function(item, hint){\t// Function\r\n\t\tvar isObj = item && lang.isObject(item), data, type, n;\r\n\t\tif(isObj && item.tagName && item.nodeType && item.getAttribute){\r\n\t\t\t// process a DOM node\r\n\t\t\tdata = item.getAttribute(\"dndData\") || item.innerHTML;\r\n\t\t\ttype = item.getAttribute(\"dndType\");\r\n\t\t\ttype = type ? type.split(/\\s*,\\s*/) : [\"text\"];\r\n\t\t\tn = item;\t// this node is going to be moved rather than copied\r\n\t\t}else{\r\n\t\t\t// process a DnD item object or a string\r\n\t\t\tdata = (isObj && item.data) ? item.data : item;\r\n\t\t\ttype = (isObj && item.type) ? item.type : [\"text\"];\r\n\t\t\tn = (hint == \"avatar\" ? dnd._createSpan : c)(String(data));\r\n\t\t}\r\n\t\tif(!n.id){\r\n\t\t\tn.id = dnd.getUniqueId();\r\n\t\t}\r\n\t\treturn {node: n, data: data, type: type};\r\n\t};\r\n};\r\n\r\n/*=====\r\nContainer.__ContainerArgs = declare([], {\r\n\tcreator: function(){\r\n\t\t// summary:\r\n\t\t//\t\ta creator function, which takes a data item, and returns an object like that:\r\n\t\t//\t\t{node: newNode, data: usedData, type: arrayOfStrings}\r\n\t},\r\n\r\n\t// skipForm: Boolean\r\n\t//\t\tdon't start the drag operation, if clicked on form elements\r\n\tskipForm: false,\r\n\r\n\t// dropParent: Node||String\r\n\t//\t\tnode or node's id to use as the parent node for dropped items\r\n\t//\t\t(must be underneath the 'node' parameter in the DOM)\r\n\tdropParent: null,\r\n\r\n\t// _skipStartup: Boolean\r\n\t//\t\tskip startup(), which collects children, for deferred initialization\r\n\t//\t\t(this is used in the markup mode)\r\n\t_skipStartup: false\r\n});\r\n\r\nContainer.Item = function(){\r\n\t// summary:\r\n\t//\t\tRepresents (one of) the source node(s) being dragged.\r\n\t//\t\tContains (at least) the \"type\" and \"data\" attributes.\r\n\t// type: String[]\r\n\t//\t\tType(s) of this item, by default this is [\"text\"]\r\n\t// data: Object\r\n\t//\t\tLogical representation of the object being dragged.\r\n\t//\t\tIf the drag object's type is \"text\" then data is a String,\r\n\t//\t\tif it's another type then data could be a different Object,\r\n\t//\t\tperhaps a name/value hash.\r\n\r\n\tthis.type = type;\r\n\tthis.data = data;\r\n};\r\n=====*/\r\n\r\nreturn Container;\r\n});\r\n"]}