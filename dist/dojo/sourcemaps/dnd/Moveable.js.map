{"version":3,"sources":["dnd/Moveable.js"],"names":["define","array","declare","lang","dom","domClass","Evented","on","topic","touch","dnd","Mover","win","handle","delay","skip","constructor","node","params","this","byId","mover","events","press","hitch","markupFactory","Ctor","destroy","forEach","remove","onMouseDown","e","isFormElement","push","move","release","_lastX","pageX","_lastY","pageY","onDragDetected","stopPropagation","preventDefault","onMouseMove","Math","abs","onMouseUp","i","pop","onSelectStart","onMoveStart","publish","add","body","onMoveStop","onFirstMove","onMove","leftTop","onMoving","s","style","left","l","top","t","onMoved"],"mappings":"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","file":"../../dnd/Moveable.js","sourcesContent":["define([\r\n\t\"../_base/array\", \"../_base/declare\", \"../_base/lang\",\r\n\t\"../dom\", \"../dom-class\", \"../Evented\", \"../on\", \"../topic\", \"../touch\", \"./common\", \"./Mover\", \"../_base/window\"\r\n], function(array, declare, lang, dom, domClass, Evented, on, topic, touch, dnd, Mover, win){\r\n\r\n// module:\r\n//\t\tdojo/dnd/Moveable\r\n\r\n\r\nvar Moveable = declare(\"dojo.dnd.Moveable\", [Evented], {\r\n\t// summary:\r\n\t//\t\tan object, which makes a node movable\r\n\r\n\t// object attributes (for markup)\r\n\thandle: \"\",\r\n\tdelay: 0,\r\n\tskip: false,\r\n\r\n\tconstructor: function(node, params){\r\n\t\t// node: Node\r\n\t\t//\t\ta node (or node's id) to be moved\r\n\t\t// params: Moveable.__MoveableArgs?\r\n\t\t//\t\toptional parameters\r\n\t\tthis.node = dom.byId(node);\r\n\t\tif(!params){ params = {}; }\r\n\t\tthis.handle = params.handle ? dom.byId(params.handle) : null;\r\n\t\tif(!this.handle){ this.handle = this.node; }\r\n\t\tthis.delay = params.delay > 0 ? params.delay : 0;\r\n\t\tthis.skip  = params.skip;\r\n\t\tthis.mover = params.mover ? params.mover : Mover;\r\n\t\tthis.events = [\r\n\t\t\ton(this.handle, touch.press, lang.hitch(this, \"onMouseDown\")),\r\n\t\t\t// cancel text selection and text dragging\r\n\t\t\ton(this.handle, \"dragstart\",   lang.hitch(this, \"onSelectStart\")),\r\n\t\t\ton(this.handle, \"selectstart\",   lang.hitch(this, \"onSelectStart\"))\r\n\t\t];\r\n\t},\r\n\r\n\t// markup methods\r\n\tmarkupFactory: function(params, node, Ctor){\r\n\t\treturn new Ctor(node, params);\r\n\t},\r\n\r\n\t// methods\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tstops watching for possible move, deletes all references, so the object can be garbage-collected\r\n\t\tarray.forEach(this.events, function(handle){ handle.remove(); });\r\n\t\tthis.events = this.node = this.handle = null;\r\n\t},\r\n\r\n\t// mouse event processors\r\n\tonMouseDown: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onmousedown/ontouchstart, creates a Mover for the node\r\n\t\t// e: Event\r\n\t\t//\t\tmouse/touch event\r\n\t\tif(this.skip && dnd.isFormElement(e)){ return; }\r\n\t\tif(this.delay){\r\n\t\t\tthis.events.push(\r\n\t\t\t\ton(this.handle, touch.move, lang.hitch(this, \"onMouseMove\")),\r\n\t\t\t\ton(this.handle, touch.release, lang.hitch(this, \"onMouseUp\"))\r\n\t\t\t);\r\n\t\t\tthis._lastX = e.pageX;\r\n\t\t\tthis._lastY = e.pageY;\r\n\t\t}else{\r\n\t\t\tthis.onDragDetected(e);\r\n\t\t}\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t},\r\n\tonMouseMove: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onmousemove/ontouchmove, used only for delayed drags\r\n\t\t// e: Event\r\n\t\t//\t\tmouse/touch event\r\n\t\tif(Math.abs(e.pageX - this._lastX) > this.delay || Math.abs(e.pageY - this._lastY) > this.delay){\r\n\t\t\tthis.onMouseUp(e);\r\n\t\t\tthis.onDragDetected(e);\r\n\t\t}\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t},\r\n\tonMouseUp: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onmouseup, used only for delayed drags\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\t\tfor(var i = 0; i < 2; ++i){\r\n\t\t\tthis.events.pop().remove();\r\n\t\t}\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t},\r\n\tonSelectStart: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onselectevent and ondragevent\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\t\tif(!this.skip || !dnd.isFormElement(e)){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t// local events\r\n\tonDragDetected: function(/*Event*/ e){\r\n\t\t// summary:\r\n\t\t//\t\tcalled when the drag is detected;\r\n\t\t//\t\tresponsible for creation of the mover\r\n\t\tnew this.mover(this.node, e, this);\r\n\t},\r\n\tonMoveStart: function(/*Mover*/ mover){\r\n\t\t// summary:\r\n\t\t//\t\tcalled before every move operation\r\n\t\ttopic.publish(\"/dnd/move/start\", mover);\r\n\t\tdomClass.add(win.body(), \"dojoMove\");\r\n\t\tdomClass.add(this.node, \"dojoMoveItem\");\r\n\t},\r\n\tonMoveStop: function(/*Mover*/ mover){\r\n\t\t// summary:\r\n\t\t//\t\tcalled after every move operation\r\n\t\ttopic.publish(\"/dnd/move/stop\", mover);\r\n\t\tdomClass.remove(win.body(), \"dojoMove\");\r\n\t\tdomClass.remove(this.node, \"dojoMoveItem\");\r\n\t},\r\n\tonFirstMove: function(/*===== mover, e =====*/){\r\n\t\t// summary:\r\n\t\t//\t\tcalled during the very first move notification;\r\n\t\t//\t\tcan be used to initialize coordinates, can be overwritten.\r\n\t\t// mover: Mover\r\n\t\t// e: Event\r\n\r\n\t\t// default implementation does nothing\r\n\t},\r\n\tonMove: function(mover, leftTop /*=====, e =====*/){\r\n\t\t// summary:\r\n\t\t//\t\tcalled during every move notification;\r\n\t\t//\t\tshould actually move the node; can be overwritten.\r\n\t\t// mover: Mover\r\n\t\t// leftTop: Object\r\n\t\t// e: Event\r\n\t\tthis.onMoving(mover, leftTop);\r\n\t\tvar s = mover.node.style;\r\n\t\ts.left = leftTop.l + \"px\";\r\n\t\ts.top  = leftTop.t + \"px\";\r\n\t\tthis.onMoved(mover, leftTop);\r\n\t},\r\n\tonMoving: function(/*===== mover, leftTop =====*/){\r\n\t\t// summary:\r\n\t\t//\t\tcalled before every incremental move; can be overwritten.\r\n\t\t// mover: Mover\r\n\t\t// leftTop: Object\r\n\r\n\t\t// default implementation does nothing\r\n\t},\r\n\tonMoved: function(/*===== mover, leftTop =====*/){\r\n\t\t// summary:\r\n\t\t//\t\tcalled after every incremental move; can be overwritten.\r\n\t\t// mover: Mover\r\n\t\t// leftTop: Object\r\n\r\n\t\t// default implementation does nothing\r\n\t}\r\n});\r\n\r\n/*=====\r\nMoveable.__MoveableArgs = declare([], {\r\n\t// handle: Node||String\r\n\t//\t\tA node (or node's id), which is used as a mouse handle.\r\n\t//\t\tIf omitted, the node itself is used as a handle.\r\n\thandle: null,\r\n\r\n\t// delay: Number\r\n\t//\t\tdelay move by this number of pixels\r\n\tdelay: 0,\r\n\r\n\t// skip: Boolean\r\n\t//\t\tskip move of form elements\r\n\tskip: false,\r\n\r\n\t// mover: Object\r\n\t//\t\ta constructor of custom Mover\r\n\tmover: dnd.Mover\r\n});\r\n=====*/\r\n\r\nreturn Moveable;\r\n});\r\n"]}