{"version":3,"sources":["dnd/Source.js"],"names":["define","array","declare","kernel","lang","domClass","domGeom","mouse","ready","topic","dnd","Selector","Manager","isAsync","require","Source","isSource","horizontal","copyOnly","selfCopy","selfAccept","skipForm","withHandles","autoSync","delay","accept","generateText","constructor","node","params","mixin","this","type","length","i","isDragging","mouseDown","targetAnchor","targetBox","before","_lastX","_lastY","sourceState","add","targetState","topics","subscribe","hitch","checkAcceptance","source","nodes","getItem","id","flag","j","copyState","keyPressed","self","arguments","manager","target","destroy","superclass","call","forEach","t","remove","onMouseMove","e","m","Math","abs","pageX","pageY","getSelectedNodes","startDrag","getCopyKeyState","current","position","x","w","isBodyLtr","ownerDocument","y","h","_markTargetAnchor","canDrop","selection","onMouseDown","_legalMouseDown","isFormElement","onMouseUp","onDndSourceOver","_unmarkTargetAnchor","onDndStart","copy","sync","_changeState","accepted","overSource","onDndDrop","onDrop","onDndCancel","onDropExternal","onDropInternal","oldCreator","_normalizedCreator","creator","hint","data","n","cloneNode","getUniqueId","delItem","selectNone","insertNodes","deleteSelectedNodes","_removeSelection","onDraggingOver","onDraggingOut","onOverEvent","onOutEvent","outSource","_removeItemClass","_addItemClass","_markDndStatus","isLeft","parentNode","contains"],"mappings":"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","file":"../../dnd/Source.js","sourcesContent":["define([\r\n\t\"../_base/array\", \"../_base/declare\", \"../_base/kernel\", \"../_base/lang\",\r\n\t\"../dom-class\", \"../dom-geometry\", \"../mouse\", \"../ready\", \"../topic\",\r\n\t\"./common\", \"./Selector\", \"./Manager\"\r\n], function(array, declare, kernel, lang, domClass, domGeom, mouse, ready, topic,\r\n\t\t\tdnd, Selector, Manager){\r\n\r\n// module:\r\n//\t\tdojo/dnd/Source\r\n\r\n/*\r\n\tContainer property:\r\n\t\t\"Horizontal\"- if this is the horizontal container\r\n\tSource states:\r\n\t\t\"\"\t\t\t- normal state\r\n\t\t\"Moved\"\t\t- this source is being moved\r\n\t\t\"Copied\"\t- this source is being copied\r\n\tTarget states:\r\n\t\t\"\"\t\t\t- normal state\r\n\t\t\"Disabled\"\t- the target cannot accept an avatar\r\n\tTarget anchor state:\r\n\t\t\"\"\t\t\t- item is not selected\r\n\t\t\"Before\"\t- insert point is before the anchor\r\n\t\t\"After\"\t\t- insert point is after the anchor\r\n*/\r\n\r\n/*=====\r\nvar __SourceArgs = {\r\n\t// summary:\r\n\t//\t\ta dict of parameters for DnD Source configuration. Note that any\r\n\t//\t\tproperty on Source elements may be configured, but this is the\r\n\t//\t\tshort-list\r\n\t// isSource: Boolean?\r\n\t//\t\tcan be used as a DnD source. Defaults to true.\r\n\t// accept: Array?\r\n\t//\t\tlist of accepted types (text strings) for a target; defaults to\r\n\t//\t\t[\"text\"]\r\n\t// autoSync: Boolean\r\n\t//\t\tif true refreshes the node list on every operation; false by default\r\n\t// copyOnly: Boolean?\r\n\t//\t\tcopy items, if true, use a state of Ctrl key otherwise,\r\n\t//\t\tsee selfCopy and selfAccept for more details\r\n\t// delay: Number\r\n\t//\t\tthe move delay in pixels before detecting a drag; 0 by default\r\n\t// horizontal: Boolean?\r\n\t//\t\ta horizontal container, if true, vertical otherwise or when omitted\r\n\t// selfCopy: Boolean?\r\n\t//\t\tcopy items by default when dropping on itself,\r\n\t//\t\tfalse by default, works only if copyOnly is true\r\n\t// selfAccept: Boolean?\r\n\t//\t\taccept its own items when copyOnly is true,\r\n\t//\t\ttrue by default, works only if copyOnly is true\r\n\t// withHandles: Boolean?\r\n\t//\t\tallows dragging only by handles, false by default\r\n\t// generateText: Boolean?\r\n\t//\t\tgenerate text node for drag and drop, true by default\r\n};\r\n=====*/\r\n\r\n// For back-compat, remove in 2.0.\r\nif(!kernel.isAsync){\r\n\tready(0, function(){\r\n\t\tvar requires = [\"dojo/dnd/AutoSource\", \"dojo/dnd/Target\"];\r\n\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t});\r\n}\r\n\r\nvar Source = declare(\"dojo.dnd.Source\", Selector, {\r\n\t// summary:\r\n\t//\t\ta Source object, which can be used as a DnD source, or a DnD target\r\n\r\n\t// object attributes (for markup)\r\n\tisSource: true,\r\n\thorizontal: false,\r\n\tcopyOnly: false,\r\n\tselfCopy: false,\r\n\tselfAccept: true,\r\n\tskipForm: false,\r\n\twithHandles: false,\r\n\tautoSync: false,\r\n\tdelay: 0, // pixels\r\n\taccept: [\"text\"],\r\n\tgenerateText: true,\r\n\r\n\tconstructor: function(/*DOMNode|String*/ node, /*__SourceArgs?*/ params){\r\n\t\t// summary:\r\n\t\t//\t\ta constructor of the Source\r\n\t\t// node:\r\n\t\t//\t\tnode or node's id to build the source on\r\n\t\t// params:\r\n\t\t//\t\tany property of this class may be configured via the params\r\n\t\t//\t\tobject which is mixed-in to the `dojo/dnd/Source` instance\r\n\t\tlang.mixin(this, lang.mixin({}, params));\r\n\t\tvar type = this.accept;\r\n\t\tif(type.length){\r\n\t\t\tthis.accept = {};\r\n\t\t\tfor(var i = 0; i < type.length; ++i){\r\n\t\t\t\tthis.accept[type[i]] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// class-specific variables\r\n\t\tthis.isDragging = false;\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.targetAnchor = null;\r\n\t\tthis.targetBox = null;\r\n\t\tthis.before = true;\r\n\t\tthis._lastX = 0;\r\n\t\tthis._lastY = 0;\r\n\t\t// states\r\n\t\tthis.sourceState  = \"\";\r\n\t\tif(this.isSource){\r\n\t\t\tdomClass.add(this.node, \"dojoDndSource\");\r\n\t\t}\r\n\t\tthis.targetState  = \"\";\r\n\t\tif(this.accept){\r\n\t\t\tdomClass.add(this.node, \"dojoDndTarget\");\r\n\t\t}\r\n\t\tif(this.horizontal){\r\n\t\t\tdomClass.add(this.node, \"dojoDndHorizontal\");\r\n\t\t}\r\n\t\t// set up events\r\n\t\tthis.topics = [\r\n\t\t\ttopic.subscribe(\"/dnd/source/over\", lang.hitch(this, \"onDndSourceOver\")),\r\n\t\t\ttopic.subscribe(\"/dnd/start\",  lang.hitch(this, \"onDndStart\")),\r\n\t\t\ttopic.subscribe(\"/dnd/drop\",   lang.hitch(this, \"onDndDrop\")),\r\n\t\t\ttopic.subscribe(\"/dnd/cancel\", lang.hitch(this, \"onDndCancel\"))\r\n\t\t];\r\n\t},\r\n\r\n\t// methods\r\n\tcheckAcceptance: function(source, nodes){\r\n\t\t// summary:\r\n\t\t//\t\tchecks if the target can accept nodes from this source\r\n\t\t// source: Object\r\n\t\t//\t\tthe source which provides items\r\n\t\t// nodes: Array\r\n\t\t//\t\tthe list of transferred items\r\n\t\tif(this == source){\r\n\t\t\treturn !this.copyOnly || this.selfAccept;\r\n\t\t}\r\n\t\tfor(var i = 0; i < nodes.length; ++i){\r\n\t\t\tvar type = source.getItem(nodes[i].id).type;\r\n\t\t\t// type instanceof Array\r\n\t\t\tvar flag = false;\r\n\t\t\tfor(var j = 0; j < type.length; ++j){\r\n\t\t\t\tif(type[j] in this.accept){\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!flag){\r\n\t\t\t\treturn false;\t// Boolean\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\t// Boolean\r\n\t},\r\n\tcopyState: function(keyPressed, self){\r\n\t\t// summary:\r\n\t\t//\t\tReturns true if we need to copy items, false to move.\r\n\t\t//\t\tIt is separated to be overwritten dynamically, if needed.\r\n\t\t// keyPressed: Boolean\r\n\t\t//\t\tthe \"copy\" key was pressed\r\n\t\t// self: Boolean?\r\n\t\t//\t\toptional flag that means that we are about to drop on itself\r\n\r\n\t\tif(keyPressed){ return true; }\r\n\t\tif(arguments.length < 2){\r\n\t\t\tself = this == Manager.manager().target;\r\n\t\t}\r\n\t\tif(self){\r\n\t\t\tif(this.copyOnly){\r\n\t\t\t\treturn this.selfCopy;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\treturn this.copyOnly;\r\n\t\t}\r\n\t\treturn false;\t// Boolean\r\n\t},\r\n\tdestroy: function(){\r\n\t\t// summary:\r\n\t\t//\t\tprepares the object to be garbage-collected\r\n\t\tSource.superclass.destroy.call(this);\r\n\t\tarray.forEach(this.topics, function(t){t.remove();});\r\n\t\tthis.targetAnchor = null;\r\n\t},\r\n\r\n\t// mouse event processors\r\n\tonMouseMove: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onmousemove\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\t\tif(this.isDragging && this.targetState == \"Disabled\"){ return; }\r\n\t\tSource.superclass.onMouseMove.call(this, e);\r\n\t\tvar m = Manager.manager();\r\n\t\tif(!this.isDragging){\r\n\t\t\tif(this.mouseDown && this.isSource &&\r\n\t\t\t\t\t(Math.abs(e.pageX - this._lastX) > this.delay || Math.abs(e.pageY - this._lastY) > this.delay)){\r\n\t\t\t\tvar nodes = this.getSelectedNodes();\r\n\t\t\t\tif(nodes.length){\r\n\t\t\t\t\tm.startDrag(this, nodes, this.copyState(dnd.getCopyKeyState(e), true));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.isDragging){\r\n\t\t\t// calculate before/after\r\n\t\t\tvar before = false;\r\n\t\t\tif(this.current){\r\n\t\t\t\tif(!this.targetBox || this.targetAnchor != this.current){\r\n\t\t\t\t\tthis.targetBox = domGeom.position(this.current, true);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.horizontal){\r\n\t\t\t\t\t// In LTR mode, the left part of the object means \"before\", but in RTL mode it means \"after\".\r\n\t\t\t\t\tbefore = (e.pageX - this.targetBox.x < this.targetBox.w / 2) == domGeom.isBodyLtr(this.current.ownerDocument);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbefore = (e.pageY - this.targetBox.y) < (this.targetBox.h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.current != this.targetAnchor || before != this.before){\r\n\t\t\t\tthis._markTargetAnchor(before);\r\n\t\t\t\tm.canDrop(!this.current || m.source != this || !(this.current.id in this.selection));\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tonMouseDown: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onmousedown\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\t\tif(!this.mouseDown && this._legalMouseDown(e) && (!this.skipForm || !dnd.isFormElement(e))){\r\n\t\t\tthis.mouseDown = true;\r\n\t\t\tthis._lastX = e.pageX;\r\n\t\t\tthis._lastY = e.pageY;\r\n\t\t\tSource.superclass.onMouseDown.call(this, e);\r\n\t\t}\r\n\t},\r\n\tonMouseUp: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tevent processor for onmouseup\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\t\tif(this.mouseDown){\r\n\t\t\tthis.mouseDown = false;\r\n\t\t\tSource.superclass.onMouseUp.call(this, e);\r\n\t\t}\r\n\t},\r\n\r\n\t// topic event processors\r\n\tonDndSourceOver: function(source){\r\n\t\t// summary:\r\n\t\t//\t\ttopic event processor for /dnd/source/over, called when detected a current source\r\n\t\t// source: Object\r\n\t\t//\t\tthe source which has the mouse over it\r\n\t\tif(this !== source){\r\n\t\t\tthis.mouseDown = false;\r\n\t\t\tif(this.targetAnchor){\r\n\t\t\t\tthis._unmarkTargetAnchor();\r\n\t\t\t}\r\n\t\t}else if(this.isDragging){\r\n\t\t\tvar m = Manager.manager();\r\n\t\t\tm.canDrop(this.targetState != \"Disabled\" && (!this.current || m.source != this || !(this.current.id in this.selection)));\r\n\t\t}\r\n\t},\r\n\tonDndStart: function(source, nodes, copy){\r\n\t\t// summary:\r\n\t\t//\t\ttopic event processor for /dnd/start, called to initiate the DnD operation\r\n\t\t// source: Object\r\n\t\t//\t\tthe source which provides items\r\n\t\t// nodes: Array\r\n\t\t//\t\tthe list of transferred items\r\n\t\t// copy: Boolean\r\n\t\t//\t\tcopy items, if true, move items otherwise\r\n\t\tif(this.autoSync){ this.sync(); }\r\n\t\tif(this.isSource){\r\n\t\t\tthis._changeState(\"Source\", this == source ? (copy ? \"Copied\" : \"Moved\") : \"\");\r\n\t\t}\r\n\t\tvar accepted = this.accept && this.checkAcceptance(source, nodes);\r\n\t\tthis._changeState(\"Target\", accepted ? \"\" : \"Disabled\");\r\n\t\tif(this == source){\r\n\t\t\tManager.manager().overSource(this);\r\n\t\t}\r\n\t\tthis.isDragging = true;\r\n\t},\r\n\tonDndDrop: function(source, nodes, copy, target){\r\n\t\t// summary:\r\n\t\t//\t\ttopic event processor for /dnd/drop, called to finish the DnD operation\r\n\t\t// source: Object\r\n\t\t//\t\tthe source which provides items\r\n\t\t// nodes: Array\r\n\t\t//\t\tthe list of transferred items\r\n\t\t// copy: Boolean\r\n\t\t//\t\tcopy items, if true, move items otherwise\r\n\t\t// target: Object\r\n\t\t//\t\tthe target which accepts items\r\n\t\tif(this == target){\r\n\t\t\t// this one is for us => move nodes!\r\n\t\t\tthis.onDrop(source, nodes, copy);\r\n\t\t}\r\n\t\tthis.onDndCancel();\r\n\t},\r\n\tonDndCancel: function(){\r\n\t\t// summary:\r\n\t\t//\t\ttopic event processor for /dnd/cancel, called to cancel the DnD operation\r\n\t\tif(this.targetAnchor){\r\n\t\t\tthis._unmarkTargetAnchor();\r\n\t\t\tthis.targetAnchor = null;\r\n\t\t}\r\n\t\tthis.before = true;\r\n\t\tthis.isDragging = false;\r\n\t\tthis.mouseDown = false;\r\n\t\tthis._changeState(\"Source\", \"\");\r\n\t\tthis._changeState(\"Target\", \"\");\r\n\t},\r\n\r\n\t// local events\r\n\tonDrop: function(source, nodes, copy){\r\n\t\t// summary:\r\n\t\t//\t\tcalled only on the current target, when drop is performed\r\n\t\t// source: Object\r\n\t\t//\t\tthe source which provides items\r\n\t\t// nodes: Array\r\n\t\t//\t\tthe list of transferred items\r\n\t\t// copy: Boolean\r\n\t\t//\t\tcopy items, if true, move items otherwise\r\n\r\n\t\tif(this != source){\r\n\t\t\tthis.onDropExternal(source, nodes, copy);\r\n\t\t}else{\r\n\t\t\tthis.onDropInternal(nodes, copy);\r\n\t\t}\r\n\t},\r\n\tonDropExternal: function(source, nodes, copy){\r\n\t\t// summary:\r\n\t\t//\t\tcalled only on the current target, when drop is performed\r\n\t\t//\t\tfrom an external source\r\n\t\t// source: Object\r\n\t\t//\t\tthe source which provides items\r\n\t\t// nodes: Array\r\n\t\t//\t\tthe list of transferred items\r\n\t\t// copy: Boolean\r\n\t\t//\t\tcopy items, if true, move items otherwise\r\n\r\n\t\tvar oldCreator = this._normalizedCreator;\r\n\t\t// transferring nodes from the source to the target\r\n\t\tif(this.creator){\r\n\t\t\t// use defined creator\r\n\t\t\tthis._normalizedCreator = function(node, hint){\r\n\t\t\t\treturn oldCreator.call(this, source.getItem(node.id).data, hint);\r\n\t\t\t};\r\n\t\t}else{\r\n\t\t\t// we have no creator defined => move/clone nodes\r\n\t\t\tif(copy){\r\n\t\t\t\t// clone nodes\r\n\t\t\t\tthis._normalizedCreator = function(node /*=====, hint =====*/){\r\n\t\t\t\t\tvar t = source.getItem(node.id);\r\n\t\t\t\t\tvar n = node.cloneNode(true);\r\n\t\t\t\t\tn.id = dnd.getUniqueId();\r\n\t\t\t\t\treturn {node: n, data: t.data, type: t.type};\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\t// move nodes\r\n\t\t\t\tthis._normalizedCreator = function(node /*=====, hint =====*/){\r\n\t\t\t\t\tvar t = source.getItem(node.id);\r\n\t\t\t\t\tsource.delItem(node.id);\r\n\t\t\t\t\treturn {node: node, data: t.data, type: t.type};\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.selectNone();\r\n\t\tif(!copy && !this.creator){\r\n\t\t\tsource.selectNone();\r\n\t\t}\r\n\t\tthis.insertNodes(true, nodes, this.before, this.current);\r\n\t\tif(!copy && this.creator){\r\n\t\t\tsource.deleteSelectedNodes();\r\n\t\t}\r\n\t\tthis._normalizedCreator = oldCreator;\r\n\t},\r\n\tonDropInternal: function(nodes, copy){\r\n\t\t// summary:\r\n\t\t//\t\tcalled only on the current target, when drop is performed\r\n\t\t//\t\tfrom the same target/source\r\n\t\t// nodes: Array\r\n\t\t//\t\tthe list of transferred items\r\n\t\t// copy: Boolean\r\n\t\t//\t\tcopy items, if true, move items otherwise\r\n\r\n\t\tvar oldCreator = this._normalizedCreator;\r\n\t\t// transferring nodes within the single source\r\n\t\tif(this.current && this.current.id in this.selection){\r\n\t\t\t// do nothing\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(copy){\r\n\t\t\tif(this.creator){\r\n\t\t\t\t// create new copies of data items\r\n\t\t\t\tthis._normalizedCreator = function(node, hint){\r\n\t\t\t\t\treturn oldCreator.call(this, this.getItem(node.id).data, hint);\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\t// clone nodes\r\n\t\t\t\tthis._normalizedCreator = function(node/*=====, hint =====*/){\r\n\t\t\t\t\tvar t = this.getItem(node.id);\r\n\t\t\t\t\tvar n = node.cloneNode(true);\r\n\t\t\t\t\tn.id = dnd.getUniqueId();\r\n\t\t\t\t\treturn {node: n, data: t.data, type: t.type};\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t// move nodes\r\n\t\t\tif(!this.current){\r\n\t\t\t\t// do nothing\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._normalizedCreator = function(node /*=====, hint =====*/){\r\n\t\t\t\tvar t = this.getItem(node.id);\r\n\t\t\t\treturn {node: node, data: t.data, type: t.type};\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis._removeSelection();\r\n\t\tthis.insertNodes(true, nodes, this.before, this.current);\r\n\t\tthis._normalizedCreator = oldCreator;\r\n\t},\r\n\tonDraggingOver: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcalled during the active DnD operation, when items\r\n\t\t//\t\tare dragged over this target, and it is not disabled\r\n\t},\r\n\tonDraggingOut: function(){\r\n\t\t// summary:\r\n\t\t//\t\tcalled during the active DnD operation, when items\r\n\t\t//\t\tare dragged away from this target, and it is not disabled\r\n\t},\r\n\r\n\t// utilities\r\n\tonOverEvent: function(){\r\n\t\t// summary:\r\n\t\t//\t\tthis function is called once, when mouse is over our container\r\n\t\tSource.superclass.onOverEvent.call(this);\r\n\t\tManager.manager().overSource(this);\r\n\t\tif(this.isDragging && this.targetState != \"Disabled\"){\r\n\t\t\tthis.onDraggingOver();\r\n\t\t}\r\n\t},\r\n\tonOutEvent: function(){\r\n\t\t// summary:\r\n\t\t//\t\tthis function is called once, when mouse is out of our container\r\n\t\tSource.superclass.onOutEvent.call(this);\r\n\t\tManager.manager().outSource(this);\r\n\t\tif(this.isDragging && this.targetState != \"Disabled\"){\r\n\t\t\tthis.onDraggingOut();\r\n\t\t}\r\n\t},\r\n\t_markTargetAnchor: function(before){\r\n\t\t// summary:\r\n\t\t//\t\tassigns a class to the current target anchor based on \"before\" status\r\n\t\t// before: Boolean\r\n\t\t//\t\tinsert before, if true, after otherwise\r\n\t\tif(this.current == this.targetAnchor && this.before == before){ return; }\r\n\t\tif(this.targetAnchor){\r\n\t\t\tthis._removeItemClass(this.targetAnchor, this.before ? \"Before\" : \"After\");\r\n\t\t}\r\n\t\tthis.targetAnchor = this.current;\r\n\t\tthis.targetBox = null;\r\n\t\tthis.before = before;\r\n\t\tif(this.targetAnchor){\r\n\t\t\tthis._addItemClass(this.targetAnchor, this.before ? \"Before\" : \"After\");\r\n\t\t}\r\n\t},\r\n\t_unmarkTargetAnchor: function(){\r\n\t\t// summary:\r\n\t\t//\t\tremoves a class of the current target anchor based on \"before\" status\r\n\t\tif(!this.targetAnchor){ return; }\r\n\t\tthis._removeItemClass(this.targetAnchor, this.before ? \"Before\" : \"After\");\r\n\t\tthis.targetAnchor = null;\r\n\t\tthis.targetBox = null;\r\n\t\tthis.before = true;\r\n\t},\r\n\t_markDndStatus: function(copy){\r\n\t\t// summary:\r\n\t\t//\t\tchanges source's state based on \"copy\" status\r\n\t\tthis._changeState(\"Source\", copy ? \"Copied\" : \"Moved\");\r\n\t},\r\n\t_legalMouseDown: function(e){\r\n\t\t// summary:\r\n\t\t//\t\tchecks if user clicked on \"approved\" items\r\n\t\t// e: Event\r\n\t\t//\t\tmouse event\r\n\r\n\t\t// accept only the left mouse button, or the left finger\r\n\t\tif(e.type != \"touchstart\" && !mouse.isLeft(e)){ return false; }\r\n\r\n\t\tif(!this.withHandles){ return true; }\r\n\r\n\t\t// check for handles\r\n\t\tfor(var node = e.target; node && node !== this.node; node = node.parentNode){\r\n\t\t\tif(domClass.contains(node, \"dojoDndHandle\")){ return true; }\r\n\t\t\tif(domClass.contains(node, \"dojoDndItem\") || domClass.contains(node, \"dojoDndIgnore\")){ break; }\r\n\t\t}\r\n\t\treturn false;\t// Boolean\r\n\t}\r\n});\r\n\r\nreturn Source;\r\n\r\n});\r\n"]}