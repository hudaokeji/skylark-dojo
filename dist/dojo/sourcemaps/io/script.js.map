{"version":3,"sources":["io/script.js"],"names":["define","connect","kernel","lang","has","win","xhr","dom","domConstruct","_script","aspect","deprecated","script","get","args","rDfd","dfd","this","_makeScriptDeferred","cancel","ioArgs","_ioAddQueryToUrl","_ioNotifyStart","url","timeout","jsonp","checkString","frameDoc","canAttach","requestId","id","scriptId","canDelete","_canAttach","around","isValid","response","_validCheck","call","then","resolve","otherwise","error","reject","attach","_attach","remove","_remove","_ioSetArgs","_deferredCancel","_deferredOk","_deferredError","_scopeName","_counter","callbackParamName","query","length","_jsonpCallback","addBoth","value","Error","global","_callbacksProperty","_addDeadScript","canceled","json","scriptLoaded","console","log","_deadScripts","push","deadScripts","i","_ioCheck","eval","_resHandle","callback","errback","setObject"],"mappings":"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","file":"../../io/script.js","sourcesContent":["define([\r\n\t\"../_base/connect\", /*===== \"../_base/declare\", =====*/ \"../_base/kernel\", \"../_base/lang\",\r\n\t\"../sniff\", \"../_base/window\",\"../_base/xhr\",\r\n\t\"../dom\", \"../dom-construct\", \"../request/script\", \"../aspect\"\r\n], function(connect, /*===== declare, =====*/ kernel, lang, has, win, xhr, dom, domConstruct, _script, aspect){\r\n\r\n\t// module:\r\n\t//\t\tdojo/io/script\r\n\r\n\tkernel.deprecated(\"dojo/io/script\", \"Use dojo/request/script.\", \"2.0\");\r\n\r\n\t/*=====\r\n\tvar __ioArgs = declare(kernel.__IoArgs, {\r\n\t\t// summary:\r\n\t\t//\t\tAll the properties described in the dojo.__ioArgs type, apply to this\r\n\t\t//\t\ttype as well, EXCEPT \"handleAs\". It is not applicable to\r\n\t\t//\t\tdojo/io/script.get() calls, since it is implied by the usage of\r\n\t\t//\t\t\"jsonp\" (response will be a JSONP call returning JSON)\r\n\t\t//\t\tor the response is pure JavaScript defined in\r\n\t\t//\t\tthe body of the script that was attached.\r\n\t\t// callbackParamName: String\r\n\t\t//\t\tDeprecated as of Dojo 1.4 in favor of \"jsonp\", but still supported for\r\n\t\t//\t\tlegacy code. See notes for jsonp property.\r\n\t\t// jsonp: String\r\n\t\t//\t\tThe URL parameter name that indicates the JSONP callback string.\r\n\t\t//\t\tFor instance, when using Yahoo JSONP calls it is normally,\r\n\t\t//\t\tjsonp: \"callback\". For AOL JSONP calls it is normally\r\n\t\t//\t\tjsonp: \"c\".\r\n\t\t// checkString: String\r\n\t\t//\t\tA string of JavaScript that when evaluated like so:\r\n\t\t//\t\t\"typeof(\" + checkString + \") != 'undefined'\"\r\n\t\t//\t\tbeing true means that the script fetched has been loaded.\r\n\t\t//\t\tDo not use this if doing a JSONP type of call (use callbackParamName instead).\r\n\t\t// frameDoc: Document\r\n\t\t//\t\tThe Document object for a child iframe. If this is passed in, the script\r\n\t\t//\t\twill be attached to that document. This can be helpful in some comet long-polling\r\n\t\t//\t\tscenarios with Firefox and Opera.\r\n\t});\r\n\t=====*/\r\n\r\n\tvar script = {\r\n\t\t// summary:\r\n\t\t//\t\tTODOC\r\n\r\n\t\tget: function(/*__ioArgs*/ args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsends a get request using a dynamically created script tag.\r\n\t\t\tvar rDfd;\r\n\t\t\tvar dfd = this._makeScriptDeferred(args, function(dfd){\r\n\t\t\t\trDfd && rDfd.cancel();\r\n\t\t\t});\r\n\t\t\tvar ioArgs = dfd.ioArgs;\r\n\t\t\txhr._ioAddQueryToUrl(ioArgs);\r\n\r\n\t\t\txhr._ioNotifyStart(dfd);\r\n\r\n\t\t\trDfd = _script.get(ioArgs.url, {\r\n\t\t\t\ttimeout: args.timeout,\r\n\t\t\t\tjsonp: ioArgs.jsonp,\r\n\t\t\t\tcheckString: args.checkString,\r\n\t\t\t\tioArgs: ioArgs,\r\n\t\t\t\tframeDoc: args.frameDoc,\r\n\t\t\t\tcanAttach: function(rDfd){\r\n\t\t\t\t\t// sync values\r\n\t\t\t\t\tioArgs.requestId = rDfd.id;\r\n\t\t\t\t\tioArgs.scriptId = rDfd.scriptId;\r\n\t\t\t\t\tioArgs.canDelete = rDfd.canDelete;\r\n\r\n\t\t\t\t\treturn script._canAttach(ioArgs);\r\n\t\t\t\t}\r\n\t\t\t}, true);\r\n\r\n\t\t\t// Run _validCheck at the same time dojo/request/watch runs the\r\n\t\t\t// rDfd.isValid function\r\n\t\t\taspect.around(rDfd, \"isValid\", function(isValid){\r\n\t\t\t\treturn function(response){\r\n\t\t\t\t\tscript._validCheck(dfd);\r\n\t\t\t\t\treturn isValid.call(this, response);\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\trDfd.then(function(){\r\n\t\t\t\tdfd.resolve(dfd);\r\n\t\t\t}).otherwise(function(error){\r\n\t\t\t\tdfd.ioArgs.error = error;\r\n\t\t\t\tdfd.reject(error);\r\n\t\t\t});\r\n\r\n\t\t\treturn dfd;\r\n\t\t},\r\n\r\n\t\tattach: _script._attach,\r\n\t\tremove: _script._remove,\r\n\r\n\t\t_makeScriptDeferred: function(/*Object*/ args, /*Function?*/ cancel){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets up a Deferred object for an IO request.\r\n\t\t\tvar dfd = xhr._ioSetArgs(args, cancel || this._deferredCancel, this._deferredOk, this._deferredError);\r\n\r\n\t\t\tvar ioArgs = dfd.ioArgs;\r\n\t\t\tioArgs.id = kernel._scopeName + \"IoScript\" + (this._counter++);\r\n\t\t\tioArgs.canDelete = false;\r\n\r\n\t\t\t//Special setup for jsonp case\r\n\t\t\tioArgs.jsonp = args.callbackParamName || args.jsonp;\r\n\t\t\tif(ioArgs.jsonp){\r\n\t\t\t\t//Add the jsonp parameter.\r\n\t\t\t\tioArgs.query = ioArgs.query || \"\";\r\n\t\t\t\tif(ioArgs.query.length > 0){\r\n\t\t\t\t\tioArgs.query += \"&\";\r\n\t\t\t\t}\r\n\t\t\t\tioArgs.query += ioArgs.jsonp +\r\n\t\t\t\t\t\"=\" + (args.frameDoc ? \"parent.\" : \"\") +\r\n\t\t\t\t\tkernel._scopeName + \".io.script.jsonp_\" + ioArgs.id + \"._jsonpCallback\";\r\n\r\n\t\t\t\tioArgs.frameDoc = args.frameDoc;\r\n\r\n\t\t\t\t//Setup the Deferred to have the jsonp callback.\r\n\t\t\t\tioArgs.canDelete = true;\r\n\t\t\t\tdfd._jsonpCallback = this._jsonpCallback;\r\n\t\t\t\tthis[\"jsonp_\" + ioArgs.id] = dfd;\r\n\t\t\t}\r\n\t\t\t// Make sure this runs no matter what happens to clean things up if need be\r\n\t\t\tdfd.addBoth(function(value){\r\n\t\t\t\tif(ioArgs.canDelete){\r\n\t\t\t\t\tif(value instanceof Error){\r\n\t\t\t\t\t\t// Set up a callback that will clean things up for timeouts and cancels\r\n\t\t\t\t\t\tscript[\"jsonp_\" + ioArgs.id]._jsonpCallback = function(){\r\n\t\t\t\t\t\t\t// Delete the cached deferred\r\n\t\t\t\t\t\t\tdelete script[\"jsonp_\" + ioArgs.id];\r\n\t\t\t\t\t\t\tif(ioArgs.requestId){\r\n\t\t\t\t\t\t\t\t// Call the dojo/request/script callback to clean itself up as well\r\n\t\t\t\t\t\t\t\tkernel.global[_script._callbacksProperty][ioArgs.requestId]();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tscript._addDeadScript(ioArgs);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn dfd; // dojo/_base/Deferred\r\n\t\t},\r\n\r\n\t\t_deferredCancel: function(/*Deferred*/ dfd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcanceller function for xhr._ioSetArgs call.\r\n\r\n\t\t\t//DO NOT use \"this\" and expect it to be script.\r\n\t\t\tdfd.canceled = true;\r\n\t\t},\r\n\r\n\t\t_deferredOk: function(/*Deferred*/ dfd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tokHandler function for xhr._ioSetArgs call.\r\n\r\n\t\t\t//DO NOT use \"this\" and expect it to be script.\r\n\t\t\tvar ioArgs = dfd.ioArgs;\r\n\r\n\t\t\t//Favor JSONP responses, script load events then lastly ioArgs.\r\n\t\t\t//The ioArgs are goofy, but cannot return the dfd since that stops\r\n\t\t\t//the callback chain in Deferred. The return value is not that important\r\n\t\t\t//in that case, probably a checkString case.\r\n\t\t\treturn ioArgs.json || ioArgs.scriptLoaded || ioArgs;\r\n\t\t},\r\n\r\n\t\t_deferredError: function(/*Error*/ error, /*Deferred*/ dfd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\terrHandler function for xhr._ioSetArgs call.\r\n\r\n\t\t\tconsole.log(\"dojo.io.script error\", error);\r\n\t\t\treturn error;\r\n\t\t},\r\n\r\n\t\t_deadScripts: [],\r\n\t\t_counter: 1,\r\n\r\n\t\t_addDeadScript: function(/*Object*/ ioArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets up an entry in the deadScripts array.\r\n\t\t\tscript._deadScripts.push({id: ioArgs.id, frameDoc: ioArgs.frameDoc});\r\n\t\t\t//Being extra paranoid about leaks:\r\n\t\t\tioArgs.frameDoc = null;\r\n\t\t},\r\n\r\n\t\t_validCheck: function(/*Deferred*/ dfd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tinflight check function to see if dfd is still valid.\r\n\r\n\t\t\t// TODO: why isn't dfd accessed?\r\n\r\n\t\t\t//Do script cleanup here. We wait for one inflight pass\r\n\t\t\t//to make sure we don't get any weird things by trying to remove a script\r\n\t\t\t//tag that is part of the call chain (IE 6 has been known to\r\n\t\t\t//crash in that case).\r\n\t\t\tvar deadScripts = script._deadScripts;\r\n\t\t\tif(deadScripts && deadScripts.length > 0){\r\n\t\t\t\tfor(var i = 0; i < deadScripts.length; i++){\r\n\t\t\t\t\t//Remove the script tag\r\n\t\t\t\t\tscript.remove(deadScripts[i].id, deadScripts[i].frameDoc);\r\n\t\t\t\t\t//Clean up the deferreds\r\n\t\t\t\t\tdelete script[\"jsonp_\" + deadScripts[i].id];\r\n\t\t\t\t\tdeadScripts[i].frameDoc = null;\r\n\t\t\t\t}\r\n\t\t\t\tscript._deadScripts = [];\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t_ioCheck: function(dfd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tinflight check function to see if IO finished.\r\n\t\t\t// dfd: Deferred\r\n\t\t\tvar ioArgs = dfd.ioArgs;\r\n\t\t\t//Check for finished jsonp\r\n\t\t\tif(ioArgs.json || (ioArgs.scriptLoaded && !ioArgs.args.checkString)){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t//Check for finished \"checkString\" case.\r\n\t\t\tvar checkString = ioArgs.args.checkString;\r\n\t\t\treturn checkString && eval(\"typeof(\" + checkString + \") != 'undefined'\");\r\n\r\n\r\n\t\t},\r\n\r\n\t\t_resHandle: function(/*Deferred*/ dfd){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tinflight function to handle a completed response.\r\n\t\t\tif(script._ioCheck(dfd)){\r\n\t\t\t\tdfd.callback(dfd);\r\n\t\t\t}else{\r\n\t\t\t\t//This path should never happen since the only way we can get\r\n\t\t\t\t//to _resHandle is if _ioCheck is true.\r\n\t\t\t\tdfd.errback(new Error(\"inconceivable dojo.io.script._resHandle error\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_canAttach: function(/*===== ioArgs =====*/ ){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA method that can be overridden by other modules\r\n\t\t\t//\t\tto control when the script attachment occurs.\r\n\t\t\t// ioArgs: Object\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t_jsonpCallback: function(/*JSON Object*/ json){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tgeneric handler for jsonp callback. A pointer to this function\r\n\t\t\t//\t\tis used for all jsonp callbacks.  NOTE: the \"this\" in this\r\n\t\t\t//\t\tfunction will be the Deferred object that represents the script\r\n\t\t\t//\t\trequest.\r\n\t\t\tthis.ioArgs.json = json;\r\n\t\t\tif(this.ioArgs.requestId){\r\n\t\t\t\tkernel.global[_script._callbacksProperty][this.ioArgs.requestId](json);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tlang.setObject(\"dojo.io.script\", script);\r\n\r\n\t/*=====\r\n\tscript.attach = function(id, url, frameDocument){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a new `<script>` tag pointing to the specified URL and\r\n\t\t//\t\tadds it to the document.\r\n\t\t// description:\r\n\t\t//\t\tAttaches the script element to the DOM. Use this method if you\r\n\t\t//\t\tjust want to attach a script to the DOM and do not care when or\r\n\t\t//\t\tif it loads.\r\n\t};\r\n\tscript.remove = function(id, frameDocument){\r\n\t\t// summary:\r\n\t\t//\t\tremoves the script element with the given id, from the given frameDocument.\r\n\t\t//\t\tIf no frameDocument is passed, the current document is used.\r\n\t};\r\n\t=====*/\r\n\r\n\treturn script;\r\n});\r\n"]}