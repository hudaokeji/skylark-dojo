{"version":3,"sources":["main.js"],"names":["define","kernel","has","require","sniff","lang","array","config","ready","isDebug","add","deps","map","isArray","item","replace","isAsync"],"mappings":";;;;;;;AAAAA,QACC,iBACA,QACA,UACA,UACA,eACA,gBACA,iBACA,UACA,kBACA,kBACA,mBACA,eACA,gBACA,wCACA,qCACA,yCACE,SAASC,EAAQC,EAAKC,EAASC,EAAOC,EAAMC,EAAOC,EAAQC,GAiB7D,GANGD,EAAOE,SACTN,GAAS,uBAIVD,EAAIQ,IAAI,sBAAuB,GAC5BR,EAAI,uBAAuB,CAC7B,IAAIS,EAAMJ,EAAOJ,QACdQ,IAEFA,EAAML,EAAMM,IAAIP,EAAKQ,QAAQF,GAAQA,GAAQA,GAAO,SAASG,GAAO,OAAOA,EAAKC,QAAQ,MAAO,OAC5Fd,EAAOe,QACTb,EAAQQ,GAKRH,EAAM,EAAG,WAAWL,EAAQQ,MAK/B,OAAOV","file":"../main.js","sourcesContent":["define([\r\n\t\"./_base/kernel\",\t// kernel.isAsync\r\n\t\"./has\",\r\n\t\"require\",\r\n\t\"./sniff\",\r\n\t\"./_base/lang\",\r\n\t\"./_base/array\",\r\n\t\"./_base/config\",\r\n\t\"./ready\",\r\n\t\"./_base/declare\",\r\n\t\"./_base/connect\",\r\n\t\"./_base/Deferred\",\r\n\t\"./_base/json\",\r\n\t\"./_base/Color\",\r\n\t\"./has!dojo-firebug?./_firebug/firebug\",\r\n\t\"./has!host-browser?./_base/browser\",\r\n\t\"./has!dojo-sync-loader?./_base/loader\"\r\n], function(kernel, has, require, sniff, lang, array, config, ready){\r\n\t// module:\r\n\t//\t\tdojo/main\r\n\t// summary:\r\n\t//\t\tThis is the package main module for the dojo package; it loads dojo base appropriate for the execution environment.\r\n\r\n\t// the preferred way to load the dojo firebug console is by setting has(\"dojo-firebug\") true in dojoConfig\r\n\t// the isDebug config switch is for backcompat and will work fine in sync loading mode; it works in\r\n\t// async mode too, but there's no guarantee when the module is loaded; therefore, if you need a firebug\r\n\t// console guaranteed at a particular spot in an app, either set config.has[\"dojo-firebug\"] true before\r\n\t// loading dojo.js or explicitly include dojo/_firebug/firebug in a dependency list.\r\n\tif(config.isDebug){\r\n\t\trequire([\"./_firebug/firebug\"]);\r\n\t}\r\n\r\n\t// dojoConfig.require is deprecated; use the loader configuration property deps\r\n\thas.add(\"dojo-config-require\", 1);\r\n\tif(has(\"dojo-config-require\")){\r\n\t\tvar deps= config.require;\r\n\t\tif(deps){\r\n\t\t\t// config.require may be dot notation\r\n\t\t\tdeps= array.map(lang.isArray(deps) ? deps : [deps], function(item){ return item.replace(/\\./g, \"/\"); });\r\n\t\t\tif(kernel.isAsync){\r\n\t\t\t\trequire(deps);\r\n\t\t\t}else{\r\n\t\t\t\t// this is a bit janky; in 1.6- dojo is defined before these requires are applied; but in 1.7+\r\n\t\t\t\t// dojo isn't defined until returning from this module; this is only a problem in sync mode\r\n\t\t\t\t// since we're in sync mode, we know we've got our loader with its priority ready queue\r\n\t\t\t\tready(1, function(){require(deps);});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn kernel;\r\n});\r\n"]}