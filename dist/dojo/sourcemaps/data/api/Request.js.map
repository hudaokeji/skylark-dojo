{"version":3,"sources":["data/api/Request.js"],"names":["define","declare","abort","Error"],"mappings":";;;;;;;AAAAA,QAAQ,uBAAwB,SAASC,GAKzC,OAAOA,EAAQ,wBAAyB,MAevCC,MAAO,WAQN,MAAM,IAAIC,MAAM","file":"../../../data/api/Request.js","sourcesContent":["define([\"../../_base/declare\"], function(declare){\r\n\r\n// module:\r\n//\t\tdojo/data/api/Request\r\n\r\nreturn declare(\"dojo.data.api.Request\", null, {\r\n\t// summary:\r\n\t//\t\tThis class defines out the semantics of what a 'Request' object looks like\r\n\t//\t\twhen returned from a fetch() method.  In general, a request object is\r\n\t//\t\tnothing more than the original keywordArgs from fetch with an abort function\r\n\t//\t\tattached to it to allow users to abort a particular request if they so choose.\r\n\t//\t\tNo other functions are required on a general Request object return.  That does not\r\n\t//\t\tinhibit other store implementations from adding extensions to it, of course.\r\n\t//\r\n\t//\t\tThis is an abstract API that data provider implementations conform to.\r\n\t//\t\tThis file defines methods signatures and intentionally leaves all the\r\n\t//\t\tmethods unimplemented.\r\n\t//\r\n\t//\t\tFor more details on fetch, see dojo/data/api/Read.fetch().\r\n\r\n\tabort: function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis function is a hook point for stores to provide as a way for\r\n\t\t//\t\ta fetch to be halted mid-processing.\r\n\t\t// description:\r\n\t\t//\t\tThis function is a hook point for stores to provide as a way for\r\n\t\t//\t\ta fetch to be halted mid-processing.  For more details on the fetch() api,\r\n\t\t//\t\tplease see dojo/data/api/Read.fetch().\r\n\t\tthrow new Error('Unimplemented API: dojo.data.api.Request.abort');\r\n\t}\r\n});\r\n\r\n});\r\n"]}