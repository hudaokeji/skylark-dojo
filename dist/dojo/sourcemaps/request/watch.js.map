{"version":3,"sources":["request/watch.js"],"names":["define","util","RequestTimeoutError","CancelError","array","win","on","_inFlightIntvl","_inFlight","watchInFlight","dfd","now","Date","i","length","response","options","isCanceled","isValid","splice","watch","_onAction","isReady","handleResponse","startTime","timeout","cancel","_onInFlight","clearInterval","isFulfilled","push","setInterval","sync","cancelAll","forEach","e","doc","attachEvent","global"],"mappings":";;;;;;;AAAAA,QACC,SACA,gCACA,wBACA,iBACA,uCACA,oDACE,SAASC,EAAMC,EAAqBC,EAAaC,EAAOC,EAAKC,GAG/D,IAAIC,EAAiB,KACpBC,KAED,SAASC,IAQR,IAHA,IAGeC,EAHXC,GAAO,IAAKC,KAGRC,EAAI,EAAQA,EAAIL,EAAUM,SAAWJ,EAAMF,EAAUK,IAAKA,IAAI,CACrE,IAAIE,EAAWL,EAAIK,SAClBC,EAAUD,EAASC,QAChBN,EAAIO,YAAcP,EAAIO,cAAkBP,EAAIQ,UAAYR,EAAIQ,QAAQH,IACvEP,EAAUW,OAAON,IAAK,GACtBO,EAAMC,WAAaD,EAAMC,aACjBX,EAAIY,SAAWZ,EAAIY,QAAQP,IACnCP,EAAUW,OAAON,IAAK,GACtBH,EAAIa,eAAeR,GACnBK,EAAMC,WAAaD,EAAMC,aACjBX,EAAIc,WAETd,EAAIc,WAAaR,EAAQS,SAAW,GAAKd,IAC3CH,EAAUW,OAAON,IAAK,GAEtBH,EAAIgB,OAAO,IAAIxB,EAAoB,mBAAoBa,IACvDK,EAAMC,WAAaD,EAAMC,aAK5BD,EAAMO,aAAeP,EAAMO,YAAYjB,GAEnCF,EAAUM,SACbc,cAAcrB,GACdA,EAAiB,MAInB,SAASa,EAAMV,GAgBXA,EAAIK,SAASC,QAAQS,UACvBf,EAAIc,WAAa,IAAKZ,MAGpBF,EAAImB,gBAKPrB,EAAUsB,KAAKpB,GACXH,IACHA,EAAiBwB,YAAYtB,EAAe,KAK1CC,EAAIK,SAASC,QAAQgB,MACvBvB,KAwBF,OApBAW,EAAMa,UAAY,WAGjB,IACC7B,EAAM8B,QAAQ1B,EAAW,SAASE,GACjC,IACCA,EAAIgB,OAAO,IAAIvB,EAAY,2BAC3B,MAAMgC,OAER,MAAMA,MAGL9B,GAAOC,GAAMD,EAAI+B,IAAIC,aAGvB/B,EAAGD,EAAIiC,OAAQ,SAAU,WACxBlB,EAAMa,cAIDb","file":"../../request/watch.js","sourcesContent":["define([\r\n\t'./util',\r\n\t'../errors/RequestTimeoutError',\r\n\t'../errors/CancelError',\r\n\t'../_base/array',\r\n\t'../has!host-browser?../_base/window:',\r\n\t'../has!host-browser?dom-addeventlistener?:../on:'\r\n], function(util, RequestTimeoutError, CancelError, array, win, on){\r\n\t// avoid setting a timer per request. It degrades performance on IE\r\n\t// something fierece if we don't use unified loops.\r\n\tvar _inFlightIntvl = null,\r\n\t\t_inFlight = [];\r\n\r\n\tfunction watchInFlight(){\r\n\t\t// summary:\r\n\t\t//\t\tinternal method that checks each inflight XMLHttpRequest to see\r\n\t\t//\t\tif it has completed or if the timeout situation applies.\r\n\r\n\t\tvar now = +(new Date);\r\n\r\n\t\t// we need manual loop because we often modify _inFlight (and therefore 'i') while iterating\r\n\t\tfor(var i = 0, dfd; i < _inFlight.length && (dfd = _inFlight[i]); i++){\r\n\t\t\tvar response = dfd.response,\r\n\t\t\t\toptions = response.options;\r\n\t\t\tif((dfd.isCanceled && dfd.isCanceled()) || (dfd.isValid && !dfd.isValid(response))){\r\n\t\t\t\t_inFlight.splice(i--, 1);\r\n\t\t\t\twatch._onAction && watch._onAction();\r\n\t\t\t}else if(dfd.isReady && dfd.isReady(response)){\r\n\t\t\t\t_inFlight.splice(i--, 1);\r\n\t\t\t\tdfd.handleResponse(response);\r\n\t\t\t\twatch._onAction && watch._onAction();\r\n\t\t\t}else if(dfd.startTime){\r\n\t\t\t\t// did we timeout?\r\n\t\t\t\tif(dfd.startTime + (options.timeout || 0) < now){\r\n\t\t\t\t\t_inFlight.splice(i--, 1);\r\n\t\t\t\t\t// Cancel the request so the io module can do appropriate cleanup.\r\n\t\t\t\t\tdfd.cancel(new RequestTimeoutError('Timeout exceeded', response));\r\n\t\t\t\t\twatch._onAction && watch._onAction();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twatch._onInFlight && watch._onInFlight(dfd);\r\n\r\n\t\tif(!_inFlight.length){\r\n\t\t\tclearInterval(_inFlightIntvl);\r\n\t\t\t_inFlightIntvl = null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction watch(dfd){\r\n\t\t// summary:\r\n\t\t//\t\tWatches the io request represented by dfd to see if it completes.\r\n\t\t// dfd: Deferred\r\n\t\t//\t\tThe Deferred object to watch.\r\n\t\t// response: Object\r\n\t\t//\t\tThe object used as the value of the request promise.\r\n\t\t// validCheck: Function\r\n\t\t//\t\tFunction used to check if the IO request is still valid. Gets the dfd\r\n\t\t//\t\tobject as its only argument.\r\n\t\t// ioCheck: Function\r\n\t\t//\t\tFunction used to check if basic IO call worked. Gets the dfd\r\n\t\t//\t\tobject as its only argument.\r\n\t\t// resHandle: Function\r\n\t\t//\t\tFunction used to process response. Gets the dfd\r\n\t\t//\t\tobject as its only argument.\r\n\t\tif(dfd.response.options.timeout){\r\n\t\t\tdfd.startTime = +(new Date);\r\n\t\t}\r\n\r\n\t\tif(dfd.isFulfilled()){\r\n\t\t\t// bail out if the deferred is already fulfilled\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_inFlight.push(dfd);\r\n\t\tif(!_inFlightIntvl){\r\n\t\t\t_inFlightIntvl = setInterval(watchInFlight, 50);\r\n\t\t}\r\n\r\n\t\t// handle sync requests separately from async:\r\n\t\t// http://bugs.dojotoolkit.org/ticket/8467\r\n\t\tif(dfd.response.options.sync){\r\n\t\t\twatchInFlight();\r\n\t\t}\r\n\t}\r\n\r\n\twatch.cancelAll = function cancelAll(){\r\n\t\t// summary:\r\n\t\t//\t\tCancels all pending IO requests, regardless of IO type\r\n\t\ttry{\r\n\t\t\tarray.forEach(_inFlight, function(dfd){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tdfd.cancel(new CancelError('All requests canceled.'));\r\n\t\t\t\t}catch(e){}\r\n\t\t\t});\r\n\t\t}catch(e){}\r\n\t};\r\n\r\n\tif(win && on && win.doc.attachEvent){\r\n\t\t// Automatically call cancel all io calls on unload in IE\r\n\t\t// http://bugs.dojotoolkit.org/ticket/2357\r\n\t\ton(win.global, 'unload', function(){\r\n\t\t\twatch.cancelAll();\r\n\t\t});\r\n\t}\r\n\r\n\treturn watch;\r\n});\r\n"]}