{"version":3,"sources":["rpc/JsonService.js"],"names":["define","declare","Deferred","json","lang","xhr","RpcService","bustCache","contentType","lastSubmissionId","callRemote","method","params","deferred","this","bind","parameters","deferredRequestHandler","url","post","serviceUrl","postData","createRequest","timeout","handleAs","addCallbacks","resultCallback","errorCallback","req","id","toJson","parseResults","obj","isObject","result","Result","ResultSet"],"mappings":";;;;;;;AAAAA,QACC,mBAAoB,oBAAqB,gBAAiB,gBAAiB,eAC3E,gBACE,SAASC,EAASC,EAAUC,EAAMC,EAAMC,EAAKC,GAK/C,OAAOL,EAAQ,uBAAwBK,GAItCC,WAAW,EACXC,YAAa,uBACbC,iBAAkB,EAElBC,WAAY,SAASC,EAAQC,GAS5B,IAAIC,EAAW,IAAIX,EAEnB,OADAY,KAAKC,KAAKJ,EAAQC,EAAQC,GACnBA,GAGRE,KAAM,SAASJ,EAAQK,EAAYC,EAAwBC,GAYhDb,EAAIc,MACbD,IAAKA,GAAKJ,KAAKM,WACfC,SAAUP,KAAKQ,cAAcX,EAAQK,GACrCR,YAAaM,KAAKN,YAClBe,QAAST,KAAKS,QACdC,SAAU,0BAEPC,aAAaX,KAAKY,eAAeT,GAAyBH,KAAKa,cAAcV,KAGlFK,cAAe,SAASX,EAAQC,GAQ/B,IAAIgB,GAAQhB,OAAUA,EAAQD,OAAUA,EAAQkB,KAAQf,KAAKL,kBAC7D,OAAON,EAAK2B,OAAOF,IAGpBG,aAAc,SAAqBC,GAOlC,GAAG5B,EAAK6B,SAASD,GAAK,CACrB,GAAG,WAAYA,EACd,OAAOA,EAAIE,OAEZ,GAAG,WAAYF,EACd,OAAOA,EAAIG,OAEZ,GAAG,cAAeH,EACjB,OAAOA,EAAII,UAGb,OAAOJ","file":"../../rpc/JsonService.js","sourcesContent":["define([\r\n\t\"../_base/declare\", \"../_base/Deferred\", \"../_base/json\", \"../_base/lang\", \"../_base/xhr\",\r\n\t\"./RpcService\"\r\n], function(declare, Deferred, json, lang, xhr, RpcService){\r\n\r\n\t// module:\r\n\t//\t\tdojo/rpc/JsonService\r\n\r\n\treturn declare(\"dojo.rpc.JsonService\", RpcService, {\r\n\t\t// summary:\r\n\t\t//\t\tTODOC\r\n\r\n\t\tbustCache: false,\r\n\t\tcontentType: \"application/json-rpc\",\r\n\t\tlastSubmissionId: 0,\r\n\r\n\t\tcallRemote: function(method, params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcall an arbitrary remote method without requiring it to be\r\n\t\t\t//\t\tpredefined with SMD\r\n\t\t\t// method: string\r\n\t\t\t//\t\tthe name of the remote method you want to call.\r\n\t\t\t// params: array\r\n\t\t\t//\t\tarray of parameters to pass to method\r\n\r\n\t\t\tvar deferred = new Deferred();\r\n\t\t\tthis.bind(method, params, deferred);\r\n\t\t\treturn deferred;\r\n\t\t},\r\n\r\n\t\tbind: function(method, parameters, deferredRequestHandler, url){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tJSON-RPC bind method. Takes remote method, parameters,\r\n\t\t\t//\t\tdeferred, and a url, calls createRequest to make a JSON-RPC\r\n\t\t\t//\t\tenvelope and passes that off with bind.\r\n\t\t\t// method: string\r\n\t\t\t//\t\tThe name of the method we are calling\r\n\t\t\t// parameters: array\r\n\t\t\t//\t\tThe parameters we are passing off to the method\r\n\t\t\t// deferredRequestHandler: deferred\r\n\t\t\t//\t\tThe Deferred object for this particular request\r\n\r\n\t\t\tvar def = xhr.post({\r\n\t\t\t\turl: url||this.serviceUrl,\r\n\t\t\t\tpostData: this.createRequest(method, parameters),\r\n\t\t\t\tcontentType: this.contentType,\r\n\t\t\t\ttimeout: this.timeout,\r\n\t\t\t\thandleAs: \"json-comment-optional\"\r\n\t\t\t});\r\n\t\t\tdef.addCallbacks(this.resultCallback(deferredRequestHandler), this.errorCallback(deferredRequestHandler));\r\n\t\t},\r\n\r\n\t\tcreateRequest: function(method, params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreate a JSON-RPC envelope for the request\r\n\t\t\t// method: string\r\n\t\t\t//\t\tThe name of the method we are creating the request for\r\n\t\t\t// params: array\r\n\t\t\t//\t\tThe array of parameters for this request\r\n\r\n\t\t\tvar req = { \"params\": params, \"method\": method, \"id\": ++this.lastSubmissionId };\r\n\t\t\treturn json.toJson(req);\r\n\t\t},\r\n\r\n\t\tparseResults: function(/*anything*/obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tparse the result envelope and pass the results back to\r\n\t\t\t//\t\tthe callback function\r\n\t\t\t// obj: Object\r\n\t\t\t//\t\tObject containing envelope of data we receive from the server\r\n\r\n\t\t\tif(lang.isObject(obj)){\r\n\t\t\t\tif(\"result\" in obj){\r\n\t\t\t\t\treturn obj.result;\r\n\t\t\t\t}\r\n\t\t\t\tif(\"Result\" in obj){\r\n\t\t\t\t\treturn obj.Result;\r\n\t\t\t\t}\r\n\t\t\t\tif(\"ResultSet\" in obj){\r\n\t\t\t\t\treturn obj.ResultSet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t});\r\n\r\n});\r\n"]}