{"version":3,"sources":["ready.js"],"names":["define","dojo","has","require","domReady","lang","isDomReady","loadQ","onLoadRecursiveGuard","handleDomReady","_postLoad","config","afterOnLoad","onEvent","_Q","length","idle","f","shift","e","info","message","signal","on","_onQEmpty","ready","addOnLoad","priority","context","callback","hitchArgs","_toArray","arguments","hitch","apply","i","splice","add","dca","isArray","parseOnLoad","isAsync","parser","deprecated"],"mappings":";;;;;;;AAAAA,QAAQ,iBAAkB,QAAS,UAAW,gCAAiC,gBAAiB,SAASC,EAAMC,EAAKC,QAASC,EAAUC,GAMtI,IAECC,EAAa,EAGbC,KAGAC,EAAuB,EAEvBC,EAAiB,WAChBH,EAAa,EACbL,EAAKS,UAAYT,EAAKU,OAAOC,aAAc,EAC3CC,KAGDA,EAAU,WAWT,IAAGL,EAAH,CAUA,IAPAA,EAAuB,EAOjBF,KAAgBF,GAAkC,GAAtBA,EAASU,GAAGC,WAAiBZ,QAAQa,MAAOb,QAAQa,SAAkBT,EAAMQ,QAAO,CACpH,IAAIE,EAAIV,EAAMW,QACd,IACCD,IACA,MAAME,GAGN,GADAA,EAAEC,KAAOD,EAAEE,SACRlB,QAAQmB,OAGV,MAAMH,EAFNhB,QAAQmB,OAAO,QAASH,IAO3BX,EAAuB,IAKzBL,QAAQoB,IAAMpB,QAAQoB,GAAG,OAAQV,GAC9BT,IACFA,EAASoB,UAAYX,GAGtB,IAAIY,EAAQxB,EAAKwB,MAAQxB,EAAKyB,UAAY,SAASC,EAAUC,EAASC,GAyCrE,IAAIC,EAAYzB,EAAK0B,SAASC,WACR,iBAAZL,GACTE,EAAWD,EACXA,EAAUD,EACVA,EAAW,KAEXG,EAAUZ,SAEXW,EAAWA,EACVxB,EAAK4B,MAAMC,MAAMjC,EAAM6B,GACvB,WACCF,MAEOD,SAAWA,EACpB,IAAI,IAAIQ,EAAI,EAAGA,EAAI5B,EAAMQ,QAAUY,GAAYpB,EAAM4B,GAAGR,SAAUQ,KAClE5B,EAAM6B,OAAOD,EAAG,EAAGN,GACnBhB,KAID,GADAX,EAAImC,IAAI,wBAAyB,GAC9BnC,EAAI,yBAAyB,CAC/B,IAAIoC,EAAMrC,EAAKU,OAAOe,UACnBY,GACFb,EAAOpB,EAAKkC,QAAQD,GAAO,QAAU,QAASrC,EAAMqC,GAmBtD,OAfGpC,EAAI,qBAAuBD,EAAKU,OAAO6B,cAAgBvC,EAAKwC,SAC9DhB,EAAM,GAAI,WACLxB,EAAKyC,SACRzC,EAAK0C,WAAW,yCAA0C,GAAI,OAC9DxC,SAAS,mBAKTC,EACFA,EAASK,GAETA,IAGMgB","file":"../ready.js","sourcesContent":["define([\"./_base/kernel\", \"./has\", \"require\", \"./has!host-browser?./domReady\", \"./_base/lang\"], function(dojo, has, require, domReady, lang){\r\n\t// module:\r\n\t//\t\tdojo/ready\r\n\t// note:\r\n\t//\t\tThis module should be unnecessary in dojo 2.0\r\n\r\n\tvar\r\n\t\t// truthy if DOMContentLoaded or better (e.g., window.onload fired) has been achieved\r\n\t\tisDomReady = 0,\r\n\r\n\t\t// The queue of functions waiting to execute as soon as dojo.ready conditions satisfied\r\n\t\tloadQ = [],\r\n\r\n\t\t// prevent recursion in onLoad\r\n\t\tonLoadRecursiveGuard = 0,\r\n\r\n\t\thandleDomReady = function(){\r\n\t\t\tisDomReady = 1;\r\n\t\t\tdojo._postLoad = dojo.config.afterOnLoad = true;\r\n\t\t\tonEvent();\r\n\t\t},\r\n\r\n\t\tonEvent = function(){\r\n\t\t\t// Called when some state changes:\r\n\t\t\t//\t\t- dom ready\r\n\t\t\t//\t\t- dojo/domReady has finished processing everything in its queue\r\n\t\t\t//\t\t- task added to loadQ\r\n\t\t\t//\t\t- require() has finished loading all currently requested modules\r\n\t\t\t//\r\n\t\t\t// Run the functions queued with dojo.ready if appropriate.\r\n\r\n\r\n\t\t\t//guard against recursions into this function\r\n\t\t\tif(onLoadRecursiveGuard){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tonLoadRecursiveGuard = 1;\r\n\r\n\t\t\t// Run tasks in queue if require() is finished loading modules, the dom is ready, and there are no\r\n\t\t\t// pending tasks registered via domReady().\r\n\t\t\t// The last step is necessary so that a user defined dojo.ready() callback is delayed until after the\r\n\t\t\t// domReady() calls inside of dojo.\t  Failure can be seen on dijit/tests/robot/Dialog_ally.html on IE8\r\n\t\t\t// because the dijit/focus.js domReady() callback doesn't execute until after the test starts running.\r\n\t\t\twhile(isDomReady && (!domReady || domReady._Q.length == 0) && (require.idle ? require.idle() : true) && loadQ.length){\r\n\t\t\t\tvar f = loadQ.shift();\r\n\t\t\t\ttry{\r\n\t\t\t\t\tf();\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\t// force the dojo.js on(\"error\") handler do display the message\r\n\t\t\t\t\te.info = e.message;\r\n\t\t\t\t\tif(require.signal){\r\n\t\t\t\t\t\trequire.signal(\"error\", e);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tonLoadRecursiveGuard = 0;\r\n\t\t};\r\n\r\n\t// Check if we should run the next queue operation whenever require() finishes loading modules or domReady\r\n\t// finishes processing it's queue.\r\n\trequire.on && require.on(\"idle\", onEvent);\r\n\tif(domReady){\r\n\t\tdomReady._onQEmpty = onEvent;\r\n\t}\r\n\r\n\tvar ready = dojo.ready = dojo.addOnLoad = function(priority, context, callback){\r\n\t\t// summary:\r\n\t\t//\t\tAdd a function to execute on DOM content loaded and all requested modules have arrived and been evaluated.\r\n\t\t//\t\tIn most cases, the `domReady` plug-in should suffice and this method should not be needed.\r\n\t\t//\r\n\t\t//\t\tWhen called in a non-browser environment, just checks that all requested modules have arrived and been\r\n\t\t//\t\tevaluated.\r\n\t\t// priority: Integer?\r\n\t\t//\t\tThe order in which to exec this callback relative to other callbacks, defaults to 1000\r\n\t\t// context: Object?|Function\r\n\t\t//\t\tThe context in which to run execute callback, or a callback if not using context\r\n\t\t// callback: Function?\r\n\t\t//\t\tThe function to execute.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tSimple DOM and Modules ready syntax\r\n\t\t//\t|\trequire([\"dojo/ready\"], function(ready){\r\n\t\t//\t|\t\tready(function(){ alert(\"Dom ready!\"); });\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tUsing a priority\r\n\t\t//\t|\trequire([\"dojo/ready\"], function(ready){\r\n\t\t//\t|\t\tready(2, function(){ alert(\"low priority ready!\"); })\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tUsing context\r\n\t\t//\t|\trequire([\"dojo/ready\"], function(ready){\r\n\t\t//\t|\t\tready(foo, function(){\r\n\t\t//\t|\t\t\t// in here, this == foo\r\n\t\t//\t|\t\t});\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tUsing dojo/hitch style args:\r\n\t\t//\t|\trequire([\"dojo/ready\"], function(ready){\r\n\t\t//\t|\t\tvar foo = { dojoReady: function(){ console.warn(this, \"dojo dom and modules ready.\"); } };\r\n\t\t//\t|\t\tready(foo, \"dojoReady\");\r\n\t\t//\t|\t});\r\n\r\n\t\tvar hitchArgs = lang._toArray(arguments);\r\n\t\tif(typeof priority != \"number\"){\r\n\t\t\tcallback = context;\r\n\t\t\tcontext = priority;\r\n\t\t\tpriority = 1000;\r\n\t\t}else{\r\n\t\t\thitchArgs.shift();\r\n\t\t}\r\n\t\tcallback = callback ?\r\n\t\t\tlang.hitch.apply(dojo, hitchArgs) :\r\n\t\t\tfunction(){\r\n\t\t\t\tcontext();\r\n\t\t\t};\r\n\t\tcallback.priority = priority;\r\n\t\tfor(var i = 0; i < loadQ.length && priority >= loadQ[i].priority; i++){}\r\n\t\tloadQ.splice(i, 0, callback);\r\n\t\tonEvent();\r\n\t};\r\n\r\n\thas.add(\"dojo-config-addOnLoad\", 1);\r\n\tif(has(\"dojo-config-addOnLoad\")){\r\n\t\tvar dca = dojo.config.addOnLoad;\r\n\t\tif(dca){\r\n\t\t\tready[(lang.isArray(dca) ? \"apply\" : \"call\")](dojo, dca);\r\n\t\t}\r\n\t}\r\n\r\n\tif(has(\"dojo-sync-loader\") && dojo.config.parseOnLoad && !dojo.isAsync){\r\n\t\tready(99, function(){\r\n\t\t\tif(!dojo.parser){\r\n\t\t\t\tdojo.deprecated(\"Add explicit require(['dojo/parser']);\", \"\", \"2.0\");\r\n\t\t\t\trequire([\"dojo/parser\"]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tif(domReady){\r\n\t\tdomReady(handleDomReady);\r\n\t}else{\r\n\t\thandleDomReady();\r\n\t}\r\n\r\n\treturn ready;\r\n});\r\n"]}