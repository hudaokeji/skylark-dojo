{"version":3,"sources":["request.js"],"names":["define","request"],"mappings":";;;;;;;AAAAA,QACC,sBAGE,SAASC,GA2EX,OAAOA","file":"../request.js","sourcesContent":["define([\r\n\t'./request/default!'/*=====,\r\n\t'./_base/declare',\r\n\t'./promise/Promise' =====*/\r\n], function(request/*=====, declare, Promise =====*/){\r\n\t/*=====\r\n\trequest = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend a request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tThe URL to request.\r\n\t\t// options: dojo/request.__Options?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\trequest.__Promise = declare(Promise, {\r\n\t\t// response: dojo/promise/Promise\r\n\t\t//\t\tA promise resolving to an object representing\r\n\t\t//\t\tthe response from the server.\r\n\t});\r\n\trequest.__BaseOptions = declare(null, {\r\n\t\t// query: String|Object?\r\n\t\t//\t\tQuery parameters to append to the URL.\r\n\t\t// data: String|Object?\r\n\t\t//\t\tData to transfer.  This is ignored for GET and DELETE\r\n\t\t//\t\trequests.\r\n\t\t// preventCache: Boolean?\r\n\t\t//\t\tWhether to append a cache-busting parameter to the URL.\r\n\t\t// timeout: Integer?\r\n\t\t//\t\tMilliseconds to wait for the response.  If this time\r\n\t\t//\t\tpasses, the then the promise is rejected.\r\n\t\t// handleAs: String?\r\n\t\t//\t\tHow to handle the response from the server.  Default is\r\n\t\t//\t\t'text'.  Other values are 'json', 'javascript', and 'xml'.\r\n\t});\r\n\trequest.__MethodOptions = declare(null, {\r\n\t\t// method: String?\r\n\t\t//\t\tThe HTTP method to use to make the request.  Must be\r\n\t\t//\t\tuppercase.\r\n\t});\r\n\trequest.__Options = declare([request.__BaseOptions, request.__MethodOptions]);\r\n\r\n\trequest.get = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend an HTTP GET request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tURL to request\r\n\t\t// options: dojo/request.__BaseOptions?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\trequest.post = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend an HTTP POST request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tURL to request\r\n\t\t// options: dojo/request.__BaseOptions?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\trequest.put = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend an HTTP POST request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tURL to request\r\n\t\t// options: dojo/request.__BaseOptions?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\trequest.del = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend an HTTP DELETE request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tURL to request\r\n\t\t// options: dojo/request.__BaseOptions?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\t=====*/\r\n\treturn request;\r\n});\r\n"]}